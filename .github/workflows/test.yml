name: Testing

on:
  workflow_dispatch: null
  push:
    branches:
      - main
  pull_request: null

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: 'stable'
      - run: go version

      - name: Run tidy
        run: make tidy

      - name: Run fmt
        run: go fmt ./...

      - name: Fail if changes
        run: git diff-index --exit-code HEAD

      - name: Run linter
        run: make lint

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Python deps
        run: pip install requests wheel boto3

      - name: Run tests and save json report
        run: |
          timestamp=$(date +'%Y%m%d%H%M')
          report_filename="${timestamp}_linodego_test_report.json"

          make test ARGS="-json" | tee "$report_filename"
        env:
          SKIP_LINT: 1

      - name: Install go-junit-report
        run: |
          go get -u github.com/jstemmer/go-junit-report
        env:
          GO111MODULE: on

      - name: Convert JSON Report to XML
        run: |
          filename=$(ls | grep -E '^[0-9]{12}_linodego_test_report\.json') 
          xml_filename=$(echo "$filename" | sed 's/\.json$/.xml/')
          go-junit-report < "$filename" > "$xml_filename"
        env:
          GO111MODULE: on

      - name: Add additional information to XML report
        run: |
          filename=$(ls | grep -E '^[0-9]{12}_linodego_test_report\.xml$') 
          python scripts/add_to_xml_test_report.py \
          --branch_name "${{ env.RELEASE_VERSION }}" \
          --gha_run_id "$GITHUB_RUN_ID" \
          --gha_run_number "$GITHUB_RUN_NUMBER" \
          --xmlfile "${filename}"

      - name: Upload test results to bucket
        run: |
          report_filename=$(ls | grep -E '^[0-9]{12}_linodego_test_report\.xml$')
          python3 scripts/test_report_upload_script.py "${report_filename}"
        env:
          LINODE_CLI_TOKEN: ${{ secrets.SHARED_DX_TOKEN }}
          LINODE_CLI_OBJ_ACCESS_KEY: ${{ secrets.LINODE_CLI_OBJ_ACCESS_KEY }}
          LINODE_CLI_OBJ_SECRET_KEY: ${{ secrets.LINODE_CLI_OBJ_SECRET_KEY }}

